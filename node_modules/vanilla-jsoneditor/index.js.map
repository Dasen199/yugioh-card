{"version":3,"file":"index.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/globals.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/spread.js","../node_modules/svelte/src/runtime/internal/Component.js","../src/lib/utils/debug.ts","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/svelte/src/shared/version.js","../src/lib/utils/uniqueId.ts","../src/lib/utils/numberUtils.ts","../src/lib/utils/typeUtils.ts","../src/lib/utils/arrayUtils.ts","../src/lib/utils/jsonUtils.ts","../src/lib/types.ts","../src/lib/utils/domUtils.ts","../src/lib/utils/navigatorUtils.ts","../src/lib/utils/keyBindings.ts","../src/lib/components/modals/popup/AbsolutePopupEntry.svelte","../src/lib/components/modals/popup/AbsolutePopup.svelte","../src/lib/utils/stringUtils.ts","../src/lib/plugins/query/jsonQueryLanguage.ts","../node_modules/svelte-awesome/package/components/svg/Raw.svelte","../node_modules/svelte-awesome/package/components/svg/Svg.svelte","../node_modules/svelte-awesome/package/components/Icon.svelte","../src/lib/plugins/value/components/BooleanToggle.svelte","../src/lib/components/controls/ColorPickerPopup.svelte","../src/lib/plugins/value/components/ColorPicker.svelte","../src/lib/constants.ts","../src/lib/logic/expandItemsSections.ts","../src/lib/typeguards.ts","../src/lib/logic/documentState.ts","../src/lib/logic/selection.ts","../src/lib/utils/cssUtils.ts","../src/lib/plugins/value/components/utils/getValueClass.ts","../src/lib/components/controls/EditableDiv.svelte","../src/lib/plugins/value/components/EditableValue.svelte","../src/lib/logic/operations.ts","../src/lib/logic/search.ts","../src/lib/components/modes/treemode/highlight/SearchResultHighlighter.svelte","../src/lib/plugins/value/components/ReadonlyValue.svelte","../src/lib/components/controls/tooltip/Tooltip.svelte","../src/lib/components/controls/tooltip/tooltip.ts","../src/lib/plugins/value/components/TimestampTag.svelte","../src/lib/plugins/value/renderValue.ts","../src/lib/utils/pathUtils.ts","../src/lib/components/modals/transformModalStates.ts","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/svelte-select/filter.js","../node_modules/svelte-select/get-items.js","../node_modules/svelte-select/ChevronIcon.svelte","../node_modules/svelte-select/ClearIcon.svelte","../node_modules/svelte-select/LoadingIcon.svelte","../node_modules/svelte-select/Select.svelte","../node_modules/svelte-floating-ui/index.js","../src/lib/components/modals/TransformWizard.svelte","../src/lib/components/controls/selectQueryLanguage/SelectQueryLanguage.svelte","../src/lib/components/modals/Header.svelte","../src/lib/components/modals/TransformModalHeader.svelte","../src/lib/components/controls/createAutoScrollHandler.ts","../src/lib/assets/jump.js/src/easing.ts","../src/lib/assets/jump.js/src/jump.ts","../src/lib/logic/history.ts","../src/lib/utils/timeUtils.ts","../src/lib/logic/validation.ts","../src/lib/components/controls/createFocusTracker.ts","../src/lib/components/controls/Message.svelte","../src/lib/components/controls/ValidationErrorsOverview.svelte","../src/lib/actions/onEscape.ts","../src/lib/components/modals/Modal.svelte","../src/lib/components/modals/CopyPasteModal.svelte","../src/lib/components/controls/Menu.svelte","../src/lib/components/modals/repair/JSONRepairComponent.svelte","../src/lib/components/modals/JSONRepairModal.svelte","../src/lib/components/modes/treemode/CollapsedItems.svelte","../src/lib/components/controls/contextmenu/ContextMenuPointer.svelte","../src/lib/components/modes/treemode/JSONKey.svelte","../src/lib/components/modes/treemode/JSONValue.svelte","../src/lib/components/modes/treemode/singleton.ts","../src/lib/logic/dragging.ts","../src/lib/components/modes/treemode/ValidationErrorIcon.svelte","../src/lib/components/modes/treemode/JSONNode.svelte","../src/lib/img/customFontawesomeIcons.ts","../src/lib/components/modes/treemode/menu/TreeMenu.svelte","../src/lib/components/modes/treemode/Welcome.svelte","../src/lib/logic/sort.ts","../src/lib/components/controls/navigationBar/NavigationBarDropdown.svelte","../src/lib/components/controls/navigationBar/NavigationBarItem.svelte","../src/lib/utils/copyToClipboard.ts","../src/lib/components/controls/navigationBar/NavigationBarPathEditor.svelte","../src/lib/components/controls/navigationBar/NavigationBar.svelte","../src/lib/components/controls/SearchBox.svelte","../src/lib/logic/table.ts","../src/lib/logic/actions.ts","../src/lib/components/controls/JSONPreview.svelte","../src/lib/components/controls/contextmenu/ContextMenuButton.svelte","../src/lib/components/controls/DropdownButton.svelte","../src/lib/components/controls/contextmenu/ContextMenuDropDownButton.svelte","../src/lib/components/controls/contextmenu/ContextMenu.svelte","../src/lib/components/modes/treemode/TreeMode.svelte","../src/lib/components/modes/treemode/contextmenu/createTreeContextMenuItems.ts","../src/lib/utils/readonlyProxy.ts","../src/lib/components/modals/TransformModal.svelte","../src/lib/utils/noop.ts","../src/lib/utils/fileUtils.ts","../src/lib/components/modes/textmode/menu/TextMenu.svelte","../src/lib/components/modes/textmode/StatusBar.svelte","../src/lib/components/modes/textmode/codemirror/codemirror-theme.ts","../src/lib/actions/resizeObserver.ts","../src/lib/components/modes/textmode/TextMode.svelte","../src/lib/components/modes/tablemode/menu/TableMenu.svelte","../src/lib/components/modes/tablemode/tag/InlineValue.svelte","../src/lib/components/modes/tablemode/ColumnHeader.svelte","../src/lib/components/modes/tablemode/TableModeWelcome.svelte","../src/lib/components/modes/tablemode/RefreshColumnHeader.svelte","../src/lib/components/modes/tablemode/TableMode.svelte","../src/lib/components/modes/tablemode/contextmenu/createTableContextMenuItems.ts","../src/lib/components/modes/JSONEditorRoot.svelte","../src/lib/components/modals/JSONEditorModal.svelte","../src/lib/components/modals/sortModalStates.ts","../src/lib/components/modals/SortModal.svelte","../src/lib/components/JSONEditor.svelte","../src/lib/plugins/value/components/EnumValue.svelte","../src/lib/utils/jsonSchemaUtils.ts","../src/lib/plugins/value/renderJSONSchemaEnum.ts","../src/lib/plugins/validator/createAjvValidator.ts","../src/lib/plugins/query/jmespathQueryLanguage.ts","../src/lib/plugins/query/jsonpathQueryLanguage.ts","../src/lib/plugins/query/lodashQueryLanguage.ts","../src/lib/plugins/query/javascriptQueryLanguage.ts","../src/lib/index-vanilla.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","/**\n * Create a lightweight debug function to log output into the browser console.\n *\n * Inspired by https://github.com/visionmedia/debug (some code is copied below)\n *\n * Usage:\n *\n *     import { createDebug } from './debug.js'\n *\n *     const debug = createDebug('my:namespace')\n *\n *     debug('testing:', 2 + 2)\n *\n * By default, logging is only enabled when a property DEBUG is set in the\n * localStorage of your browser:\n *\n *     localStorage['debug'] = '*'\n *     localStorage['debug'] = 'jsoneditor:*'\n *     localStorage['debug'] = 'jsoneditor:TreeMode'\n *\n * The actual value of 'debug' is used to filter the debug messages.\n * The value can end with a '*' wild card to match any remaining text.\n *\n * By providing a value for `enabled`, you can choose conditions to\n * enable/disable debugging if you want, for example some flag determining\n * whether in development or production.\n */\nexport function createDebug(\n  namespace: string,\n  enabled = enableDebug(namespace)\n): (...args: unknown[]) => void {\n  if (!enabled) {\n    return noop\n  }\n\n  const color = selectColor(namespace)\n\n  return function debug(...args) {\n    console.log(`%c${namespace}`, `color:${color}`, ...args)\n  }\n}\n\nfunction enableDebug(namespace: string) {\n  const debug = tryReadLocalStorage('debug')\n\n  return debug?.endsWith('*') ? namespace.startsWith(debug.slice(0, -1)) : namespace === debug\n}\n\nfunction noop() {\n  // no operation\n}\n\n/**\n * Try read a specific key from localStorage\n */\nfunction tryReadLocalStorage(key: string): string | undefined {\n  try {\n    if (typeof window !== 'undefined' && typeof window.localStorage !== 'undefined') {\n      // reading local storage can fail for example because of security restrictions\n      return window.localStorage[key]\n    }\n  } catch (error) {\n    // we do nothing with the error, not needed in this specific case\n  }\n\n  return undefined\n}\n\n/**\n * Selects a color for a debug namespace\n *\n * Code is copied from the following source: https://github.com/visionmedia/debug\n *\n * @param namespace The namespace string for the debug instance to be colored\n * @return An ANSI color code for the given namespace\n */\nfunction selectColor(namespace: string): string {\n  let hash = 0\n\n  for (let i = 0; i < namespace.length; i++) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i)\n    hash |= 0 // Convert to 32bit integer\n  }\n\n  return colors[Math.abs(hash) % colors.length]\n}\n\nconst colors = [\n  '#0000CC',\n  '#0099FF',\n  '#009400',\n  '#8dd200',\n  '#CCCC00',\n  '#CC9933',\n  '#ae04e7',\n  '#ff35d7',\n  '#FF3333',\n  '#FF6600',\n  '#FF9933',\n  '#FFCC33'\n]\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","let id = 0\n\nexport function uniqueId(): number {\n  id++\n  return id\n}\n","export function int(value: string): number {\n  return parseInt(value, 10)\n}\n\nexport function isDigit(char: string): boolean {\n  return DIGIT_REGEX.test(char)\n}\n\nconst DIGIT_REGEX = /^[0-9]$/\n\n// TODO: unit test\nexport function containsNumber(value: string): boolean {\n  return NUMBER_REGEX.test(value)\n}\n\nconst NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/\n","// TODO: unit test typeUtils.js\n\nimport { containsNumber } from './numberUtils.js'\nimport type { JSONParser } from '../types.js'\n\n/**\n * Test whether a value is an Object (and not an Array or Class)\n */\nexport function isObject(value: unknown): value is Record<string, unknown> {\n  // note that we check constructor.name, not constructor === Object,\n  // so we can use objects created in a different JS realm like an iframe.\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    (value.constructor === undefined || value.constructor.name === 'Object')\n  )\n}\n\n/**\n * Test whether a value is an Object or an Array (and not a Class)\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isObjectOrArray(value: unknown): value is Object | Array<unknown> {\n  // Note that we check constructor.name, not constructor === Object,\n  // so we can use objects created in a different JS realm like an iframe.\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    (value.constructor === undefined ||\n      value.constructor.name === 'Object' ||\n      value.constructor.name === 'Array')\n  )\n}\n\n/**\n * Test whether a value is a boolean\n *\n * @param {*} value\n * @return {boolean}\n */\nexport function isBoolean(value: unknown): value is boolean {\n  return value === true || value === false\n}\n\n/**\n * Test whether a value is a timestamp in milliseconds after the year 2000.\n */\nexport function isTimestamp(value: unknown): boolean {\n  const YEAR_2000 = 946684800000\n\n  if (typeof value === 'number') {\n    return (\n      value > YEAR_2000 &&\n      isFinite(value) &&\n      Math.floor(value) === value &&\n      !isNaN(new Date(value).valueOf())\n    )\n  }\n\n  if (typeof value === 'bigint') {\n    return isTimestamp(Number(value))\n  }\n\n  // try getting the primitive value if that is different. For example when having a LosslessNumber\n  try {\n    const valueOf = value ? value.valueOf() : value\n    if (valueOf !== value) {\n      return isTimestamp(valueOf)\n    }\n  } catch (err) {\n    return false\n  }\n\n  return false\n}\n\n/**\n * Get the applied color given a color name or code\n * Returns the color if the input is a valid color, and returns null otherwise.\n *\n * Example output:\n *\n *     'rgba(255,0,0,0.7)' or 'rgb(255,0,0)'\n *\n * Source: https://stackoverflow.com/questions/6386090/validating-css-color-names/33184805\n */\nexport function getColorCSS(color: string): string | undefined {\n  colorTestDiv = colorTestDiv || window.document.createElement('div')\n\n  colorTestDiv.style.color = ''\n  colorTestDiv.style.color = color\n\n  const applied = colorTestDiv.style.color\n  return applied !== '' ? applied.replace(/\\s+/g, '').toLowerCase() : undefined\n}\nlet colorTestDiv: HTMLDivElement | undefined = undefined\n\n/**\n * Test if a string contains a valid color name or code.\n * Returns true if a valid color, false otherwise\n */\nexport function isColor(value: unknown): boolean {\n  const maxColorLength = 99\n  return typeof value === 'string' && value.length < maxColorLength && !!getColorCSS(value)\n}\n\n/**\n * Get the type of the value\n */\nexport function valueType(value: unknown, parser: JSONParser): string {\n  // primitive types\n  if (\n    typeof value === 'number' ||\n    typeof value === 'string' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined'\n  ) {\n    return typeof value\n  }\n  if (typeof value === 'bigint') {\n    return 'number' // we return number here, not bigint: all numeric types should return the same name\n  }\n  if (value === null) {\n    return 'null'\n  }\n\n  if (Array.isArray(value)) {\n    return 'array'\n  }\n  if (isObject(value)) {\n    // plain object only\n    return 'object'\n  }\n\n  // unknown type (like a LosslessNumber). Try out what stringfying results in\n  const valueStr = parser.stringify(value)\n  if (valueStr && containsNumber(valueStr)) {\n    return 'number'\n  }\n  if (valueStr === 'true' || valueStr === 'false') {\n    return 'boolean'\n  }\n  if (valueStr === 'null') {\n    return 'null'\n  }\n\n  return 'unknown'\n}\n\n/**\n * Test whether a text contains a url (matches when a string starts\n * with 'http://*' or 'https://*' and has no whitespace characters)\n */\nconst isUrlRegex = /^https?:\\/\\/\\S+$/\nexport function isUrl(text: unknown): boolean {\n  return typeof text === 'string' && isUrlRegex.test(text)\n}\n\n/**\n * Convert contents of a string to the correct JSON type. This can be a string,\n * a number, a boolean, etc\n */\nexport function stringConvert(str: string, parser: JSONParser): unknown {\n  if (str === '') {\n    return ''\n  }\n\n  const strTrim = str.trim()\n\n  if (strTrim === 'null') {\n    return null\n  }\n\n  if (strTrim === 'true') {\n    return true\n  }\n\n  if (strTrim === 'false') {\n    return false\n  }\n\n  if (containsNumber(strTrim)) {\n    return parser.parse(strTrim)\n  }\n\n  return str\n}\n\n/**\n * Test whether a string contains a numeric, boolean, or null value.\n * Returns true when the string contains a number, boolean, or null.\n */\nexport function isStringContainingPrimitiveValue(str: unknown): boolean {\n  // note that we can safely use JSON parser here instead of the configured JSONParser,\n  // since we do not actually use the parsed number, just want to check that it is not a string\n  return typeof str === 'string' && typeof stringConvert(str, JSON) !== 'string'\n}\n\n/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value: string): boolean {\n  return INTEGER_REGEX.test(value)\n}\n\nconst INTEGER_REGEX = /^-?[0-9]+$/\n","import { isObject } from './typeUtils.js'\nimport type { JSONPath } from 'immutable-json-patch'\nimport { compileJSONPointer, parseJSONPointer } from 'immutable-json-patch'\nimport { isEqual } from 'lodash-es'\n\nconst MAX_ITEM_PATHS_COLLECTION = 10000\nconst ROOT_PATH: JSONPath = []\n\n/**\n * Comparator to sort an array in ascending order\n *\n * Usage:\n *     [4,2,5].sort(compareAsc)    // [2,4,5]\n */\nexport function compareAsc<T>(a: T, b: T): number {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\n/**\n * Comparator to sort an array in ascending order\n *\n * Usage:\n *     [4,2,5].sort(compareDesc)   // [5,4,2]\n */\nexport function compareDesc<T>(a: T, b: T): number {\n  return a > b ? -1 : a < b ? 1 : 0\n}\n\n/**\n * Test whether all items of an array are strictly equal\n */\nexport function strictShallowEqual<T>(a: Array<T>, b: Array<T>): boolean {\n  if (a.length !== b.length) {\n    return false\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function compareArrays<T>(a: Array<T>, b: Array<T>): number {\n  const minLength = Math.min(a.length, b.length)\n\n  for (let i = 0; i < minLength; i++) {\n    if (a[i] < b[i]) {\n      return -1\n    }\n\n    if (a[i] > b[i]) {\n      return 1\n    }\n  }\n\n  return a.length - b.length\n}\n\n/**\n * Get the paths of all nested properties in the items of an array\n * @param array\n * @param includeObjects If true, object and array paths are returned as well\n */\nexport function getNestedPaths(array: unknown, includeObjects = false): JSONPath[] {\n  const pointersMap: Record<string, boolean> = {}\n\n  if (!Array.isArray(array)) {\n    throw new TypeError('Array expected')\n  }\n\n  function recurseNestedPaths(obj: unknown, path: JSONPath) {\n    const isValue = !Array.isArray(obj) && !isObject(obj)\n\n    if (isValue || (includeObjects && path.length > 0)) {\n      pointersMap[compileJSONPointer(path)] = true\n    }\n\n    if (isObject(obj)) {\n      Object.keys(obj).forEach((key) => {\n        recurseNestedPaths(obj[key], path.concat(key))\n      })\n    }\n  }\n\n  const max = Math.min(array.length, MAX_ITEM_PATHS_COLLECTION)\n  for (let i = 0; i < max; i++) {\n    const item = array[i]\n    recurseNestedPaths(item, ROOT_PATH)\n  }\n\n  const pathsArray = Object.keys(pointersMap).sort()\n\n  return pathsArray.map(parseJSONPointer)\n}\n\n/**\n * Invoke the callback with\n * @param start   Included start index\n * @param end       Excluded end index. End must be larger or equal to start\n * @param iteratee\n */\n// TODO: write tests\nexport function forEachIndex(start: number, end: number, iteratee: (index: number) => void) {\n  if (end <= start) {\n    return\n  }\n\n  for (let index = start; index < end; index++) {\n    iteratee(index)\n  }\n}\n\n/**\n * Limit the number of items in an array\n */\n// TODO: write unit test\nexport function limit<T>(array: Array<T>, max: number): Array<T> {\n  return array.length > max ? array.slice(0, max) : array\n}\n\n/**\n * Convert an array into an object having the array indices as keys\n */\nexport function arrayToObject<T>(array: Array<T>): Record<number, T> {\n  return {\n    ...array\n  }\n}\n\n/**\n * Get the values of an object as an array\n */\nexport function objectToArray<T>(object: Record<string, T>): Array<T> {\n  return Object.values(object)\n}\n\n/**\n * Test whether an array starts with a sub array\n */\nexport function arrayStartsWith<T>(\n  array: T[],\n  searchArray: T[],\n  equal: (a: T, b: T) => boolean = isEqual\n): boolean {\n  for (let i = 0; i < searchArray.length; i++) {\n    if (!equal(array[i], searchArray[i])) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Move a set of items inside an array\n */\nexport function moveItems<T>(array: T[], index: number, count: number, offset: number): T[] {\n  // TODO: check boundaries: index+offset >= 0, index+offset+count<array.length, index+count<array.length, etc\n  const copy = array.slice(0)\n  const moving: T[] = copy.splice(index, count)\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  copy.splice.apply(copy, [index + offset, 0, ...moving])\n  return copy\n}\n\n/**\n * Take samples out of a large array, equally spread from start till end\n */\nexport function forEachSample<T>(\n  array: T[],\n  maxSampleCount: number,\n  callback: (item: T, index: number, array: T[]) => void\n) {\n  if (array.length < maxSampleCount) {\n    array.forEach(callback)\n  } else {\n    const step = maxSampleCount > 1 ? (array.length - 1) / (maxSampleCount - 1) : array.length\n    for (let i = 0; i < maxSampleCount; i++) {\n      const index = Math.floor(i * step)\n      callback(array[index], index, array)\n    }\n  }\n}\n\nexport function insertItemsAt<T>(array: T[], index: number, items: T[]): T[] {\n  return array.slice(0, index).concat(items).concat(array.slice(index))\n}\n","import type { JSONPath } from 'immutable-json-patch'\nimport { compileJSONPointer } from 'immutable-json-patch'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport jsonSourceMap from 'json-source-map'\nimport { jsonrepair } from 'jsonrepair'\nimport { isObject, isObjectOrArray, valueType } from './typeUtils.js'\nimport { arrayToObject, objectToArray } from './arrayUtils.js'\nimport type {\n  Content,\n  JSONContent,\n  JSONParser,\n  ParseError,\n  TextContent,\n  TextLocation\n} from '../types'\nimport { int } from './numberUtils.js'\n\n/**\n * Parse the JSON. if this fails, try to repair and parse.\n * Throws an exception when the JSON is invalid and could not be parsed.\n */\nexport function parseAndRepair(jsonText: string, parser: JSONParser): unknown {\n  try {\n    return parser.parse(jsonText)\n  } catch (err) {\n    // this can also throw\n    return parser.parse(jsonrepair(jsonText))\n  }\n}\n\n/**\n * Parse the JSON and if needed repair it.\n * When not valid, undefined is returned.\n */\nexport function parseAndRepairOrUndefined(\n  partialJson: string,\n  parser: JSONParser\n): unknown | undefined {\n  try {\n    return parseAndRepair(partialJson, parser)\n  } catch (err) {\n    return undefined\n  }\n}\n\n// TODO: deduplicate the logic in repairPartialJson and parseAndRepairPartialJson ?\nexport function parsePartialJson(partialJson: string, parse: (text: string) => unknown): unknown {\n  // for now: dumb brute force approach: simply try out a few things...\n\n  // remove trailing comma\n  partialJson = partialJson.replace(END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX, '')\n\n  try {\n    return parse(partialJson)\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    return parse('[' + partialJson + ']')\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    return parse('{' + partialJson + '}')\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  throw new Error('Failed to parse partial JSON')\n}\n\n/**\n * Repair partial JSON\n */\nexport function repairPartialJson(partialJson: string): string {\n  // for now: dumb brute force approach: simply try out a few things...\n\n  // remove trailing comma\n  partialJson = partialJson.replace(END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX, '')\n\n  try {\n    return jsonrepair(partialJson)\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    const repaired = jsonrepair('[' + partialJson + ']')\n    return repaired.substring(1, repaired.length - 1) // remove the outer [...] again\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    const repaired = jsonrepair('{' + partialJson + '}')\n    return repaired.substring(1, repaired.length - 1) // remove the outer {...} again\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  throw new Error('Failed to repair partial JSON')\n}\n\n// test whether a string ends with a comma, followed by zero or more white space characters\nconst END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX = /,\\s*$/\n\n/**\n * Normalize a parse error message like\n *     \"Unexpected token i in JSON at position 4\"\n * or\n *     \"JSON.parse: expected property name or '}' at line 2 column 3 of the JSON data\"\n * and return the line and column numbers in an object\n *\n * Note that the returned line and column number in the object are zero-based,\n * and in the message are one based (human-readable)\n */\nexport function normalizeJsonParseError(jsonText: string, parseErrorMessage: string): ParseError {\n  const positionMatch = POSITION_REGEX.exec(parseErrorMessage)\n\n  if (positionMatch) {\n    // a message from Chrome, like \"Unexpected token i in JSON at line 2 column 3\"\n    const position = int(positionMatch[2])\n\n    const line = countCharacterOccurrences(jsonText, '\\n', 0, position)\n    const lastIndex = jsonText.lastIndexOf('\\n', position)\n    const column = position - lastIndex - 1\n\n    return {\n      position,\n      line,\n      column,\n      message: parseErrorMessage.replace(POSITION_REGEX, () => {\n        return `line ${line + 1} column ${column + 1}`\n      })\n    }\n  } else {\n    // a message from Firefox, like \"JSON.parse: expected property name or '}' at line 2 column 3 of the JSON data\"\n    const lineMatch = LINE_REGEX.exec(parseErrorMessage)\n    const lineOneBased = lineMatch ? int(lineMatch[1]) : undefined\n    const line = lineOneBased !== undefined ? lineOneBased - 1 : undefined\n\n    const columnMatch = COLUMN_REGEX.exec(parseErrorMessage)\n    const columnOneBased = columnMatch ? int(columnMatch[1]) : undefined\n    const column = columnOneBased !== undefined ? columnOneBased - 1 : undefined\n\n    const position =\n      line !== undefined && column !== undefined\n        ? calculatePosition(jsonText, line, column)\n        : undefined\n\n    // line and column are one based in the message\n    return {\n      position,\n      line,\n      column,\n      message: parseErrorMessage.replace(/^JSON.parse: /, '').replace(/ of the JSON data$/, '')\n    }\n  }\n}\n\n/**\n * Calculate the position in the text based on a line and column number\n * @param text\n * @param line     Zero-based line number\n * @param column   Zero-based column number\n */\nexport function calculatePosition(text: string, line: number, column: number): number | undefined {\n  let index = text.indexOf('\\n')\n  let i = 1\n\n  while (i < line && index !== -1) {\n    index = text.indexOf('\\n', index + 1)\n    i++\n  }\n\n  return index !== -1\n    ? index + column + 1 // +1 for the return character itself\n    : undefined\n}\n\nexport function countCharacterOccurrences(\n  text: string,\n  character: string,\n  start = 0,\n  end = text.length\n) {\n  let count = 0\n\n  for (let i = start; i < end; i++) {\n    if (text.charAt(i) === character) {\n      count++\n    }\n  }\n\n  return count\n}\n\n/**\n * Find the text location of a JSON path\n */\n// TODO: write unit tests\nexport function findTextLocation(text: string, path: JSONPath): TextLocation {\n  try {\n    const jsmap = jsonSourceMap.parse(text)\n\n    const pointerName = compileJSONPointer(path)\n    const pointer = jsmap.pointers[pointerName]\n    if (pointer) {\n      return {\n        path,\n        line: pointer.key ? pointer.key.line : pointer.value ? pointer.value.line : 0,\n        column: pointer.key ? pointer.key.column : pointer.value ? pointer.value.column : 0,\n        from: pointer.key ? pointer.key.pos : pointer.value ? pointer.value.pos : 0,\n        to: pointer.keyEnd ? pointer.keyEnd.pos : pointer.valueEnd ? pointer.valueEnd.pos : 0\n      }\n    }\n  } catch (err) {\n    console.error(err)\n  }\n\n  return {\n    path,\n    line: 0,\n    column: 0,\n    from: 0,\n    to: 0\n  }\n}\n\n/**\n * Convert a JSON object, array, or value to another type\n * If it cannot be converted, an error is thrown\n */\nexport function convertValue(\n  value: unknown,\n  type: 'value' | 'object' | 'array',\n  parser: JSONParser\n): unknown {\n  // FIXME: improve the TypeScript here, there are a couple of conversions\n  if (type === 'array') {\n    if (Array.isArray(value)) {\n      // nothing to do\n      return value\n    }\n\n    if (isObject(value)) {\n      return objectToArray(value)\n    }\n\n    if (typeof value === 'string') {\n      try {\n        const parsedValue = parser.parse(value)\n\n        if (Array.isArray(parsedValue)) {\n          return parsedValue\n        }\n\n        if (isObject(parsedValue)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          return objectToArray(parsedValue)\n        }\n      } catch (e) {\n        //we could not parse the string, so we return the string as the first key of the array\n        return [value]\n      }\n    }\n\n    //all other cases, we return the value as the first key of the array, same as the parsing error under the string case\n    return [value]\n  }\n\n  if (type === 'object') {\n    if (Array.isArray(value)) {\n      return arrayToObject(value)\n    }\n\n    if (isObject(value)) {\n      // nothing to do\n      return value\n    }\n\n    if (typeof value === 'string') {\n      try {\n        const parsedValue = parser.parse(value)\n\n        if (isObject(parsedValue)) {\n          return parsedValue\n        }\n\n        if (Array.isArray(parsedValue)) {\n          return arrayToObject(parsedValue)\n        }\n      } catch (e) {\n        //we could not parse the string, so we return the string as the first value of the object with key 'value'\n        return { value: value }\n      }\n    }\n\n    //all other cases, we return the value keyed under \"value\", same as the parsing error under the string case\n    return { value: value }\n  }\n\n  if (type === 'value') {\n    if (isObjectOrArray(value)) {\n      return parser.stringify(value)\n    }\n\n    // nothing to do\n    return value\n  }\n\n  throw new Error(`Cannot convert ${valueType(value, parser)} to ${type}`)\n}\n\n/**\n * Check whether provided value is valid a content type for JSONEditor\n * Returns a string with validation error message when there is an issue,\n * or null otherwise\n */\nexport function validateContentType(content: unknown): string | undefined {\n  if (!isObject(content)) {\n    return 'Content must be an object'\n  }\n\n  if (content.json !== undefined) {\n    if (content.text !== undefined) {\n      return 'Content must contain either a property \"json\" or a property \"text\" but not both'\n    } else {\n      return undefined\n    }\n  } else {\n    if (content.text === undefined) {\n      return 'Content must contain either a property \"json\" or a property \"text\"'\n    } else if (typeof content.text !== 'string') {\n      return (\n        'Content \"text\" property must be a string containing a JSON document. ' +\n        'Did you mean to use the \"json\" property instead?'\n      )\n    } else {\n      return undefined\n    }\n  }\n}\n\n/**\n * Check whether a value is Content (TextContent or JSONContent)\n */\nexport function isContent(content: unknown): content is Content {\n  return (\n    isObject(content) && (typeof content.json !== 'undefined' || typeof content.text === 'string')\n  )\n}\n\n/**\n * Check whether content contains text (and not JSON)\n */\nexport function isTextContent(content: unknown): content is TextContent {\n  return isObject(content) && typeof content.text === 'string'\n}\n\n/**\n * Check whether content contains json\n */\nexport function isJSONContent(content: unknown): content is JSONContent {\n  return isObject(content) && typeof content.json !== 'undefined'\n}\n\n/**\n * Convert Content into TextContent if it is JSONContent, else leave it as is\n */\nexport function toTextContent(\n  content: Content,\n  indentation: number | string | undefined = undefined,\n  parser: JSONParser = JSON\n): TextContent {\n  return isTextContent(content)\n    ? content\n    : { text: parser.stringify(content.json, null, indentation) as string }\n}\n\n/**\n * Convert Content into TextContent if it is JSONContent, else leave it as is\n * @throws {SyntaxError} Will throw a parse error when the text contents does not contain valid JSON\n */\nexport function toJSONContent(content: Content, parser: JSONParser = JSON): JSONContent {\n  return isJSONContent(content) ? content : { json: parser.parse(content.text) }\n}\n\n/**\n * Get the contents as Text. If the contents is JSON, the JSON will be parsed.\n */\nexport function getText(content: Content, indentation: number | string, parser: JSONParser) {\n  return toTextContent(content, indentation, parser).text\n}\n\n/**\n * Returns true when the (estimated) size of the contents exceeds the\n * provided maxSize.\n * @param content\n * @param maxSize  Maximum content size in bytes\n */\nexport function isLargeContent(content: Content, maxSize: number): boolean {\n  return estimateSerializedSize(content, maxSize) > maxSize\n}\n\n/**\n * A rough, fast estimation on whether a document is larger than given size\n * when serialized.\n *\n * maxSize is an optional max size in bytes. When reached, size estimation will\n * be cancelled. This is useful when you're only interested in knowing whether\n * the size exceeds a certain maximum size.\n */\nexport function estimateSerializedSize(content: Content, maxSize = Infinity): number {\n  if (isTextContent(content)) {\n    return content.text.length\n  }\n\n  const json = content.json\n\n  let estimatedSize = 0\n\n  function recurse(json: unknown) {\n    if (Array.isArray(json)) {\n      // open and close bracket, commas between items\n      estimatedSize += 2 + (json.length - 1)\n\n      if (estimatedSize > maxSize) {\n        return\n      }\n\n      for (let i = 0; i < json.length; i++) {\n        const item = json[i]\n\n        recurse(item)\n\n        if (estimatedSize > maxSize) {\n          return\n        }\n      }\n    } else if (isObject(json)) {\n      const keys = Object.keys(json)\n\n      // open and close brackets, separators between all keys and values, comma's between key/value pairs\n      estimatedSize += 2 + keys.length + (keys.length - 1)\n\n      for (let k = 0; k < keys.length; k++) {\n        const key = keys[k]\n        const value = json[key]\n\n        // key length and double quotes around it\n        estimatedSize += key.length + 2\n\n        recurse(value)\n      }\n    } else if (typeof json === 'string') {\n      estimatedSize += json.length + 2 // string length plus two for the double quote characters\n    } else {\n      // true, false, null, number\n      estimatedSize += String(json).length\n    }\n  }\n\n  recurse(json)\n\n  return estimatedSize\n}\n\nconst POSITION_REGEX = /(position|char) (\\d+)/\nconst LINE_REGEX = /line (\\d+)/\nconst COLUMN_REGEX = /column (\\d+)/\n\n/**\n * Check whether the actual functions of parse and stringify are strictly equal.\n * The object holding the functions may be a differing instance.\n */\nexport function isEqualParser(a: JSONParser, b: JSONParser): boolean {\n  return a.parse === b.parse && a.stringify === b.stringify\n}\n\n/**\n * Apply a fast and cheap heuristic to determine whether the content needs formatting (i.e. is compact).\n */\nexport function needsFormatting(jsonText: string): boolean {\n  const maxLength = 999\n  const head = jsonText.substring(0, maxLength).trim()\n  return !head.includes('\\n') && DELIMITER_WITHOUT_SPACING_REGEX.test(head)\n}\n\n// This regex matches cases of a comma or colon NOT followed by a whitespace\nconst DELIMITER_WITHOUT_SPACING_REGEX = /[,:]\\S/\n","import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\nimport type { SvelteComponent } from 'svelte'\nimport type { IconDefinition } from '@fortawesome/free-solid-svg-icons'\nimport type { Action } from 'svelte/action'\n\nexport type TextContent = { text: string }\n\nexport type JSONContent = { json: unknown }\n\nexport type Content = JSONContent | TextContent\n\n// The `JSONParser` interface is compatible with `JSON`,\n// except that JSON.stringify is wrongly defined to return a string whilst it can return a string or undefined\n// see: https://stackoverflow.com/questions/74461780/is-the-official-type-definition-for-json-stringify-wrong\nexport interface JSONParser {\n  parse(\n    text: string,\n    reviver?: ((this: unknown, key: string, value: unknown) => unknown) | null\n  ): unknown\n\n  stringify(\n    value: unknown,\n    replacer?:\n      | ((this: unknown, key: string, value: unknown) => unknown)\n      | Array<number | string>\n      | null,\n    space?: string | number\n  ): string | undefined\n}\n\nexport interface JSONPathParser {\n  parse: (pathStr: string) => JSONPath\n  stringify: (path: JSONPath) => string\n}\n\nexport interface VisibleSection {\n  start: number\n  end: number\n}\n\nexport enum Mode {\n  text = 'text',\n  tree = 'tree',\n  table = 'table'\n}\n\nexport enum SelectionType {\n  after = 'after',\n  inside = 'inside',\n  key = 'key',\n  value = 'value',\n  multi = 'multi',\n  text = 'text' // in text mode\n}\n\nexport enum CaretType {\n  after = 'after',\n  key = 'key',\n  value = 'value',\n  inside = 'inside'\n}\n\nexport interface PathOption {\n  value: JSONPath\n  label: string\n}\n\nexport interface NumberOption {\n  value: 1 | -1\n  label: string\n}\n\nexport interface CaretPosition {\n  path: JSONPath\n  type: CaretType // TODO: refactor this to use SelectionType here, then we can simplify the util functions to turn this into a selection\n}\n\nexport interface ObjectRecursiveState {\n  type: 'object'\n  properties: Record<string, RecursiveState | undefined>\n}\n\nexport interface ArrayRecursiveState {\n  type: 'array'\n  items: Array<RecursiveState | undefined>\n}\n\nexport interface ValueRecursiveState {\n  type: 'value'\n}\n\nexport type RecursiveState = ObjectRecursiveState | ArrayRecursiveState | ValueRecursiveState\n\nexport interface RecursiveStateFactory {\n  createObjectDocumentState: () => ObjectRecursiveState\n  createArrayDocumentState: () => ArrayRecursiveState\n  createValueDocumentState: () => ValueRecursiveState\n}\n\nexport interface ObjectDocumentState extends ObjectRecursiveState {\n  type: 'object'\n  properties: Record<string, DocumentState | undefined>\n  expanded: boolean\n}\n\nexport interface ArrayDocumentState extends ArrayRecursiveState {\n  type: 'array'\n  items: Array<DocumentState | undefined>\n  expanded: boolean\n  visibleSections: VisibleSection[]\n}\n\nexport interface ValueDocumentState extends ValueRecursiveState {\n  type: 'value'\n  enforceString?: boolean\n}\n\nexport type DocumentState = ObjectDocumentState | ArrayDocumentState | ValueDocumentState\n\nexport interface ObjectSearchResults extends ObjectRecursiveState {\n  type: 'object'\n  properties: Record<string, SearchResults | undefined>\n  searchResults?: ExtendedSearchResultItem[]\n}\n\nexport interface ArraySearchResults extends ArrayRecursiveState {\n  type: 'array'\n  items: Array<SearchResults | undefined>\n  searchResults?: ExtendedSearchResultItem[]\n}\n\nexport interface ValueSearchResults extends ValueRecursiveState {\n  type: 'value'\n  searchResults?: ExtendedSearchResultItem[]\n}\n\nexport type SearchResults = ObjectSearchResults | ArraySearchResults | ValueSearchResults\n\nexport type WithSearchResults = SearchResults & {\n  searchResults: ExtendedSearchResultItem[]\n}\n\nexport interface ObjectValidationErrors extends ObjectRecursiveState {\n  type: 'object'\n  properties: Record<string, ValidationErrors | undefined>\n  validationError?: NestedValidationError\n}\n\nexport interface ArrayValidationErrors extends ArrayRecursiveState {\n  type: 'array'\n  items: Array<ValidationErrors | undefined>\n  validationError?: NestedValidationError\n}\n\nexport interface ValueValidationErrors extends ValueRecursiveState {\n  type: 'value'\n  validationError?: NestedValidationError\n}\n\nexport type ValidationErrors =\n  | ObjectValidationErrors\n  | ArrayValidationErrors\n  | ValueValidationErrors\n\nexport interface JSONPatchResult {\n  json: unknown\n  previousJson: unknown\n  undo: JSONPatchDocument\n  redo: JSONPatchDocument\n}\n\nexport type AfterPatchCallback = (\n  patchedJson: unknown,\n  patchedState: DocumentState | undefined,\n  patchedSelection: JSONSelection | undefined\n) =>\n  | {\n      json?: unknown\n      state?: DocumentState | undefined\n      selection?: JSONSelection | undefined\n      sortedColumn?: SortedColumn | undefined\n    }\n  | undefined\n\nexport interface MultiSelection {\n  type: SelectionType.multi\n  anchorPath: JSONPath\n  focusPath: JSONPath\n}\n\nexport interface AfterSelection {\n  type: SelectionType.after\n  path: JSONPath\n}\n\nexport interface InsideSelection {\n  type: SelectionType.inside\n  path: JSONPath\n}\n\nexport interface KeySelection {\n  type: SelectionType.key\n  path: JSONPath\n}\n\nexport interface EditKeySelection extends KeySelection {\n  type: SelectionType.key\n  path: JSONPath\n  edit: true\n  initialValue?: string\n}\n\nexport type ValueSelection = {\n  type: SelectionType.value\n  path: JSONPath\n}\n\nexport interface EditValueSelection extends ValueSelection {\n  type: SelectionType.value\n  path: JSONPath\n  edit: true\n  initialValue?: string\n}\n\nexport type JSONSelection =\n  | MultiSelection\n  | AfterSelection\n  | InsideSelection\n  | KeySelection\n  | EditKeySelection\n  | ValueSelection\n  | EditValueSelection\n\n// TextSelection is the result of EditorSelection.toJSON() from CodeMirror,\n// with an additional `type` property\nexport interface TextSelection {\n  type: SelectionType.text\n  ranges: { anchor: number; head: number }[]\n  main: number\n}\n\nexport type JSONEditorSelection = JSONSelection | TextSelection\n\nexport type ClipboardValues = Array<{ key: string; value: unknown }>\n\nexport interface MenuButton {\n  type: 'button'\n  onClick: (event: MouseEvent) => void\n  icon?: IconDefinition\n  text?: string\n  title?: string\n  className?: string\n  disabled?: boolean\n}\n\nexport interface MenuDropDownButton {\n  type: 'dropdown-button'\n  main: MenuButton\n  width?: string\n  items: MenuButton[]\n}\n\nexport interface MenuLabel {\n  type: 'label'\n  text: string\n}\n\nexport interface MenuSeparator {\n  type: 'separator'\n}\n\nexport interface MenuSpace {\n  type: 'space'\n}\n\nexport type MenuItem = MenuButton | MenuSeparator | MenuSpace\n\nexport interface ContextMenuColumn {\n  type: 'column'\n  items: Array<MenuButton | MenuDropDownButton | MenuLabel | MenuSeparator>\n}\nexport interface ContextMenuRow {\n  type: 'row'\n  items: Array<MenuButton | MenuDropDownButton | ContextMenuColumn>\n}\nexport type ContextMenuItem = MenuButton | MenuDropDownButton | MenuSeparator | ContextMenuRow\n\nexport interface MessageAction {\n  text: string\n  title: string\n  icon?: IconDefinition\n  onClick?: () => void\n  onMouseDown?: () => void\n  disabled?: boolean\n}\n\nexport enum ValidationSeverity {\n  info = 'info',\n  warning = 'warning',\n  error = 'error'\n}\n\nexport interface ValidationError {\n  path: JSONPath\n  message: string\n  severity: ValidationSeverity\n}\n\nexport interface NestedValidationError extends ValidationError {\n  isChildError?: boolean\n}\n\nexport type Validator = (json: unknown) => ValidationError[]\n\nexport interface ParseError {\n  position: number | undefined\n  line: number | undefined\n  column: number | undefined\n  message: string\n}\n\nexport interface ContentParseError {\n  parseError: ParseError\n  isRepairable: boolean\n}\n\nexport interface ContentValidationErrors {\n  validationErrors: ValidationError[]\n}\n\nexport type ContentErrors = ContentParseError | ContentValidationErrors\n\nexport interface RichValidationError extends ValidationError {\n  line: number | undefined\n  column: number | undefined\n  from: number | undefined\n  to: number | undefined\n  actions: Array<{ name: string; apply: () => void }> | undefined\n}\n\nexport interface TextLocation {\n  path: JSONPath\n  line: number\n  column: number\n  from: number\n  to: number\n}\n\nexport interface Section {\n  start: number // start included\n  end: number // end excluded\n}\n\nexport interface QueryLanguage {\n  id: string\n  name: string\n  description: string\n  createQuery: (json: unknown, queryOptions: QueryLanguageOptions) => string\n  executeQuery: (json: unknown, query: string, parser: JSONParser) => unknown\n}\n\nexport interface QueryLanguageOptions {\n  filter?: {\n    path?: JSONPath\n    relation?: '==' | '!=' | '<' | '<=' | '>' | '>='\n    value?: string\n  }\n  sort?: {\n    path?: JSONPath\n    direction?: 'asc' | 'desc'\n  }\n  projection?: {\n    paths?: JSONPath[]\n  }\n}\n\nexport type OnChangeQueryLanguage = (queryLanguageId: string) => void\nexport interface OnChangeStatus {\n  contentErrors: ContentErrors | undefined\n  patchResult: JSONPatchResult | undefined\n}\nexport type OnChange =\n  | ((content: Content, previousContent: Content, status: OnChangeStatus) => void)\n  | undefined\nexport type OnJSONSelect = (selection: JSONSelection) => void\nexport type OnSelect = (selection: JSONEditorSelection | undefined) => void\nexport type OnPatch = (\n  operations: JSONPatchDocument,\n  afterPatch?: AfterPatchCallback\n) => JSONPatchResult\nexport type OnChangeText = (updatedText: string, afterPatch?: AfterPatchCallback) => void\nexport type OnSort = (params: {\n  operations: JSONPatchDocument\n  rootPath: JSONPath\n  itemPath: JSONPath\n  direction: 1 | -1\n}) => void\nexport type OnFind = (findAndReplace: boolean) => void\nexport type OnPaste = (pastedText: string) => void\nexport type OnPasteJson = (pastedJson: PastedJson) => void\nexport type OnExpand = (relativePath: JSONPath) => boolean\nexport type OnRenderValue = (props: RenderValueProps) => RenderValueComponentDescription[]\nexport type OnClassName = (path: JSONPath, value: unknown) => string | undefined\nexport type OnChangeMode = (mode: Mode) => void\nexport type OnContextMenu = (contextMenuProps: AbsolutePopupOptions) => void\nexport type RenderMenuContext = {\n  mode: Mode\n  modal: boolean\n  readOnly: boolean\n}\nexport type OnRenderMenu = (items: MenuItem[], context: RenderMenuContext) => MenuItem[] | undefined\nexport type OnRenderMenuInternal = (items: MenuItem[]) => MenuItem[] | undefined\nexport type RenderContextMenuContext = RenderMenuContext & {\n  selection: JSONEditorSelection | undefined\n}\nexport type OnRenderContextMenu = (\n  items: ContextMenuItem[],\n  context: RenderContextMenuContext\n) => ContextMenuItem[] | false | undefined\nexport type OnRenderContextMenuInternal = (\n  items: ContextMenuItem[]\n) => ContextMenuItem[] | false | undefined\nexport type OnError = (error: Error) => void\nexport type OnFocus = () => void\nexport type OnBlur = () => void\nexport type OnSortModal = (props: SortModalCallback) => void\nexport type OnTransformModal = (props: TransformModalCallback) => void\nexport type OnJSONEditorModal = (props: JSONEditorModalCallback) => void\nexport type FindNextInside = (path: JSONPath) => JSONSelection | undefined\n\nexport interface SearchResultDetails {\n  items: ExtendedSearchResultItem[]\n  activeItem: ExtendedSearchResultItem | undefined\n  activeIndex: number | -1\n}\n\nexport enum SearchField {\n  key = 'key',\n  value = 'value'\n}\n\nexport interface SearchOptions {\n  maxResults?: number\n  columns?: JSONPath[]\n}\n\nexport interface SearchResultItem {\n  path: JSONPath\n  field: SearchField\n  fieldIndex: number\n  start: number\n  end: number\n}\n\nexport interface ExtendedSearchResultItem extends SearchResultItem {\n  active: boolean\n}\n\nexport type EscapeValue = (value: unknown) => string\n\nexport type UnescapeValue = (escapedValue: string) => string\n\nexport interface ValueNormalization {\n  escapeValue: EscapeValue\n  unescapeValue: UnescapeValue\n}\n\nexport type PastedJson = {\n  path: JSONPath\n  contents: unknown\n  onPasteAsJson: () => void\n}\n\nexport interface DragInsideProps {\n  json: unknown\n  selection: JSONSelection\n  deltaY: number\n  items: Array<{ path: JSONPath; height: number }>\n}\n\nexport type DragInsideAction =\n  | { beforePath: JSONPath; offset: number }\n  | { append: true; offset: number }\n\nexport interface RenderedItem {\n  path: JSONPath\n  height: number\n}\n\nexport interface HistoryItem {\n  undo: {\n    patch: JSONPatchDocument | undefined\n    json: unknown | undefined\n    text: string | undefined\n    documentState: DocumentState | undefined\n    selection: JSONSelection | undefined\n    sortedColumn: SortedColumn | undefined\n    textIsRepaired: boolean\n  }\n  redo: {\n    patch: JSONPatchDocument | undefined\n    json: unknown | undefined\n    text: string | undefined\n    documentState: DocumentState | undefined\n    selection: JSONSelection | undefined\n    sortedColumn: SortedColumn | undefined\n    textIsRepaired: boolean\n  }\n}\n\nexport type ConvertType = 'value' | 'object' | 'array'\nexport type InsertType = ConvertType | 'structure'\n\nexport interface PopupEntry {\n  id: number\n  component: typeof SvelteComponent<Record<string, unknown>>\n  props: Record<string, unknown>\n  options: AbsolutePopupOptions\n}\n\nexport interface AbsolutePopupOptions {\n  anchor?: Element\n  position?: 'top' | 'left'\n  left?: number\n  top?: number\n  width?: number\n  height?: number\n  offsetTop?: number\n  offsetLeft?: number\n  showTip?: boolean\n  closeOnOuterClick?: boolean\n  onClose?: () => void\n}\n\nexport interface AbsolutePopupContext {\n  openAbsolutePopup: (\n    component: typeof SvelteComponent<Record<string, unknown>>,\n    props: Record<string, unknown>,\n    options: AbsolutePopupOptions\n  ) => number\n  closeAbsolutePopup: (popupId: number | undefined) => void\n}\n\nexport interface JSONEditorPropsOptional {\n  content?: Content\n  readOnly?: boolean\n  indentation?: number | string\n  tabSize?: number\n  mode?: Mode\n  mainMenuBar?: boolean\n  navigationBar?: boolean\n  statusBar?: boolean\n  askToFormat?: boolean\n  escapeControlCharacters?: boolean\n  escapeUnicodeCharacters?: boolean\n  flattenColumns?: boolean\n  parser?: JSONParser\n  validator?: Validator | undefined\n  validationParser?: JSONParser\n  pathParser?: JSONPathParser\n\n  queryLanguages?: QueryLanguage[]\n  queryLanguageId?: string\n\n  onChangeQueryLanguage?: OnChangeQueryLanguage\n  onChange?: OnChange\n  onRenderValue?: OnRenderValue\n  onClassName?: OnClassName\n  onRenderMenu?: OnRenderMenu\n  onRenderContextMenu?: OnRenderContextMenu\n  onChangeMode?: OnChangeMode\n  onSelect?: OnSelect\n  onError?: OnError\n  onFocus?: OnFocus\n  onBlur?: OnBlur\n}\n\nexport interface JSONEditorModalProps {\n  content: Content\n  path: JSONPath\n  onPatch: OnPatch\n\n  readOnly: boolean\n  indentation: number | string\n  tabSize: number\n  mainMenuBar: boolean\n  navigationBar: boolean\n  statusBar: boolean\n  askToFormat: boolean\n  escapeControlCharacters: boolean\n  escapeUnicodeCharacters: boolean\n  flattenColumns: boolean\n  parser: JSONParser\n  validator: Validator | undefined\n  validationParser: JSONParser\n  pathParser: JSONPathParser\n\n  onRenderValue: OnRenderValue\n  onClassName: OnClassName\n  onRenderMenu: OnRenderMenu\n  onRenderContextMenu: OnRenderContextMenu\n  onSortModal: (props: SortModalCallback) => void\n  onTransformModal: (props: TransformModalCallback) => void\n  onClose: () => void\n}\n\nexport interface JSONEditorContext {\n  mode: Mode\n  readOnly: boolean\n  parser: JSONParser\n  normalization: ValueNormalization\n  getJson: () => unknown | undefined\n  getDocumentState: () => DocumentState | undefined\n  findElement: (path: JSONPath) => Element | undefined\n  findNextInside: FindNextInside\n  focus: () => void\n  onPatch: OnPatch\n  onSelect: OnJSONSelect\n  onFind: OnFind\n  onPasteJson: (newPastedJson: PastedJson) => void\n  onRenderValue: OnRenderValue\n}\n\nexport interface TreeModeContext extends JSONEditorContext {\n  getJson: () => unknown | undefined\n  getDocumentState: () => DocumentState | undefined\n  getSelection: () => JSONSelection | undefined\n  findElement: (path: JSONPath) => Element | undefined\n  onInsert: (type: InsertType) => void\n  onExpand: (path: JSONPath, expanded: boolean, recursive?: boolean) => void\n  onExpandSection: (path: JSONPath, section: Section) => void\n  onContextMenu: OnContextMenu\n  onClassName: OnClassName\n  onDrag: (event: MouseEvent) => void\n  onDragEnd: () => void\n}\n\nexport interface RenderValueProps {\n  path: JSONPath\n  value: unknown\n  mode: Mode\n  readOnly: boolean\n  enforceString: boolean\n  selection: JSONSelection | undefined\n  searchResultItems: SearchResultItem[] | undefined\n  isEditing: boolean\n  parser: JSONParser\n  normalization: ValueNormalization\n  onPatch: OnPatch\n  onPasteJson: OnPasteJson\n  onSelect: OnJSONSelect\n  onFind: OnFind\n  findNextInside: FindNextInside\n  focus: () => void\n}\n\nexport type RenderValuePropsOptional = Partial<RenderValueProps>\n\nexport interface DraggingState {\n  initialTarget: Element\n  initialClientY: number\n  initialContentTop: number\n  selectionStartIndex: number\n  selectionItemsCount: number\n  items: RenderedItem[]\n  offset: number\n  didMoveItems: boolean\n}\n\nexport type RenderValueComponentDescription = SvelteComponentRenderer | SvelteActionRenderer\n\nexport interface SvelteComponentRenderer {\n  component: typeof SvelteComponent<RenderValuePropsOptional>\n  props: Record<string, unknown>\n}\n\nexport interface SvelteActionRenderer {\n  action: Action<HTMLElement, Record<string, unknown>>\n  props: Record<string, unknown>\n}\n\nexport interface TransformModalOptions {\n  id?: string\n  rootPath?: JSONPath\n  onTransform?: (state: {\n    operations: JSONPatchDocument\n    json: unknown\n    transformedJson: unknown\n  }) => void\n  onClose?: () => void\n}\n\nexport interface TransformModalCallback {\n  id: string\n  json: unknown\n  rootPath: JSONPath\n  onTransform: (operations: JSONPatchDocument) => void\n  onClose: () => void\n}\n\nexport interface TransformModalProps extends TransformModalCallback {\n  id: string\n  json: unknown\n  rootPath: JSONPath\n  indentation: number | string\n  escapeControlCharacters: boolean\n  escapeUnicodeCharacters: boolean\n  parser: JSONParser\n  parseMemoizeOne: JSONParser['parse']\n  validationParser: JSONParser\n  pathParser: JSONPathParser\n\n  queryLanguages: QueryLanguage[]\n  queryLanguageId: string\n  onChangeQueryLanguage: OnChangeQueryLanguage\n\n  onRenderValue: OnRenderValue\n  onRenderMenu: OnRenderMenuInternal\n  onRenderContextMenu: OnRenderContextMenuInternal\n  onClassName: OnClassName\n\n  onTransform: (operations: JSONPatchDocument) => void\n  onClose: () => void\n}\n\nexport interface SortModalCallback {\n  id: string\n  json: unknown\n  rootPath: JSONPath\n  onSort: OnSort\n  onClose: () => void\n}\n\nexport interface JSONRepairModalProps {\n  text: string\n  onParse: (text: string) => void\n  onRepair: (text: string) => string\n  onApply: (repairedText: string) => void\n  onClose: () => void\n}\n\nexport interface JSONEditorModalCallback {\n  content: Content\n  path: JSONPath\n  onPatch: OnPatch\n  onClose: () => void\n}\n\nexport enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n\nexport enum UpdateSelectionAfterChange {\n  no = 'no',\n  self = 'self',\n  nextInside = 'nextInside'\n}\n\nexport interface TableCellIndex {\n  rowIndex: number\n  columnIndex: number\n}\n\nexport interface SortedColumn {\n  path: JSONPath\n  sortDirection: SortDirection\n}\n\n// TODO: work out the JSONSchema type in detail.\n//  Ideally, we use use Schema from Ajv, but this interface isn't worked out either\nexport type JSONSchema = Record<string, unknown>\nexport type JSONSchemaDefinitions = Record<string, JSONSchema>\nexport type JSONSchemaEnum = Array<unknown>\n","import type { ValueNormalization } from '$lib/types.js'\nimport { SelectionType } from '$lib/types.js'\nimport type { JSONPath } from 'immutable-json-patch'\nimport { compileJSONPointer, parseJSONPointer } from 'immutable-json-patch'\nimport { map, minBy } from 'lodash-es'\n\n/**\n * Create serialization functions to escape and stringify text,\n * and the other way around: to parse and unescape text.\n */\nexport function createNormalizationFunctions({\n  escapeControlCharacters,\n  escapeUnicodeCharacters\n}: {\n  escapeControlCharacters: boolean\n  escapeUnicodeCharacters: boolean\n}): ValueNormalization {\n  if (escapeControlCharacters) {\n    if (escapeUnicodeCharacters) {\n      return normalizeControlAndUnicode\n    } else {\n      return normalizeControl\n    }\n  } else {\n    if (escapeUnicodeCharacters) {\n      return normalizeUnicode\n    } else {\n      return normalizeNothing\n    }\n  }\n}\n\nconst normalizeControlAndUnicode = {\n  escapeValue: (value: unknown) => jsonEscapeUnicode(jsonEscapeControl(String(value))),\n  unescapeValue: (value: string) => jsonUnescapeControl(jsonUnescapeUnicode(value))\n}\n\nconst normalizeControl = {\n  escapeValue: (value: unknown) => jsonEscapeControl(String(value)),\n  unescapeValue: (value: string) => jsonUnescapeControl(value)\n}\n\nconst normalizeUnicode = {\n  escapeValue: (value: unknown) => jsonEscapeUnicode(String(value)),\n  unescapeValue: (value: string) => jsonUnescapeUnicode(value)\n}\n\nconst normalizeNothing = {\n  escapeValue: (value: unknown) => String(value),\n  unescapeValue: (value: string) => value\n}\n\n/**\n * Source:  https://stackoverflow.com/questions/12271547/shouldnt-json-stringify-escape-unicode-characters\n */\nexport function jsonEscapeUnicode(value: string): string {\n  return value.replace(/[^\\x20-\\x7F]/g, (x) => {\n    if (x === '\\b' || x === '\\f' || x === '\\n' || x === '\\r' || x === '\\t') {\n      return x\n    }\n\n    return '\\\\u' + ('000' + x.codePointAt(0)?.toString(16)).slice(-4)\n  })\n}\n\nexport function jsonUnescapeUnicode(value: string): string {\n  return value.replace(/\\\\u[a-fA-F0-9]{4}/g, (x) => {\n    try {\n      const unescaped: string = JSON.parse('\"' + x + '\"')\n      // the resolved character can be a control character like \" or \\n,\n      // that would result in invalid JSON, so we need to keep that escaped\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return controlCharacters[unescaped] || unescaped\n    } catch (err) {\n      return x\n    }\n  })\n}\n\nconst controlCharacters = {\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // escaped forward slash '\\/' is the same as '/', we can't escape/unescape it\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t'\n  // unicode is handled separately\n}\n\nconst escapedControlCharacters = {\n  '\\\\\"': '\"',\n  '\\\\\\\\': '\\\\',\n  // escaped forward slash '\\/' is the same as '/', we can't escape/unescape it\n  '\\\\/': '/',\n  '\\\\b': '\\b',\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t'\n  // unicode is handled separately\n}\n\nexport function jsonEscapeControl(value: string): string {\n  return value.replace(/[\"\\b\\f\\n\\r\\t\\\\]/g, (x) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return controlCharacters[x] || x\n  })\n}\n\nexport function jsonUnescapeControl(value: string): string {\n  return value.replace(/\\\\[\"bfnrt\\\\]/g, (x) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return escapedControlCharacters[x] || x\n  })\n}\n\nexport function addNewLineSuffix(value: unknown): string {\n  if (typeof value !== 'string') {\n    return String(value)\n  }\n\n  if (value.endsWith('\\n')) {\n    // DOM innerText strips the last \\n, therefore we add an extra \\n here\n    return value + '\\n'\n  }\n\n  return value\n}\n\n/**\n * Remove a newline suffix from text returned by element.innerText, it adds\n * one return too much.\n */\nexport function removeNewLineSuffix(text: string): string {\n  return text.replace(/\\n$/, '')\n}\n\n// regular expression matching one or multiple return characters with all their\n// enclosing white spaces\nexport function removeReturnsAndSurroundingWhitespace(text: string): string {\n  return text.replace(/(\\b|^)\\s*(\\b|$)/g, (match) => {\n    return /\\n/.exec(match) ? '' : match\n  })\n}\n\nexport function isChildOfNodeName(element: Element, nodeName: string): boolean {\n  return isChildOf(element, (e) => e.nodeName.toUpperCase() === nodeName.toUpperCase())\n}\n\nexport function isChildOfAttribute(element: Element, name: string, value: string): boolean {\n  return isChildOf(element, (e) => hasAttribute(e, name, value))\n}\n\n// test whether a DOM element is a content editable div\nexport function isContentEditableDiv(element: HTMLElement): boolean {\n  return element.nodeName === 'DIV' && element.contentEditable === 'true'\n}\n\n// test whether a DOM element is an \"input\" with type \"text\"\nexport function isTextInput(element: HTMLInputElement): boolean {\n  return (\n    element.nodeName === 'INPUT' &&\n    element.type !== undefined &&\n    element.type.toLowerCase() === 'text'\n  )\n}\n\nfunction hasAttribute(element: Element, name: string, value: string): boolean {\n  return typeof element.getAttribute === 'function' && element.getAttribute(name) === value\n}\n\n/**\n * Test if the element or one of its parents has a certain predicate\n * Can be use for example to check whether the element or it's parent has\n * a specific attribute or nodeName.\n */\nexport function isChildOf(element: Element, predicate: (element: Element) => boolean): boolean {\n  return !!findParent(element, predicate)\n}\n\n/**\n * Test if the element or one of its parents has a certain predicate\n * Can be use for example to check whether the element or it's parent has\n * a specific attribute or nodeName.\n * @param {HTMLElement} element\n * @param {function (element: HTMLElement) : boolean} predicate\n * @returns {HTMLElement | undefined}\n */\nexport function findParent(\n  element: Element,\n  predicate: (element: Element) => boolean\n): Element | undefined {\n  let e: Element | undefined = element\n\n  while (e && !predicate(e)) {\n    e = e.parentNode as Element\n  }\n\n  return e\n}\n\n/**\n * Set the cursor to the end of a content editable div\n * Source: https://stackoverflow.com/questions/13513329/set-cursor-to-the-end-of-contenteditable-div\n * @param {HTMLElement} element\n */\nexport function setCursorToEnd(element: HTMLElement) {\n  if (element.firstChild == null) {\n    element.focus()\n    return\n  }\n\n  const range = document.createRange()\n  const selection = window.getSelection()\n  range.setStart(element, 1)\n  range.collapse(true)\n  selection?.removeAllRanges()\n  selection?.addRange(range)\n}\n\n/**\n * Gets a DOM element's Window.  This is normally just the global `window`\n * variable, but if we opened a child window, it may be different.\n */\nexport function getWindow(element: Element): Window | undefined {\n  return element?.ownerDocument?.defaultView ?? undefined\n}\n\nexport function activeElementIsChildOf(element: Element) {\n  const window = getWindow(element)\n  const activeElement = window?.document.activeElement\n  return activeElement ? isChildOf(activeElement, (e) => e === element) : false\n}\n\n/**\n * Traverse over the parents of the element until a node is found with the\n * searched for node name. If the element itself contains the nodeName, the\n * element itself will be returned\n */\nexport function findParentWithNodeName(element: Element, nodeName: string): Element | undefined {\n  return findParent(element, (e) => e.nodeName === nodeName)\n}\n\nexport function getSelectionTypeFromTarget(target: Element): SelectionType {\n  if (isChildOfAttribute(target, 'data-type', 'selectable-key')) {\n    return SelectionType.key\n  }\n\n  if (isChildOfAttribute(target, 'data-type', 'selectable-value')) {\n    return SelectionType.value\n  }\n\n  if (isChildOfAttribute(target, 'data-type', 'insert-selection-area-inside')) {\n    return SelectionType.inside\n  }\n\n  if (isChildOfAttribute(target, 'data-type', 'insert-selection-area-after')) {\n    return SelectionType.after\n  }\n\n  return SelectionType.multi\n}\n\n/**\n * Encode a path into a string that can be used as attribute in HTML\n */\nexport function encodeDataPath(path: JSONPath): string {\n  return encodeURIComponent(compileJSONPointer(path))\n}\n\n/**\n * Decode a path that was stringified for use as an HTML attribute\n */\nexport function decodeDataPath(pathStr: string): JSONPath {\n  return parseJSONPointer(decodeURIComponent(pathStr))\n}\n\n/**\n * Find the data path of the given element. Traverses the parent nodes until find\n */\nexport function getDataPathFromTarget(target: Element): JSONPath | undefined {\n  const parent = findParent(target, (element) => {\n    return element?.hasAttribute ? element.hasAttribute('data-path') : false\n  })\n\n  const dataPath = parent?.getAttribute('data-path') ?? undefined\n  return dataPath ? decodeDataPath(dataPath) : undefined\n}\n\n/**\n * Find the nearest element in a given context menu with buttons or inputs\n */\n// TODO: unit test\nexport function findNearestElement<T extends Element>({\n  allElements,\n  currentElement,\n  direction,\n  hasPrio = () => true,\n  margin = 10\n}: {\n  allElements: T[]\n  currentElement: T\n  direction: 'Up' | 'Down' | 'Left' | 'Right'\n  margin?: number\n  hasPrio?: (element: T) => boolean\n}): T | undefined {\n  const all = map(allElements.filter(isVisible), calculateCenter)\n  const current = calculateCenter(currentElement)\n\n  interface CenterLocation {\n    x: number\n    y: number\n    rect: DOMRect\n    element: T\n  }\n\n  function isVisible(element: T): boolean {\n    const rect = element.getBoundingClientRect()\n    return rect.width > 0 && rect.height > 0\n  }\n\n  function calculateCenter(element: T): CenterLocation {\n    const rect = element.getBoundingClientRect()\n    return {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n      rect,\n      element\n    }\n  }\n\n  const isOnSameRow = (a: CenterLocation, b: CenterLocation) => Math.abs(a.y - b.y) < margin\n  const isLeft = (a: CenterLocation, b: CenterLocation) => a.rect.left + margin < b.rect.left\n  const isRight = (a: CenterLocation, b: CenterLocation) => a.rect.right > b.rect.right + margin\n  const isAbove = (a: CenterLocation, b: CenterLocation) => a.y + margin < b.y\n  const isBelow = (a: CenterLocation, b: CenterLocation) => a.y > b.y + margin\n\n  function distance(a: CenterLocation, b: CenterLocation, weightY = 1): number {\n    const diffX = a.x - b.x\n    const diffY = (a.y - b.y) * weightY\n    return Math.sqrt(diffX * diffX + diffY * diffY)\n  }\n  const distanceToCurrent = (candidate: CenterLocation) => distance(candidate, current)\n  const distanceToCurrentWeighted = (candidate: CenterLocation) => distance(candidate, current, 10)\n\n  if (direction === 'Left' || direction === 'Right') {\n    // First we find the first button left from the current button on the same row\n    // if not found, search the closest button left/right from current button\n    const candidatesLeft =\n      direction === 'Left'\n        ? all.filter((button) => isLeft(button, current))\n        : all.filter((button) => isRight(button, current))\n    const candidatesLeftOnRow = candidatesLeft.filter((button) => isOnSameRow(button, current))\n    const nearest =\n      minBy(candidatesLeftOnRow, distanceToCurrent) ||\n      minBy(candidatesLeft, distanceToCurrentWeighted)\n\n    return nearest?.element\n  }\n\n  if (direction === 'Up' || direction === 'Down') {\n    // first we only search through the prio buttons\n    // if there were no matching prio buttons, search all matching buttons\n    const candidates =\n      direction === 'Up'\n        ? all.filter((button) => isAbove(button, current))\n        : all.filter((button) => isBelow(button, current))\n    const prioCandidates = candidates.filter((button) => hasPrio(button.element))\n    const nearest = minBy(prioCandidates, distanceToCurrent) || minBy(candidates, distanceToCurrent)\n\n    return nearest?.element\n  }\n\n  return undefined\n}\n","declare global {\n  // extend with the userAgentData: NavigatorUAData property (currently experimental)\n  // see https://developer.mozilla.org/en-US/docs/Web/API/Navigator/userAgentData\n  interface Navigator {\n    userAgentData?: {\n      platform: string\n    }\n  }\n}\n\nexport function isMacDevice() {\n  return (\n    typeof navigator !== 'undefined' &&\n    (navigator?.platform?.toUpperCase().includes('MAC') ??\n      navigator?.userAgentData?.platform?.toUpperCase().includes('MAC') ??\n      false)\n  )\n}\n","// inspiration: https://github.com/andrepolischuk/keycomb\n\nimport { isMacDevice } from './navigatorUtils.js'\n\n// KeyComboEvent is a subset of KeyboardEvent\nexport interface KeyComboEvent {\n  ctrlKey: boolean\n  metaKey: boolean\n  altKey: boolean\n  shiftKey: boolean\n  key: string\n}\n\n/**\n * Get the active key combination from a keyboard event.\n * For example returns \"Ctrl+Shift+ArrowUp\" or \"Ctrl+A\"\n *\n * Returns the same output on both Windows and Mac:\n * meta keys \"Ctrl\" (\"Command\" on Mac), and \"Alt\" (\"Alt\" or \"Option\" on Mac)\n * So pressing \"Command\" and \"A\"on Mac will return \"Ctrl+A\"\n */\nexport function keyComboFromEvent(\n  event: KeyComboEvent,\n  separator = '+',\n  isMac = isMacDevice\n): string {\n  const combi = []\n\n  if (isCtrlKeyDown(event, isMac)) {\n    // on Mac this is called Command or Cmd\n    combi.push('Ctrl')\n  }\n  if (event.altKey) {\n    // on Mac this is called Option\n    combi.push('Alt')\n  }\n  if (event.shiftKey) {\n    combi.push('Shift')\n  }\n\n  const keyName = event.key.length === 1 ? event.key.toUpperCase() : event.key\n  if (!(keyName in metaKeys)) {\n    // prevent output like 'Ctrl+Ctrl'\n    combi.push(keyName)\n  }\n\n  return combi.join(separator)\n}\n\n/**\n * Test whether the Ctrl key (windows, linux) or Command key (mac) is down\n */\nexport function isCtrlKeyDown(\n  event: { ctrlKey: boolean; metaKey: boolean },\n  isMac = isMacDevice\n): boolean {\n  // metaKey is the Command key ⌘ on a Mac (but the Windows Key ⊞ on Windows)\n  return event.ctrlKey || (event.metaKey && isMac())\n}\n\nconst metaKeys = {\n  Ctrl: true,\n  Command: true,\n  Control: true,\n  Alt: true,\n  Option: true,\n  Shift: true\n}\n","<script lang=\"ts\">\n  import type { AbsolutePopupOptions, PopupEntry } from '$lib/types.js'\n  import { onMount } from 'svelte'\n  import { isChildOf } from '$lib/utils/domUtils.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n\n  export let popup: PopupEntry\n  export let closeAbsolutePopup: (popupId: number) => void\n\n  let refRootPopup: HTMLDivElement\n  let refHiddenInput: HTMLInputElement\n\n  onMount(focus)\n\n  function closeWhenOutside(event: Event) {\n    if (\n      popup.options &&\n      popup.options.closeOnOuterClick &&\n      !isChildOf(event.target as HTMLElement, (e) => e === refRootPopup)\n    ) {\n      closeAbsolutePopup(popup.id)\n    }\n  }\n\n  function handleWindowMouseDown(event: Event) {\n    closeWhenOutside(event)\n  }\n\n  function handleMouseDownInside(event: Event) {\n    event.stopPropagation()\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    if (combo === 'Escape') {\n      event.preventDefault()\n      event.stopPropagation()\n      closeAbsolutePopup(popup.id)\n    }\n  }\n\n  function handleScrollWheel(event: Event) {\n    closeWhenOutside(event)\n  }\n\n  function calculateStyle(refRootPopup: HTMLDivElement, options: AbsolutePopupOptions) {\n    function calculatePosition() {\n      if (options.anchor) {\n        const { anchor, width = 0, height = 0, offsetTop = 0, offsetLeft = 0, position } = options\n        const { left, top, bottom, right } = anchor.getBoundingClientRect()\n\n        const positionAbove =\n          position === 'top' || (top + height > window.innerHeight && top > height)\n        const positionLeft =\n          position === 'left' || (left + width > window.innerWidth && left > width)\n\n        return {\n          left: positionLeft ? right - offsetLeft : left + offsetLeft,\n          top: positionAbove ? top - offsetTop : bottom + offsetTop,\n          positionAbove,\n          positionLeft\n        }\n      } else if (typeof options.left === 'number' && typeof options.top === 'number') {\n        const { left, top, width = 0, height = 0 } = options\n\n        const positionAbove = top + height > window.innerHeight && top > height\n        const positionLeft = left + width > window.innerWidth && left > width\n\n        return {\n          left,\n          top,\n          positionAbove,\n          positionLeft\n        }\n      } else {\n        throw new Error('Invalid config: pass either \"left\" and \"top\", or pass \"anchor\"')\n      }\n    }\n\n    const rootRect = refRootPopup.getBoundingClientRect()\n    const { left, top, positionAbove, positionLeft } = calculatePosition()\n\n    const verticalStyling = positionAbove\n      ? `bottom: ${rootRect.top - top}px;`\n      : `top: ${top - rootRect.top}px;`\n\n    const horizontalStyling = positionLeft\n      ? `right: ${rootRect.left - left}px;`\n      : `left: ${left - rootRect.left}px;`\n\n    return verticalStyling + horizontalStyling\n  }\n\n  function focus() {\n    if (refHiddenInput) {\n      refHiddenInput.focus()\n    }\n  }\n</script>\n\n<svelte:window\n  on:mousedown|capture={handleWindowMouseDown}\n  on:keydown|capture={handleKeyDown}\n  on:wheel|capture={handleScrollWheel}\n/>\n\n<div\n  role=\"none\"\n  bind:this={refRootPopup}\n  class=\"jse-absolute-popup\"\n  on:mousedown={handleMouseDownInside}\n  on:keydown={handleKeyDown}\n>\n  {#if refRootPopup}\n    <div class=\"jse-absolute-popup-content\" style={calculateStyle(refRootPopup, popup.options)}>\n      <input\n        type=\"text\"\n        readonly\n        tabindex=\"-1\"\n        class=\"jse-hidden-input\"\n        bind:this={refHiddenInput}\n      />\n      <svelte:component this={popup.component} {...popup.props} />\n    </div>\n  {/if}\n</div>\n\n<style src=\"./AbsolutePopupEntry.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { createDebug } from '$lib/utils/debug.js'\n  import { setContext, SvelteComponent } from 'svelte'\n  import type { AbsolutePopupOptions, PopupEntry, AbsolutePopupContext } from '$lib/types'\n  import { uniqueId } from '$lib/utils/uniqueId.js'\n  import AbsolutePopupEntry from './AbsolutePopupEntry.svelte'\n\n  const debug = createDebug('jsoneditor:AbsolutePopup')\n\n  let popups: PopupEntry[] = []\n\n  function openAbsolutePopup(\n    component: typeof SvelteComponent<Record<string, unknown>>,\n    props: Record<string, unknown>,\n    options: AbsolutePopupOptions\n  ): number {\n    debug('open...', props, options)\n\n    const popup: PopupEntry = {\n      id: uniqueId(),\n      component: component,\n      props: props || {},\n      options: options || {}\n    }\n\n    popups = [...popups, popup]\n\n    return popup.id\n  }\n\n  function closeAbsolutePopup(popupId: number | undefined) {\n    const popupIndex = popups.findIndex((popup) => popup.id === popupId)\n\n    if (popupIndex !== -1) {\n      const popup = popups[popupIndex]\n      if (popup.options.onClose) {\n        popup.options.onClose()\n      }\n\n      popups = popups.filter((popup) => popup.id !== popupId)\n    }\n  }\n\n  $: debug('popups', popups)\n\n  setContext<AbsolutePopupContext>('absolute-popup', { openAbsolutePopup, closeAbsolutePopup })\n</script>\n\n{#each popups as popup}\n  <AbsolutePopupEntry {popup} {closeAbsolutePopup} />\n{/each}\n\n<slot />\n","/**\n * Find a unique name. Suffix the name with ' (copy)', '(copy 2)', etc\n * until a unique name is found\n * @param name    Proposed name\n * @param keys    Array with existing keys\n */\nexport function findUniqueName(name: string, keys: string[]): string {\n  const keysSet = new Set(keys)\n\n  // remove any \" (copy)\" or \" (copy 2)\" suffix from the name\n  const nameWithoutCopySuffix = name.replace(/ \\(copy( \\d+)?\\)$/, '')\n\n  let validName = name\n  let i = 1\n\n  while (keysSet.has(validName)) {\n    const copy = 'copy' + (i > 1 ? ' ' + i : '')\n    validName = `${nameWithoutCopySuffix} (${copy})`\n    i++\n  }\n\n  return validName\n}\n\n/**\n * Transform a text into lower case with the first character upper case\n */\nexport function toCapital(text: string): string {\n  return text && text.length > 0 ? text[0].toUpperCase() + text.substring(1).toLowerCase() : text\n}\n\nexport function compareStrings(a: string, b: string): -1 | 0 | 1 {\n  return a < b ? -1 : a > b ? 1 : 0\n}\n\n/**\n * Duplicate a piece of text\n */\nexport function duplicateInText(text: string, anchorOffset: number, focusOffset: number): string {\n  const startOffset = Math.min(anchorOffset, focusOffset)\n  const endOffset = Math.max(anchorOffset, focusOffset)\n\n  return (\n    text.slice(0, endOffset) +\n    text.slice(startOffset, endOffset) + // the duplicated piece of the text\n    text.slice(endOffset)\n  )\n}\n\n/**\n * Truncate a text to a maximum length.\n * When truncated, the text will pe appended with ellipsis '...'\n * @param text Text to be truncated\n * @param maxLength Maximum allowed length for the text including ellipsis\n */\nexport function truncate(text: string, maxLength: number): string {\n  const ellipsis = '...'\n  const maxTextLength = maxLength - ellipsis.length\n\n  return text.length > maxLength ? text.substring(0, maxTextLength) + ellipsis : text\n}\n\n/**\n * Cast contents of a string to the correct type.\n * This can be a string, a number, a boolean, null, undefined, etc\n * @param str\n * @return parsed string\n */\nexport function parseString(str: string): string | number | boolean | null | undefined {\n  if (str === '') {\n    return ''\n  }\n\n  const lower = str.toLowerCase()\n  if (lower === 'null') {\n    return null\n  }\n  if (lower === 'true') {\n    return true\n  }\n  if (lower === 'false') {\n    return false\n  }\n  if (lower === 'undefined') {\n    return undefined\n  }\n\n  const num = Number(str) // will nicely fail with '123ab'\n  const numFloat = parseFloat(str) // will nicely fail with '  '\n  if (!isNaN(num) && !isNaN(numFloat)) {\n    return num\n  }\n\n  return str\n}\n","import { jsonquery, type JSONQuery, parse, stringify } from '@jsonquerylang/jsonquery'\nimport { parseString } from '$lib/utils/stringUtils.js'\nimport type { QueryLanguage, QueryLanguageOptions } from '$lib/types.js'\nimport type { JSONPath } from 'immutable-json-patch'\n\nconst description = `\n<p>\n  Enter a <a href=\"https://jsonquerylang.org\" target=\"_blank\" \n  rel=\"noopener noreferrer\">JSON Query</a> function to filter, sort, or transform the data.\n  You can use functions like <code>get</code>, <code>filter</code>,\n  <code>sort</code>, <code>pick</code>, <code>groupBy</code>, <code>uniq</code>, etcetera. \n  Example query: <code>filter(.age >= 18)</code>\n</p>\n`\n\nexport const jsonQueryLanguage: QueryLanguage = {\n  id: 'jsonquery',\n  name: 'JSONQuery',\n  description,\n  createQuery,\n  executeQuery\n}\n\nfunction createQuery(_json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { filter, sort, projection } = queryOptions\n  const queryFunctions: JSONQuery[] = []\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    queryFunctions.push([\n      'filter',\n      [\n        getOperatorName(filter.relation),\n        getter(filter.path),\n        parseString(filter.value) as JSONQuery\n      ]\n    ])\n  }\n\n  if (sort && sort.path && sort.direction) {\n    queryFunctions.push(['sort', getter(sort.path), sort.direction === 'desc' ? 'desc' : 'asc'])\n  }\n\n  if (projection && projection.paths) {\n    if (projection.paths.length > 1) {\n      queryFunctions.push(['pick', ...projection.paths.map(getter)])\n    } else {\n      queryFunctions.push(['map', getter(projection.paths[0])])\n    }\n  }\n\n  return stringify(['pipe', ...queryFunctions])\n}\n\nfunction getter(path: JSONPath): ['get', ...path: JSONPath] {\n  return ['get', ...path]\n}\n\nfunction executeQuery(json: unknown, query: string): unknown {\n  return query.trim() !== '' ? jsonquery(json, query) : json\n}\n\nfunction getOperatorName(operator: string): string {\n  // a trick to get the name of the operator by parsing the operator in a temporary query\n  return (parse(`1 ${operator} 1`) as [string, number, number])[0]\n}\n","<g>\n  {@html raw}\n</g>\n\n<script>let cursor = 870711;\nfunction getId() {\n  cursor += 1;\n  return `fa-${cursor.toString(16)}`;\n}\nlet raw = \"\";\nexport let data;\nfunction getRaw(data2) {\n  if (!data2 || !data2.raw) {\n    return \"\";\n  }\n  let rawData = data2.raw;\n  const ids = {};\n  rawData = rawData.replace(/\\s(?:xml:)?id=[\"']?([^\"')\\s]+)/g, (match, id) => {\n    const uniqueId = getId();\n    ids[id] = uniqueId;\n    return ` id=\"${uniqueId}\"`;\n  });\n  rawData = rawData.replace(\n    /#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g,\n    (match, rawId, _, pointerId) => {\n      const id = rawId || pointerId;\n      if (!id || !ids[id]) {\n        return match;\n      }\n      return `#${ids[id]}`;\n    }\n  );\n  return rawData;\n}\n$:\n  raw = getRaw(data);\n</script>\n","<svg\n  version=\"1.1\"\n  class=\"fa-icon {className}\"\n  class:fa-spin={spin}\n  class:fa-pulse={pulse}\n  class:fa-inverse={inverse}\n  class:fa-flip-horizontal={flip === 'horizontal'}\n  class:fa-flip-vertical={flip === 'vertical'}\n  {width}\n  {height}\n  aria-label={label}\n  role={label ? 'img' : 'presentation'}\n  viewBox={box}\n  {style}\n  {...$$restProps}\n>\n  <slot />\n</svg>\n\n<style>\n  .fa-icon {\n    display: inline-block;\n    fill: currentColor;\n  }\n  .fa-flip-horizontal {\n    transform: scale(-1, 1);\n  }\n  .fa-flip-vertical {\n    transform: scale(1, -1);\n  }\n  .fa-spin {\n    animation: fa-spin 1s 0s infinite linear;\n  }\n  .fa-inverse {\n    color: #fff;\n  }\n  .fa-pulse {\n    animation: fa-spin 1s infinite steps(8);\n  }\n  @keyframes fa-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n\n<script>let className = \"\";\nexport { className as class };\nexport let width;\nexport let height;\nexport let box = \"0 0 0 0\";\nexport let spin = false;\nexport let inverse = false;\nexport let pulse = false;\nexport let flip = \"none\";\nexport let style = \"\";\nexport let label = \"\";\n</script>\n","<Svg\n  {label}\n  {width}\n  {height}\n  {box}\n  style={combinedStyle}\n  {spin}\n  {flip}\n  {inverse}\n  {pulse}\n  class={className}\n  {...$$restProps}\n>\n  <slot>\n    {#each iconData?.paths || [] as path}\n      <path {...path} />\n    {/each}\n    {#each iconData?.polygons || [] as polygon}\n      <polygon {...polygon} />\n    {/each}\n    {#if iconData?.raw}\n      <Raw bind:data={iconData} />\n    {/if}\n  </slot>\n</Svg>\n\n<script context=\"module\"></script>\n\n<script>import Raw from \"./svg/Raw.svelte\";\nimport Svg from \"./svg/Svg.svelte\";\nlet className = \"\";\nexport let data;\nlet iconData;\nexport let scale = 1;\nexport let spin = false;\nexport let inverse = false;\nexport let pulse = false;\nexport let flip = void 0;\nexport let label = \"\";\nexport let style = \"\";\nexport { className as class };\nlet childrenHeight = 0;\nlet childrenWidth = 0;\nlet outerScale = 1;\nlet width = 10;\nlet height = 10;\nlet combinedStyle;\nlet box;\nfunction normaliseData(data2) {\n  let name;\n  let iconData2;\n  if (!data2) {\n    return void 0;\n  } else if (\"definition\" in data2) {\n    console.error(\n      \"`import faIconName from '@fortawesome/package-name/faIconName` not supported - Please use `import { faIconName } from '@fortawesome/package-name/faIconName'` instead\"\n    );\n    return void 0;\n  } else if (\"iconName\" in data2 && \"icon\" in data2) {\n    name = data2.iconName;\n    const [width2, height2, , , path] = data2.icon;\n    const paths = Array.isArray(path) ? path : [path];\n    iconData2 = {\n      width: width2,\n      height: height2,\n      paths: paths.map((path2) => {\n        return { d: path2 };\n      })\n    };\n  } else {\n    name = Object.keys(data2)[0];\n    iconData2 = data2[name];\n  }\n  return iconData2;\n}\nfunction normalisedScale() {\n  let numScale = 1;\n  if (typeof scale !== \"undefined\") {\n    numScale = Number(scale);\n  }\n  if (isNaN(numScale) || numScale <= 0) {\n    console.warn('Invalid prop: prop \"scale\" should be a number over 0.');\n    return outerScale;\n  }\n  return numScale * outerScale;\n}\nfunction calculateBox() {\n  if (iconData) {\n    return `0 0 ${iconData.width} ${iconData.height}`;\n  }\n  return `0 0 ${width} ${height}`;\n}\nfunction calculateRatio() {\n  if (!iconData) {\n    return 1;\n  }\n  return Math.max(iconData.width, iconData.height) / 16;\n}\nfunction calculateWidth() {\n  if (childrenWidth) {\n    return childrenWidth;\n  }\n  if (iconData) {\n    return iconData.width / calculateRatio() * normalisedScale();\n  }\n  return 0;\n}\nfunction calculateHeight() {\n  if (childrenHeight) {\n    return childrenHeight;\n  }\n  if (iconData) {\n    return iconData.height / calculateRatio() * normalisedScale();\n  }\n  return 0;\n}\nfunction calculateStyle() {\n  let combined = \"\";\n  if (style !== null) {\n    combined += style;\n  }\n  let size = normalisedScale();\n  if (size === 1) {\n    if (combined.length === 0) {\n      return \"\";\n    }\n    return combined;\n  }\n  if (combined !== \"\" && !combined.endsWith(\";\")) {\n    combined += \"; \";\n  }\n  return `${combined}font-size: ${size}em`;\n}\n$: {\n  iconData = normaliseData(data);\n  style;\n  scale;\n  width = calculateWidth();\n  height = calculateHeight();\n  combinedStyle = calculateStyle();\n  box = calculateBox();\n}\n</script>\n\n<svelte:options namespace=\"svg\" />\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { faCheckSquare, faSquare } from '@fortawesome/free-regular-svg-icons'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import Icon from 'svelte-awesome'\n  import type { OnPatch } from '$lib/types.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let readOnly: boolean\n  export let onPatch: OnPatch\n  export let focus: () => void\n\n  function toggleBooleanValue(event: MouseEvent) {\n    event.stopPropagation()\n\n    if (readOnly) {\n      return\n    }\n\n    onPatch([\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: !value\n      }\n    ])\n\n    focus()\n  }\n</script>\n\n<div\n  role=\"checkbox\"\n  tabindex=\"-1\"\n  aria-checked={value === true}\n  class=\"jse-boolean-toggle\"\n  class:jse-readonly={readOnly}\n  on:mousedown={toggleBooleanValue}\n  title={!readOnly ? 'Click to toggle this boolean value' : `Boolean value ${value}`}\n>\n  <Icon data={value === true ? faCheckSquare : faSquare} />\n</div>\n\n<style src=\"./BooleanToggle.scss\"></style>\n","<script lang=\"ts\">\n  import { onDestroy, onMount } from 'svelte'\n\n  export let color: string\n  export let onChange: (newColor: string) => void\n  export let showOnTop: boolean\n\n  let ref: HTMLElement | undefined\n  let destroyColorPicker = () => {}\n\n  onMount(async () => {\n    // Dynamically import VanillaPicker, because it requires `document` to be defined,\n    // and that is not supported server side\n    const VanillaPicker = (await import('vanilla-picker'))?.default\n\n    const colorPicker = new VanillaPicker({\n      parent: ref,\n      color,\n      popup: showOnTop ? 'top' : 'bottom',\n      onDone: function (color) {\n        const alpha = color.rgba[3]\n        const hex =\n          alpha === 1\n            ? color.hex.substring(0, 7) // return #RRGGBB\n            : color.hex // return #RRGGBBAA\n        onChange(hex)\n      }\n    })\n\n    colorPicker.show()\n\n    destroyColorPicker = () => {\n      colorPicker.destroy()\n    }\n  })\n\n  onDestroy(() => {\n    destroyColorPicker()\n  })\n</script>\n\n<div class=\"jse-color-picker-popup\" bind:this={ref} />\n\n<style src=\"./ColorPickerPopup.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getColorCSS } from '$lib/utils/typeUtils.js'\n  import { getWindow } from '$lib/utils/domUtils.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import { getContext } from 'svelte'\n  import ColorPickerPopup from '../../../components/controls/ColorPickerPopup.svelte'\n  import type { AbsolutePopupContext, OnPatch } from '$lib/types.js'\n\n  const { openAbsolutePopup } = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let path: JSONPath\n  export let value: string\n  export let readOnly: boolean\n  export let onPatch: OnPatch\n  export let focus: () => void\n\n  $: color = getColorCSS(value)\n\n  function onChange(color: string) {\n    onPatch([\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: color\n      }\n    ])\n\n    onClose()\n  }\n\n  function onClose() {\n    focus()\n  }\n\n  function openColorPicker(event: MouseEvent) {\n    if (readOnly) {\n      return\n    }\n\n    // estimate of the color picker height\n    // we'll render the color picker on top\n    // when there is not enough space below, and there is enough space above\n    const height = 300\n\n    const target = event.target as Element\n    const top = target.getBoundingClientRect().top\n    const windowHeight = getWindow(target)?.innerHeight ?? 0\n    const showOnTop = windowHeight - top < height && top > height\n\n    const props = {\n      color: value,\n      onChange,\n      showOnTop\n    }\n\n    openAbsolutePopup(ColorPickerPopup, props, {\n      anchor: target,\n      closeOnOuterClick: true,\n      onClose,\n      offsetTop: 18,\n      offsetLeft: -8,\n      height\n    })\n  }\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-color-picker-button\"\n  class:jse-readonly={readOnly}\n  style=\"background: {color}\"\n  title={!readOnly ? 'Click to open a color picker' : `Color ${value}`}\n  on:click={openColorPicker}\n/>\n\n<style src=\"./ColorPicker.scss\"></style>\n","import type { Section } from './types'\nimport { SortDirection } from './types.js'\n\nexport const SCROLL_DURATION = 300 // ms\nexport const DEBOUNCE_DELAY = 300 // ms\nexport const TEXT_MODE_ONCHANGE_DELAY = 300 // ms\nexport const AUTO_SCROLL_INTERVAL = 50 // ms\nexport const AUTO_SCROLL_SPEED_SLOW = 200 // pixels per second\nexport const AUTO_SCROLL_SPEED_NORMAL = 400 // pixels per second\nexport const AUTO_SCROLL_SPEED_FAST = 1200 // pixels per second\nexport const MAX_SEARCH_RESULTS = 1000\nexport const ARRAY_SECTION_SIZE = 100\nexport const MAX_VALIDATION_ERRORS = 100\nexport const MAX_CHARACTERS_TEXT_PREVIEW = 20000\nexport const MAX_INLINE_OBJECT_CHARS = 50\nexport const MAX_HEADER_NAME_CHARACTERS = 50\nexport const DEFAULT_VISIBLE_SECTIONS: Section[] = [{ start: 0, end: ARRAY_SECTION_SIZE }]\nexport const MAX_VALIDATABLE_SIZE = 100 * 1024 * 1024 // 1 MB\nexport const MAX_AUTO_REPAIRABLE_SIZE = 1024 * 1024 // 1 MB\nexport const MAX_DOCUMENT_SIZE_TEXT_MODE = 10 * 1024 * 1024 // 10 MB\nexport const MAX_DOCUMENT_SIZE_EXPAND_ALL = 10 * 1024 // 10 KB\n\nexport const INSERT_EXPLANATION =\n  'Insert or paste contents, ' +\n  'enter [ insert a new array, ' +\n  'enter { to insert a new object, ' +\n  'or start typing to insert a new value'\n\nexport const CONTEXT_MENU_EXPLANATION =\n  'Open context menu ' +\n  '(Click here, ' +\n  'right click on the selection, ' +\n  'or use the context menu button or Ctrl+Q)'\n\nexport const HOVER_INSERT_INSIDE = 'hover-insert-inside'\nexport const HOVER_INSERT_AFTER = 'hover-insert-after'\nexport const HOVER_COLLECTION = 'hover-collection'\n\nexport const JSON_STATUS_VALID = 'valid'\nexport const JSON_STATUS_REPAIRABLE = 'repairable'\nexport const JSON_STATUS_INVALID = 'invalid'\n\n// TODO: can we dynamically calculate the size?\nexport const CONTEXT_MENU_HEIGHT = (40 + 2) * 8 // px\nexport const CONTEXT_MENU_WIDTH = 260 // px\nexport const SEARCH_BOX_HEIGHT = 100 // px for search and replace\n\nexport const SORT_DIRECTION_NAMES = {\n  [SortDirection.asc]: 'ascending',\n  [SortDirection.desc]: 'descending'\n}\n","import { sortBy } from 'lodash-es'\nimport { ARRAY_SECTION_SIZE } from '../constants.js'\nimport type { Section } from '$lib/types.js'\n\n/**\n * Create sections that can be expanded.\n * Used to display a button like \"Show items 100-200\"\n */\nexport function getExpandItemsSections(startIndex: number, endIndex: number): Section[] {\n  // expand the start of the section\n  const section1 = {\n    start: startIndex,\n    end: Math.min(nextRoundNumber(startIndex), endIndex)\n  }\n\n  // expand the middle of the section\n  const start2 = Math.max(currentRoundNumber((startIndex + endIndex) / 2), startIndex)\n  const section2 = {\n    start: start2,\n    end: Math.min(nextRoundNumber(start2), endIndex)\n  }\n\n  // expand the end of the section\n  const currentIndex = currentRoundNumber(endIndex)\n  const previousIndex = currentIndex === endIndex ? currentIndex - ARRAY_SECTION_SIZE : currentIndex\n  const section3 = {\n    start: Math.max(previousIndex, startIndex),\n    end: endIndex\n  }\n\n  const sections = [section1]\n\n  const showSection2 = section2.start >= section1.end && section2.end <= section3.start\n  if (showSection2) {\n    sections.push(section2)\n  }\n\n  const showSection3 = section3.start >= (showSection2 ? section2.end : section1.end)\n  if (showSection3) {\n    sections.push(section3)\n  }\n\n  return sections\n}\n\n/**\n * Sort and merge a list with sections\n */\nexport function mergeSections(sections: Section[]): Section[] {\n  const sortedSections = sortBy(sections, (section) => section.start)\n\n  const mergedSections = [sortedSections[0]]\n\n  for (let sortedIndex = 0; sortedIndex < sortedSections.length; sortedIndex++) {\n    const mergedIndex = mergedSections.length - 1\n    const previous = mergedSections[mergedIndex]\n    const current = sortedSections[sortedIndex]\n\n    if (current.start <= previous.end) {\n      // there is overlap -> replace the previous item\n      mergedSections[mergedIndex] = {\n        start: Math.min(previous.start, current.start),\n        end: Math.max(previous.end, current.end)\n      }\n    } else {\n      // no overlap, just add the item\n      mergedSections.push(current)\n    }\n  }\n\n  return mergedSections\n}\n\n// TODO: write unit test\nexport function inVisibleSection(sections: Section[], index: number): boolean {\n  return sections.some((section) => {\n    return index >= section.start && index < section.end\n  })\n}\n\nexport function nextRoundNumber(index: number): number {\n  return currentRoundNumber(index) + ARRAY_SECTION_SIZE\n}\n\nexport function currentRoundNumber(index: number): number {\n  return Math.floor(index / ARRAY_SECTION_SIZE) * ARRAY_SECTION_SIZE\n}\n","import type {\n  ContentParseError,\n  ContentValidationErrors,\n  ContextMenuColumn,\n  ContextMenuRow,\n  MenuButton,\n  MenuDropDownButton,\n  MenuLabel,\n  MenuSeparator,\n  MenuSpace,\n  ValidationError,\n  NestedValidationError,\n  SvelteActionRenderer,\n  SvelteComponentRenderer,\n  RecursiveState,\n  ArrayRecursiveState,\n  ObjectRecursiveState,\n  ValueRecursiveState,\n  SearchResults,\n  WithSearchResults\n} from './types.js'\nimport { isObject } from '$lib/utils/typeUtils.js'\n\nexport function isMenuSpace(item: unknown): item is MenuSpace {\n  // checking the .space property is for backward compatibility\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'space' || item['space'] === true : false\n}\n\nexport function isMenuSeparator(item: unknown): item is MenuSeparator {\n  // checking the .separator property is for backward compatibility\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'separator' || item['separator'] === true : false\n}\n\nexport function isMenuLabel(item: unknown): item is MenuLabel {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'label' && typeof item['text'] === 'string' : false\n}\n\nexport function isMenuButton(item: unknown): item is MenuButton {\n  // for backward compatibility, we only check .onClick here and not item['type'] === 'button'\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? typeof item['onClick'] === 'function' : false\n}\n\nexport function isMenuDropDownButton(item: unknown): item is MenuDropDownButton {\n  return item\n    ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      item['type'] === 'dropdown-button' &&\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        isMenuButton(item['main']) &&\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        Array.isArray(item['items'])\n    : false\n}\n\nexport function isContextMenuRow(item: unknown): item is ContextMenuRow {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'row' && Array.isArray(item['items']) : false\n}\n\nexport function isContextMenuColumn(item: unknown): item is ContextMenuColumn {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'column' && Array.isArray(item['items']) : false\n}\n\nexport function isContentParseError(contentErrors: unknown): contentErrors is ContentParseError {\n  return isObject(contentErrors) && isObject(contentErrors['parseError'])\n}\n\nexport function isContentValidationErrors(\n  contentErrors: unknown\n): contentErrors is ContentValidationErrors {\n  return isObject(contentErrors) && Array.isArray(contentErrors['validationErrors'])\n}\n\nexport function isValidationError(value: unknown): value is ValidationError {\n  return (\n    isObject(value) &&\n    Array.isArray(value.path) &&\n    typeof value.message === 'string' &&\n    'severity' in value\n  )\n}\n\nexport function isNestedValidationError(value: unknown): value is NestedValidationError {\n  return isObject(value) && isValidationError(value) && typeof value.isChildError === 'boolean'\n}\n\nexport function isSvelteComponentRenderer(value: unknown): value is SvelteComponentRenderer {\n  return isObject(value) && 'component' in value && isObject(value.props)\n}\n\nexport function isSvelteActionRenderer(value: unknown): value is SvelteActionRenderer {\n  return isObject(value) && typeof value.action === 'function' && isObject(value.props)\n}\n\nexport function isObjectRecursiveState(\n  state: RecursiveState | undefined\n): state is ObjectRecursiveState {\n  return state !== undefined && state.type === 'object'\n}\n\nexport function isArrayRecursiveState(\n  state: RecursiveState | undefined\n): state is ArrayRecursiveState {\n  return state !== undefined && state.type === 'array'\n}\n\nexport function isValueRecursiveState(\n  state: RecursiveState | undefined\n): state is ValueRecursiveState {\n  return state !== undefined && state.type === 'value'\n}\n\nexport function isExpandableState(\n  state: RecursiveState | undefined\n): state is ObjectRecursiveState | ArrayRecursiveState {\n  return isObjectRecursiveState(state) || isArrayRecursiveState(state)\n}\n\nexport function hasSearchResults(state: SearchResults | undefined): state is WithSearchResults {\n  return (\n    state !== undefined &&\n    Array.isArray((state as unknown as Record<string, unknown>).searchResults)\n  )\n}\n","import {\n  compileJSONPointer,\n  deleteIn,\n  existsIn,\n  getIn,\n  immutableJSONPatch,\n  isJSONArray,\n  isJSONObject,\n  isJSONPatchAdd,\n  isJSONPatchCopy,\n  isJSONPatchMove,\n  isJSONPatchRemove,\n  isJSONPatchReplace,\n  type JSONPatchAdd,\n  type JSONPatchCopy,\n  type JSONPatchDocument,\n  type JSONPatchMove,\n  type JSONPatchOperation,\n  type JSONPatchRemove,\n  type JSONPath,\n  parsePath,\n  setIn,\n  updateIn\n} from 'immutable-json-patch'\nimport { initial, last } from 'lodash-es'\nimport { DEFAULT_VISIBLE_SECTIONS, MAX_DOCUMENT_SIZE_EXPAND_ALL } from '../constants.js'\nimport { forEachIndex, insertItemsAt, strictShallowEqual } from '../utils/arrayUtils.js'\nimport { isObject, isStringContainingPrimitiveValue } from '../utils/typeUtils.js'\nimport {\n  currentRoundNumber,\n  inVisibleSection,\n  mergeSections,\n  nextRoundNumber\n} from './expandItemsSections.js'\nimport type {\n  ArrayDocumentState,\n  CaretPosition,\n  DocumentState,\n  ObjectDocumentState,\n  OnExpand,\n  ArrayRecursiveState,\n  RecursiveState,\n  RecursiveStateFactory,\n  Section,\n  ValueDocumentState,\n  VisibleSection\n} from '$lib/types'\nimport { CaretType } from '$lib/types.js'\nimport { int } from '../utils/numberUtils.js'\nimport { isLargeContent } from '$lib/utils/jsonUtils.js'\nimport {\n  isArrayRecursiveState,\n  isExpandableState,\n  isObjectRecursiveState,\n  isValueRecursiveState\n} from '$lib/typeguards.js'\n\nexport type CreateRecursiveStateProps = {\n  json: unknown | undefined\n  factory: RecursiveStateFactory\n}\n\nexport function createRecursiveState({\n  json,\n  factory\n}: CreateRecursiveStateProps): RecursiveState | undefined {\n  return Array.isArray(json)\n    ? factory.createArrayDocumentState()\n    : isObject(json)\n      ? factory.createObjectDocumentState()\n      : json !== undefined\n        ? factory.createValueDocumentState()\n        : undefined\n}\n\nexport type CreateDocumentStateProps = {\n  json: unknown | undefined\n  expand?: OnExpand\n}\n\nexport function createDocumentState({\n  json,\n  expand\n}: CreateDocumentStateProps): DocumentState | undefined {\n  let documentState: DocumentState | undefined = createRecursiveState({\n    json,\n    factory: documentStateFactory\n  }) as DocumentState\n\n  if (expand && documentState) {\n    documentState = expandPath(json, documentState, [], expand)\n  }\n\n  return documentState\n}\n\nexport function createArrayDocumentState({ expanded } = { expanded: false }): ArrayDocumentState {\n  return { type: 'array', expanded, visibleSections: DEFAULT_VISIBLE_SECTIONS, items: [] }\n}\n\nexport function createObjectDocumentState({ expanded } = { expanded: false }): ObjectDocumentState {\n  return { type: 'object', expanded, properties: {} }\n}\n\nexport function createValueDocumentState(): ValueDocumentState {\n  return { type: 'value' }\n}\n\nexport const documentStateFactory: RecursiveStateFactory = {\n  createObjectDocumentState,\n  createArrayDocumentState,\n  createValueDocumentState\n}\n\nexport function ensureRecursiveState<T extends RecursiveState>(\n  json: unknown,\n  documentState: T | undefined,\n  path: JSONPath,\n  {\n    createObjectDocumentState,\n    createArrayDocumentState,\n    createValueDocumentState\n  }: RecursiveStateFactory\n): T {\n  function recurse(value: unknown, state: T | undefined, path: JSONPath): T {\n    if (Array.isArray(value)) {\n      const arrayState: ArrayRecursiveState = isArrayRecursiveState(state)\n        ? state\n        : createArrayDocumentState()\n      if (path.length === 0) {\n        return arrayState as T\n      }\n\n      const index = int(path[0])\n      const itemState = recurse(value[index], arrayState.items[index] as T, path.slice(1))\n      return setIn(arrayState, ['items', path[0]], itemState)\n    }\n\n    if (isObject(value)) {\n      const objectState = isObjectRecursiveState(state) ? state : createObjectDocumentState()\n      if (path.length === 0) {\n        return objectState as T\n      }\n\n      const key = path[0]\n      const itemState = recurse(value[key], objectState.properties[key] as T, path.slice(1))\n      return setIn(objectState, ['properties', key], itemState)\n    }\n\n    return isValueRecursiveState(state) ? state : (createValueDocumentState() as T)\n  }\n\n  return recurse(json, documentState, path)\n}\n\nexport function syncDocumentState(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath = []\n): DocumentState | undefined {\n  return _transformDocumentState(\n    json,\n    documentState,\n    path,\n    (nestedJson, nestedState) => {\n      if (nestedJson === undefined || nestedState === undefined) {\n        return undefined\n      }\n\n      if (Array.isArray(nestedJson)) {\n        if (isArrayRecursiveState(nestedState)) {\n          return nestedState\n        }\n\n        const expanded = isExpandableState(nestedState) ? nestedState.expanded : false\n        return createArrayDocumentState({ expanded })\n      }\n\n      if (isObject(nestedJson)) {\n        if (isObjectRecursiveState(nestedState)) {\n          return nestedState\n        }\n\n        const expanded = isExpandableState(nestedState) ? nestedState.expanded : false\n        return createObjectDocumentState({ expanded })\n      }\n\n      // json is of type value\n      if (isValueRecursiveState(nestedState)) {\n        return nestedState\n      }\n\n      // type of state does not match the actual type of the json\n      return undefined\n    },\n    () => true\n  )\n}\n\nfunction _transformDocumentState(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath,\n  callback: (\n    nestedJson: unknown,\n    nestedState: DocumentState | undefined,\n    path: JSONPath\n  ) => DocumentState | undefined,\n  recurse: (nestedState: DocumentState | undefined) => boolean\n): DocumentState | undefined {\n  const updatedState = callback(json, documentState, path)\n\n  if (Array.isArray(json) && isArrayRecursiveState(updatedState) && recurse(updatedState)) {\n    const items: (DocumentState | undefined)[] = []\n\n    forEachVisibleIndex(json, updatedState.visibleSections, (index) => {\n      const itemPath = path.concat(String(index))\n      const value = json[index]\n      const item = updatedState.items[index]\n      const updatedItem = _transformDocumentState(value, item, itemPath, callback, recurse)\n      if (updatedItem !== undefined) {\n        items[index] = updatedItem\n      }\n    })\n\n    const changed = !strictShallowEqual(items, updatedState.items)\n\n    return changed ? { ...updatedState, items } : updatedState\n  }\n\n  if (isObject(json) && isObjectRecursiveState(updatedState) && recurse(updatedState)) {\n    const properties: ObjectDocumentState['properties'] = {}\n    Object.keys(json).forEach((key) => {\n      const propPath = path.concat(key)\n      const value = json[key]\n      const prop = updatedState.properties[key]\n      const updatedProp = _transformDocumentState(value, prop, propPath, callback, recurse)\n      if (updatedProp !== undefined) {\n        properties[key] = updatedProp\n      }\n    })\n\n    const changed = !strictShallowEqual(\n      Object.values(properties),\n      Object.values(updatedState.properties)\n    )\n\n    return changed ? { ...updatedState, properties } : updatedState\n  }\n\n  return updatedState\n}\n\n/**\n * Invoke a callback function for every visible item in the array\n */\nexport function forEachVisibleIndex(\n  jsonArray: Array<unknown>,\n  visibleSections: VisibleSection[],\n  callback: (index: number) => void\n) {\n  visibleSections.forEach(({ start, end }) => {\n    forEachIndex(start, Math.min(jsonArray.length, end), callback)\n  })\n}\n\nexport function expandVisibleSection(state: ArrayDocumentState, index: number): ArrayDocumentState {\n  if (inVisibleSection(state.visibleSections, index)) {\n    return state\n  }\n\n  const start = currentRoundNumber(index)\n  const end = nextRoundNumber(start)\n  const newVisibleSection = { start, end }\n\n  return {\n    ...state,\n    visibleSections: mergeSections(state.visibleSections.concat(newVisibleSection))\n  }\n}\n\nexport function toRecursiveStatePath(json: unknown, path: JSONPath): JSONPath {\n  let value = json\n  const recursiveStatePath: JSONPath = []\n\n  let i = 0\n  while (i < path.length) {\n    if (Array.isArray(value)) {\n      const index = path[i]\n      recursiveStatePath.push('items', index)\n      value = value[int(index)]\n    } else if (isObject(value)) {\n      const key = path[i]\n      recursiveStatePath.push('properties', key)\n      value = (value as Record<string, unknown>)[key]\n    } else {\n      throw new Error(`Cannot convert path: Object or Array expected at index ${i}`)\n    }\n\n    i++\n  }\n\n  return recursiveStatePath\n}\n\n/**\n * Expand all nodes along the given path, and expand invisible array sections if needed.\n * Then, optionally expand child nodes according to the provided callback.\n */\nexport function expandPath(\n  json: unknown | undefined,\n  documentState: DocumentState | undefined,\n  path: JSONPath,\n  callback: OnExpand\n): DocumentState | undefined {\n  let updatedState = documentState\n\n  // Step 1: expand all nodes along the path, and update visibleSections if needed\n  for (let i = 0; i < path.length; i++) {\n    const partialPath = path.slice(0, i)\n\n    updatedState = updateInDocumentState(json, updatedState, partialPath, (_, nestedState) => {\n      const updatedState =\n        isExpandableState(nestedState) && !nestedState.expanded\n          ? { ...nestedState, expanded: true }\n          : nestedState\n\n      if (isArrayRecursiveState(updatedState)) {\n        const index = int(path[i])\n        return expandVisibleSection(updatedState, index)\n      }\n\n      return updatedState\n    })\n  }\n\n  // Step 2: recursively expand child nodes tested with the callback\n  return updateInDocumentState(json, updatedState, path, (nestedValue, nestedState) => {\n    const relativePath: JSONPath = []\n    return _expandRecursively(nestedValue, nestedState, relativePath, callback)\n  })\n}\n\nfunction _expandRecursively(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath,\n  callback: OnExpand\n): DocumentState | undefined {\n  return _transformDocumentState(\n    json,\n    documentState,\n    path,\n    (nestedJson, nestedState, nestedPath) => {\n      if (Array.isArray(nestedJson) && callback(nestedPath)) {\n        return isArrayRecursiveState(nestedState)\n          ? nestedState.expanded\n            ? nestedState\n            : { ...nestedState, expanded: true }\n          : createArrayDocumentState({ expanded: true })\n      }\n\n      if (isObject(nestedJson) && callback(nestedPath)) {\n        return isObjectRecursiveState(nestedState)\n          ? nestedState.expanded\n            ? nestedState\n            : { ...nestedState, expanded: true }\n          : createObjectDocumentState({ expanded: true })\n      }\n\n      return nestedState\n    },\n    (nestedState) => isExpandableState(nestedState) && nestedState.expanded\n  )\n}\n\nexport function collapsePath(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath,\n  recursive: boolean\n): DocumentState | undefined {\n  return updateInDocumentState(json, documentState, path, (nestedJson, nestedState) => {\n    return recursive ? _collapseRecursively(nestedJson, nestedState, path) : _collapse(nestedState)\n  })\n}\n\nfunction _collapse<T extends DocumentState | undefined>(documentState: T): T {\n  if (isArrayRecursiveState(documentState) && documentState.expanded) {\n    return { ...documentState, expanded: false, visibleSections: DEFAULT_VISIBLE_SECTIONS }\n  }\n\n  if (isObjectRecursiveState(documentState) && documentState.expanded) {\n    return { ...documentState, expanded: false }\n  }\n\n  return documentState\n}\n\nfunction _collapseRecursively(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath\n): DocumentState | undefined {\n  return _transformDocumentState(\n    json,\n    documentState,\n    path,\n    (_, nestedState) => _collapse(nestedState),\n    () => true\n  )\n}\n\n/**\n * Expand a section of items in an array\n */\nexport function expandSection(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath,\n  section: Section\n): DocumentState | undefined {\n  return updateInDocumentState(json, documentState, path, (_value, state) => {\n    if (!isArrayRecursiveState(state)) {\n      return state\n    }\n\n    const visibleSections = mergeSections(state.visibleSections.concat(section))\n\n    return { ...state, visibleSections }\n  })\n}\n\nexport function syncKeys(actualKeys: string[], prevKeys?: string[]): string[] {\n  if (!prevKeys) {\n    return actualKeys\n  }\n\n  // copy the keys that still exist\n  const actualKeysSet = new Set(actualKeys)\n  const keys = prevKeys.filter((key) => actualKeysSet.has(key))\n\n  // add new keys\n  const keysSet = new Set(keys)\n  actualKeys.filter((key) => !keysSet.has(key)).forEach((key) => keys.push(key))\n\n  return keys\n}\n\n/**\n * Apply patch operations to both json and state\n */\nexport function documentStatePatch(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  operations: JSONPatchDocument\n): { json: unknown; documentState: DocumentState | undefined } {\n  const initial = { json, documentState }\n\n  const result = operations.reduce((current, operation) => {\n    return {\n      json: immutableJSONPatch(current.json, [operation]),\n      documentState: _documentStatePatch(current.json, current.documentState, operation)\n    }\n  }, initial)\n\n  return {\n    json: result.json,\n    documentState: syncDocumentState(result.json, result.documentState) // sync to clean up leftover state\n  }\n}\n\nfunction _documentStatePatch(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  operation: JSONPatchOperation\n): DocumentState | undefined {\n  if (isJSONPatchAdd(operation)) {\n    return documentStateAdd(json, documentState, operation, undefined)\n  }\n\n  if (isJSONPatchRemove(operation)) {\n    return documentStateRemove(json, documentState, operation)\n  }\n\n  if (isJSONPatchReplace(operation)) {\n    const path = parsePath(json, operation.path)\n    const enforceString = getEnforceString(json, documentState, path)\n    if (enforceString) {\n      // ensure the enforceString setting is not lost when for example changing \"123\"\n      // into \"abc\" and later back to \"123\", so we now make it explicit.\n      return setInDocumentState(json, documentState, path, { type: 'value', enforceString })\n    }\n\n    // nothing special to do (all is handled by syncDocumentState)\n    return documentState\n  }\n\n  if (isJSONPatchCopy(operation) || isJSONPatchMove(operation)) {\n    return documentStateMoveOrCopy(json, documentState, operation)\n  }\n\n  return documentState\n}\n\nexport function getInRecursiveState<T extends RecursiveState>(\n  json: unknown,\n  documentState: T | undefined,\n  path: JSONPath\n): T | undefined {\n  try {\n    return getIn(documentState, toRecursiveStatePath(json, path))\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport function setInRecursiveState<T extends RecursiveState>(\n  json: unknown,\n  recursiveState: T | undefined,\n  path: JSONPath,\n  value: unknown,\n  factory: RecursiveStateFactory\n): T | undefined {\n  const ensuredState = ensureRecursiveState(json, recursiveState, path, factory)\n  return setIn(ensuredState, toRecursiveStatePath(json, path), value)\n}\n\nexport function updateInRecursiveState<T extends RecursiveState>(\n  json: unknown,\n  documentState: T | undefined,\n  path: JSONPath,\n  transform: (value: unknown, state: T) => T | undefined,\n  factory: RecursiveStateFactory\n): T {\n  const ensuredState: T = ensureRecursiveState(json, documentState, path, factory)\n  return updateIn(ensuredState, toRecursiveStatePath(json, path), (nestedState: T) => {\n    const value = getIn(json, path)\n    return transform(value, nestedState)\n  })\n}\n\nexport function setInDocumentState<T extends RecursiveState>(\n  json: unknown | undefined,\n  documentState: T | undefined,\n  path: JSONPath,\n  value: unknown\n): T | undefined {\n  return setInRecursiveState(json, documentState, path, value, documentStateFactory)\n}\n\nexport function updateInDocumentState<T extends RecursiveState>(\n  json: unknown | undefined,\n  documentState: T | undefined,\n  path: JSONPath,\n  transform: (value: unknown, state: T) => T | undefined\n): T {\n  return updateInRecursiveState(json, documentState, path, transform, documentStateFactory)\n}\n\nexport function deleteInDocumentState<T extends RecursiveState>(\n  json: unknown | undefined,\n  documentState: T | undefined,\n  path: JSONPath\n): T | undefined {\n  const recursivePath = toRecursiveStatePath(json, path)\n\n  return existsIn(documentState, recursivePath)\n    ? deleteIn(documentState, toRecursiveStatePath(json, path))\n    : documentState\n}\n\nexport function documentStateAdd(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  operation: JSONPatchAdd,\n  stateValue: DocumentState | undefined\n): DocumentState | undefined {\n  const path = parsePath(json, operation.path)\n  const parentPath = initial(path)\n\n  let updatedState = documentState\n\n  updatedState = updateInDocumentState(json, updatedState, parentPath, (_parent, arrayState) => {\n    if (!isArrayRecursiveState(arrayState)) {\n      return arrayState\n    }\n\n    const index = int(last(path) as string)\n    const { items, visibleSections } = arrayState\n    return {\n      ...arrayState,\n      items:\n        index < items.length\n          ? insertItemsAt(items, index, stateValue !== undefined ? [stateValue] : Array(1))\n          : items,\n      visibleSections: shiftVisibleSections(visibleSections, index, 1)\n    }\n  })\n\n  // object property added, nothing to do\n  return setInDocumentState(json, updatedState, path, stateValue)\n}\n\nexport function documentStateRemove(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  operation: JSONPatchRemove\n): DocumentState | undefined {\n  const path = parsePath(json, operation.path)\n  const parentPath = initial(path)\n  const parent = getIn(json, parentPath)\n\n  if (Array.isArray(parent)) {\n    return updateInDocumentState(json, documentState, parentPath, (_parent, arrayState) => {\n      if (!isArrayRecursiveState(arrayState)) {\n        return arrayState\n      }\n\n      const index = int(last(path) as string)\n      const { items, visibleSections } = arrayState\n\n      return {\n        ...arrayState,\n        items: items.slice(0, index).concat(items.slice(index + 1)),\n        visibleSections: shiftVisibleSections(visibleSections, index, -1)\n      }\n    })\n  }\n\n  return deleteInDocumentState(json, documentState, path)\n}\n\nexport function documentStateMoveOrCopy(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  operation: JSONPatchCopy | JSONPatchMove\n): DocumentState | undefined {\n  if (isJSONPatchMove(operation) && operation.from === operation.path) {\n    // nothing to do\n    return documentState\n  }\n\n  let updatedState = documentState\n\n  // get the state that we will move or copy\n  const from = parsePath(json, operation.from)\n  const stateValue = getInRecursiveState(json, updatedState, from)\n\n  if (isJSONPatchMove(operation)) {\n    updatedState = documentStateRemove(json, updatedState, {\n      op: 'remove',\n      path: operation.from\n    })\n  }\n\n  updatedState = documentStateAdd(\n    json,\n    updatedState,\n    {\n      op: 'add',\n      path: operation.path,\n      value: null // note that the value is not actually used, so we just use null instead of getting the actual value from the json\n    },\n    stateValue\n  )\n\n  return updatedState\n}\n\n/**\n * Shift visible sections in an Array with a specified offset\n */\nexport function shiftVisibleSections(\n  visibleSections: VisibleSection[],\n  index: number,\n  offset: number\n): VisibleSection[] {\n  const shiftedSections = visibleSections.map((section) => {\n    return {\n      start: section.start > index ? section.start + offset : section.start,\n      end: section.end > index ? section.end + offset : section.end\n    }\n  })\n\n  return mergeAdjacentSections(shiftedSections)\n}\n\n// merge adjacent sections like [{start:0, end:100}, {start:100, end:200}] into [{start:0, end:200}]\nfunction mergeAdjacentSections(visibleSections: VisibleSection[]): VisibleSection[] {\n  const merged = visibleSections.slice(0)\n\n  let i = 1\n  while (i < merged.length) {\n    if (merged[i - 1].end === merged[i].start) {\n      merged[i - 1] = {\n        start: merged[i - 1].start,\n        end: merged[i].end\n      }\n      merged.splice(i)\n    }\n    i++\n  }\n\n  return merged\n}\n\nexport function getEnforceString(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath\n): boolean {\n  const value = getIn(json, path)\n  const nestedState = getInRecursiveState(json, documentState, path)\n  const enforceString = isValueRecursiveState(nestedState) ? nestedState.enforceString : undefined\n\n  if (typeof enforceString === 'boolean') {\n    return enforceString\n  }\n\n  return isStringContainingPrimitiveValue(value)\n}\n\nexport function getNextKeys(keys: string[], key: string, includeKey = false): string[] {\n  const index = keys.indexOf(key)\n  if (index !== -1) {\n    return includeKey ? keys.slice(index) : keys.slice(index + 1)\n  } else {\n    // a new key, that doesn't have next keys\n    return []\n  }\n}\n\n/**\n * Get all paths which are visible and rendered\n */\n// TODO: create memoized version of getVisiblePaths which remembers just the previous result if json and state are the same\nexport function getVisiblePaths(\n  json: unknown,\n  documentState: DocumentState | undefined\n): JSONPath[] {\n  const paths: JSONPath[] = []\n\n  function _recurse(value: unknown, state: DocumentState | undefined, path: JSONPath) {\n    paths.push(path)\n\n    if (isJSONArray(value) && isArrayRecursiveState(state) && state.expanded) {\n      forEachVisibleIndex(value, state.visibleSections, (index) => {\n        _recurse(value[index], state.items[index], path.concat(String(index)))\n      })\n    }\n\n    if (isJSONObject(value) && isObjectRecursiveState(state) && state.expanded) {\n      Object.keys(value).forEach((key) => {\n        _recurse(value[key], state.properties[key], path.concat(key))\n      })\n    }\n  }\n\n  _recurse(json, documentState, [])\n\n  return paths\n}\n\n/**\n * Get all caret position which are visible and rendered:\n * before a node, at a key, at a value, appending an object/array\n */\n// TODO: create memoized version of getVisibleCaretPositions which remembers just the previous result if json and state are the same\nexport function getVisibleCaretPositions(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  includeInside = true\n): CaretPosition[] {\n  const paths: CaretPosition[] = []\n\n  function _recurse(value: unknown, path: JSONPath) {\n    paths.push({ path, type: CaretType.value })\n\n    const valueState = getInRecursiveState(json, documentState, path)\n    if (value && isExpandableState(valueState) && valueState.expanded) {\n      if (includeInside) {\n        paths.push({ path, type: CaretType.inside })\n      }\n\n      if (isJSONArray(value)) {\n        const visibleSections = isArrayRecursiveState(valueState)\n          ? valueState.visibleSections\n          : DEFAULT_VISIBLE_SECTIONS\n        forEachVisibleIndex(value, visibleSections, (index) => {\n          const itemPath = path.concat(String(index))\n\n          _recurse(value[index], itemPath)\n\n          if (includeInside) {\n            paths.push({ path: itemPath, type: CaretType.after })\n          }\n        })\n      }\n\n      if (isJSONObject(value)) {\n        const keys = Object.keys(value)\n        keys.forEach((key) => {\n          const propertyPath = path.concat(key)\n\n          paths.push({ path: propertyPath, type: CaretType.key })\n\n          _recurse(value[key], propertyPath)\n\n          if (includeInside) {\n            paths.push({ path: propertyPath, type: CaretType.after })\n          }\n        })\n      }\n    }\n  }\n\n  _recurse(json, [])\n\n  return paths\n}\n\n/**\n * Find the previous visible path.\n * This can be the last child of the previous object or array, or the parent of a first entry.\n */\n// TODO: write tests for getPreviousVisiblePath\nexport function getPreviousVisiblePath(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath\n): JSONPath | undefined {\n  const visiblePaths = getVisiblePaths(json, documentState)\n  const visiblePathPointers = visiblePaths.map(compileJSONPointer)\n  const pathPointer = compileJSONPointer(path)\n  const index = visiblePathPointers.indexOf(pathPointer)\n\n  if (index !== -1 && index > 0) {\n    return visiblePaths[index - 1]\n  }\n\n  return undefined\n}\n\n/**\n * Find the next visible path.\n * This can be the next parent entry.\n */\n// TODO: write tests for getNextVisiblePath\nexport function getNextVisiblePath(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath\n): JSONPath | undefined {\n  const visiblePaths = getVisiblePaths(json, documentState)\n  const visiblePathPointers = visiblePaths.map(compileJSONPointer)\n  const index = visiblePathPointers.indexOf(compileJSONPointer(path))\n\n  if (index !== -1 && index < visiblePaths.length - 1) {\n    return visiblePaths[index + 1]\n  }\n\n  return undefined\n}\n\n/**\n * Expand recursively when the expanded contents is small enough,\n * else expand in a minimalistic way\n */\nexport function expandSmart(\n  json: unknown | undefined,\n  documentState: DocumentState | undefined,\n  path: JSONPath,\n  maxSize: number = MAX_DOCUMENT_SIZE_EXPAND_ALL\n): DocumentState | undefined {\n  const nestedJson = getIn(json, path)\n  const callback = isLargeContent({ json: nestedJson }, maxSize) ? expandMinimal : expandAll\n\n  return expandPath(json, documentState, path, callback)\n}\n\n/**\n * Expand the root array or object, and in case of an array, expand the first array item\n */\nexport function expandMinimal(relativePath: JSONPath): boolean {\n  // first item of an array\n  return relativePath.length === 0 ? true : relativePath.length === 1 && relativePath[0] === '0'\n}\n\n/**\n * Expand the root array or object\n */\nexport function expandSelf(relativePath: JSONPath): boolean {\n  return relativePath.length === 0\n}\n\nexport function expandAll(): boolean {\n  return true\n}\n\nexport function expandNone(): boolean {\n  return false\n}\n","import {\n  getIn,\n  isJSONArray,\n  isJSONObject,\n  isJSONPatchCopy,\n  isJSONPatchMove,\n  type JSONPatchDocument,\n  type JSONPatchOperation,\n  type JSONPath,\n  parsePath\n} from 'immutable-json-patch'\nimport { first, initial, isEmpty, isEqual, last } from 'lodash-es'\nimport { isObjectOrArray } from '$lib/utils/typeUtils.js'\nimport {\n  collapsePath,\n  getNextVisiblePath,\n  getPreviousVisiblePath,\n  getVisibleCaretPositions,\n  getVisiblePaths\n} from './documentState.js'\nimport type {\n  AfterSelection,\n  CaretPosition,\n  DocumentState,\n  EditKeySelection,\n  EditValueSelection,\n  InsideSelection,\n  JSONEditorSelection,\n  JSONParser,\n  JSONSelection,\n  KeySelection,\n  MultiSelection,\n  TextSelection,\n  ValueSelection\n} from '../types.js'\nimport { CaretType, SelectionType } from '$lib/types.js'\nimport { int } from '$lib/utils/numberUtils.js'\n\nexport function isAfterSelection(\n  selection: JSONEditorSelection | undefined\n): selection is AfterSelection {\n  return (selection && selection.type === SelectionType.after) || false\n}\n\nexport function isInsideSelection(\n  selection: JSONEditorSelection | undefined\n): selection is InsideSelection {\n  return (selection && selection.type === SelectionType.inside) || false\n}\n\nexport function isKeySelection(\n  selection: JSONEditorSelection | undefined\n): selection is KeySelection {\n  return (selection && selection.type === SelectionType.key) || false\n}\n\nexport function isValueSelection(\n  selection: JSONEditorSelection | undefined\n): selection is ValueSelection {\n  return (selection && selection.type === SelectionType.value) || false\n}\n\nexport function isMultiSelection(\n  selection: JSONEditorSelection | undefined\n): selection is MultiSelection {\n  return (selection && selection.type === SelectionType.multi) || false\n}\n\nexport function isMultiSelectionWithOneItem(\n  selection: JSONEditorSelection | undefined\n): selection is MultiSelection {\n  return isMultiSelection(selection) && isEqual(selection.focusPath, selection.anchorPath)\n}\n\nexport function isJSONSelection(\n  selection: JSONEditorSelection | undefined\n): selection is JSONSelection {\n  return (\n    isMultiSelection(selection) ||\n    isAfterSelection(selection) ||\n    isInsideSelection(selection) ||\n    isKeySelection(selection) ||\n    isValueSelection(selection)\n  )\n}\n\nexport function isTextSelection(\n  selection: JSONEditorSelection | undefined\n): selection is TextSelection {\n  return (selection && selection.type === SelectionType.text) || false\n}\n\n/**\n * Expand a selection start and end into an array containing all paths\n * between (and including) start and end\n */\nexport function getSelectionPaths(json: unknown, selection: JSONSelection): JSONPath[] {\n  const paths: JSONPath[] = []\n\n  iterateOverSelection(json, selection, (path) => {\n    paths.push(path)\n  })\n\n  return paths\n}\n\n/**\n * Expand a selection start and end into an array containing all paths\n * between (and including) start and end.\n *\n * The function iterates always from start to end, independent of the order\n * of focusPath and anchorPath.\n *\n * When the callback returns something other than undefined, the iteration is\n * canceled and the value returned by the callback is returned by iterateOverSelection.\n */\nexport function iterateOverSelection<T>(\n  json: unknown | undefined,\n  selection: JSONSelection | undefined,\n  callback: (path: JSONPath) => void | undefined | T\n): void | undefined | T {\n  if (!selection) {\n    return undefined\n  }\n\n  const anchorPath = getAnchorPath(selection)\n  const focusPath = getFocusPath(selection)\n\n  if (isEqual(anchorPath, focusPath)) {\n    // just a single node\n    return callback(anchorPath)\n  } else {\n    // multiple nodes\n    if (json === undefined) {\n      return undefined\n    }\n\n    const sharedPath = findSharedPath(anchorPath, focusPath)\n\n    if (anchorPath.length === sharedPath.length || focusPath.length === sharedPath.length) {\n      // a parent and a child, like ['arr', 1] and ['arr']\n      return callback(sharedPath)\n    }\n\n    const selection = createMultiSelection(anchorPath, focusPath)\n    const startPath = getStartPath(json, selection)\n    const endPath = getEndPath(json, selection)\n\n    const startIndex = getChildIndex(json, selection, startPath)\n    const endIndex = getChildIndex(json, selection, endPath)\n\n    if (startIndex === -1 || endIndex === -1) {\n      return undefined\n    }\n\n    const value = getIn(json, sharedPath)\n\n    if (isJSONObject(value)) {\n      const keys = Object.keys(value)\n\n      for (let i = startIndex; i <= endIndex; i++) {\n        const value = callback(sharedPath.concat(keys[i]))\n        if (value !== undefined) {\n          return value\n        }\n      }\n\n      return undefined\n    }\n\n    if (isJSONArray(value)) {\n      for (let i = startIndex; i <= endIndex; i++) {\n        const value = callback(sharedPath.concat(String(i)))\n        if (value !== undefined) {\n          return value\n        }\n      }\n\n      return undefined\n    }\n  }\n\n  throw new Error('Failed to create selection')\n}\n\nexport function getParentPath(selection: JSONSelection): JSONPath {\n  if (isInsideSelection(selection)) {\n    return selection.path\n  } else {\n    return initial(getFocusPath(selection))\n  }\n}\n\nexport function getStartPath(json: unknown, selection: JSONSelection): JSONPath {\n  if (!isMultiSelection(selection)) {\n    return selection.path\n  }\n\n  const anchorIndex = getChildIndex(json, selection, selection.anchorPath)\n  const focusIndex = getChildIndex(json, selection, selection.focusPath)\n\n  return focusIndex < anchorIndex ? selection.focusPath : selection.anchorPath\n}\n\nexport function getEndPath(json: unknown, selection: JSONSelection): JSONPath {\n  if (!isMultiSelection(selection)) {\n    return selection.path\n  }\n\n  const anchorIndex = getChildIndex(json, selection, selection.anchorPath)\n  const focusIndex = getChildIndex(json, selection, selection.focusPath)\n\n  return focusIndex > anchorIndex ? selection.focusPath : selection.anchorPath\n}\n\n// TODO: write unit test\nexport function isSelectionInsidePath(selection: JSONSelection, path: JSONPath): boolean {\n  return (\n    pathStartsWith(getFocusPath(selection), path) &&\n    (getFocusPath(selection).length > path.length || isInsideSelection(selection))\n  )\n}\n\nexport function getSelectionUp(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  selection: JSONSelection | undefined,\n  keepAnchorPath = false\n): JSONSelection | undefined {\n  if (!selection) {\n    return undefined\n  }\n\n  const focusPath = keepAnchorPath ? getFocusPath(selection) : getStartPath(json, selection)\n  const previousPath = getPreviousVisiblePath(json, documentState, focusPath)\n\n  if (keepAnchorPath) {\n    // create a multi-selection with multiple nodes\n    if (isInsideSelection(selection) || isAfterSelection(selection)) {\n      return previousPath !== undefined ? createMultiSelection(focusPath, focusPath) : undefined\n    }\n\n    return previousPath !== undefined\n      ? createMultiSelection(getAnchorPath(selection), previousPath)\n      : undefined\n  }\n\n  if (isAfterSelection(selection)) {\n    // select the node itself, not the previous node,\n    // FIXME: when after an expanded object/array, should go to the last item inside the object/array\n    return createValueSelection(focusPath)\n  }\n\n  if (isInsideSelection(selection)) {\n    // select the node itself, not the previous node,\n    return createValueSelection(focusPath)\n  }\n\n  if (isKeySelection(selection)) {\n    if (previousPath === undefined || previousPath.length === 0) {\n      return undefined\n    }\n\n    const parentPath = initial(previousPath)\n    const parent = getIn(json, parentPath)\n    if (Array.isArray(parent) || isEmpty(previousPath)) {\n      // switch to value selection: array has no keys, and root object also not\n      return createValueSelection(previousPath)\n    } else {\n      return createKeySelection(previousPath)\n    }\n  }\n\n  if (isValueSelection(selection)) {\n    return previousPath !== undefined ? createValueSelection(previousPath) : undefined\n  }\n\n  if (previousPath !== undefined) {\n    return createValueSelection(previousPath)\n  }\n\n  return undefined\n}\n\nexport function getSelectionDown(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  selection: JSONSelection | undefined,\n  keepAnchorPath = false\n): JSONSelection | undefined {\n  if (!selection) {\n    return undefined\n  }\n  const focusPath = keepAnchorPath ? getFocusPath(selection) : getEndPath(json, selection)\n\n  // if the focusPath is an Array or object, we must not step into it but\n  // over it, we pass state with this array/object collapsed\n  const collapsedState = isObjectOrArray(getIn(json, focusPath))\n    ? collapsePath(json, documentState, focusPath, true)\n    : documentState\n\n  const nextPath = getNextVisiblePath(json, documentState, focusPath)\n  const nextPathAfter = getNextVisiblePath(json, collapsedState, focusPath)\n\n  if (keepAnchorPath) {\n    // create a multi-selection with multiple nodes\n    if (isInsideSelection(selection)) {\n      return nextPath !== undefined ? createMultiSelection(nextPath, nextPath) : undefined\n    }\n\n    if (isAfterSelection(selection)) {\n      return nextPathAfter !== undefined\n        ? createMultiSelection(nextPathAfter, nextPathAfter)\n        : undefined\n    }\n\n    return nextPathAfter !== undefined\n      ? createMultiSelection(getAnchorPath(selection), nextPathAfter)\n      : undefined\n  }\n\n  if (isAfterSelection(selection)) {\n    return nextPathAfter !== undefined ? createValueSelection(nextPathAfter) : undefined\n  }\n\n  if (isInsideSelection(selection)) {\n    return nextPath !== undefined ? createValueSelection(nextPath) : undefined\n  }\n\n  if (isValueSelection(selection)) {\n    return nextPath !== undefined ? createValueSelection(nextPath) : undefined\n  }\n\n  if (isKeySelection(selection)) {\n    if (nextPath === undefined || nextPath.length === 0) {\n      return undefined\n    }\n\n    const parentPath = initial(nextPath) // not nextPathAfter!\n    const parent = getIn(json, parentPath)\n    if (Array.isArray(parent)) {\n      // switch to value selection: array has no keys\n      return createValueSelection(nextPath)\n    } else {\n      return createKeySelection(nextPath)\n    }\n  }\n\n  if (isMultiSelection(selection)) {\n    return nextPathAfter !== undefined\n      ? createValueSelection(nextPathAfter)\n      : nextPath !== undefined\n        ? createValueSelection(nextPath)\n        : undefined\n  }\n\n  return undefined\n}\n\n/**\n * Get the next selection for a value inside the current object/array\n * If there is no next value, select AFTER.\n * Only applicable for ValueSelection\n */\nexport function getSelectionNextInside(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  path: JSONPath\n): JSONSelection | undefined {\n  // TODO: write unit tests for getSelectionNextInside\n  const parentPath = initial(path)\n  const childPath = [last(path) as string]\n\n  const parent: unknown | undefined = getIn(json, parentPath)\n  const nextPathInside = parent ? getNextVisiblePath(parent, documentState, childPath) : undefined\n\n  if (nextPathInside) {\n    return createValueSelection(parentPath.concat(nextPathInside))\n  } else {\n    return createAfterSelection(path)\n  }\n}\n\n/**\n * Find the caret position and its siblings for a given selection\n */\n// TODO: unit test\nexport function findCaretAndSiblings(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  selection: JSONSelection | undefined,\n  includeInside: boolean\n): {\n  next: CaretPosition | undefined\n  caret: CaretPosition | undefined\n  previous: CaretPosition | undefined\n} {\n  if (!selection) {\n    return { caret: undefined, previous: undefined, next: undefined }\n  }\n  const visibleCaretPositions = getVisibleCaretPositions(json, documentState, includeInside)\n\n  const index = visibleCaretPositions.findIndex((caret) => {\n    return (\n      isEqual(caret.path, getFocusPath(selection)) && String(caret.type) === String(selection.type)\n    )\n  })\n\n  return {\n    caret: index !== -1 ? visibleCaretPositions[index] : undefined,\n\n    previous: index !== -1 && index > 0 ? visibleCaretPositions[index - 1] : undefined,\n\n    next:\n      index !== -1 && index < visibleCaretPositions.length - 1\n        ? visibleCaretPositions[index + 1]\n        : undefined\n  }\n}\n\nexport function getSelectionLeft(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  selection: JSONSelection | undefined,\n  keepAnchorPath = false,\n  includeInside = true\n): JSONSelection | undefined {\n  if (!selection) {\n    return undefined\n  }\n\n  const { caret, previous } = findCaretAndSiblings(json, documentState, selection, includeInside)\n\n  if (keepAnchorPath) {\n    if (!isMultiSelection(selection)) {\n      return createMultiSelection(selection.path, selection.path)\n    }\n\n    return undefined\n  }\n\n  if (caret && previous) {\n    return fromCaretPosition(previous)\n  }\n\n  const parentPath = initial(getFocusPath(selection))\n  const parent = getIn(json, parentPath)\n\n  if (isValueSelection(selection) && Array.isArray(parent)) {\n    return createMultiSelection(selection.path, selection.path)\n  }\n\n  if (isMultiSelection(selection) && !Array.isArray(parent)) {\n    return createKeySelection(selection.focusPath)\n  }\n\n  return undefined\n}\n\nexport function getSelectionRight(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  selection: JSONSelection | undefined,\n  keepAnchorPath = false,\n  includeInside = true\n): JSONSelection | undefined {\n  if (!selection) {\n    return undefined\n  }\n\n  const { caret, next } = findCaretAndSiblings(json, documentState, selection, includeInside)\n\n  if (keepAnchorPath) {\n    if (!isMultiSelection(selection)) {\n      return createMultiSelection(selection.path, selection.path)\n    }\n\n    return undefined\n  }\n\n  if (caret && next) {\n    return fromCaretPosition(next)\n  }\n\n  if (isMultiSelection(selection)) {\n    return createValueSelection(selection.focusPath)\n  }\n\n  return undefined\n}\n\n/**\n * Get a proper initial selection based on what is visible\n */\nexport function getInitialSelection(\n  json: unknown,\n  documentState: DocumentState | undefined\n): JSONSelection {\n  const visiblePaths = getVisiblePaths(json, documentState)\n\n  // find the first, deepest nested entry (normally a value, not an Object/Array)\n  let index = 0\n  while (\n    index < visiblePaths.length - 1 &&\n    visiblePaths[index + 1].length > visiblePaths[index].length\n  ) {\n    index++\n  }\n\n  const path = visiblePaths[index]\n  return path === undefined || path.length === 0 || Array.isArray(getIn(json, initial(path)))\n    ? createValueSelection(path) // Array items and root object/array do not have a key, so select value in that case\n    : createKeySelection(path)\n}\n\nexport function createSelectionFromOperations(\n  json: unknown,\n  operations: JSONPatchDocument\n): JSONSelection | undefined {\n  if (operations.length === 1) {\n    const operation = first(operations) as JSONPatchOperation\n    if (operation.op === 'replace') {\n      // a replaced value\n      const path = parsePath(json, operation.path)\n\n      return createValueSelection(path)\n    }\n  }\n\n  if (!isEmpty(operations) && operations.every((operation) => operation.op === 'move')) {\n    const firstOp = first(operations)\n    const otherOps = operations.slice(1)\n\n    if (\n      (isJSONPatchCopy(firstOp) || isJSONPatchMove(firstOp)) &&\n      firstOp.from !== firstOp.path &&\n      otherOps.every((op) => (isJSONPatchCopy(op) || isJSONPatchMove(op)) && op.from === op.path)\n    ) {\n      // a renamed key\n      const path = parsePath(json, firstOp.path)\n\n      return createKeySelection(path)\n    }\n  }\n\n  const paths = operations\n    .filter((operation) => {\n      return (\n        operation.op !== 'test' &&\n        operation.op !== 'remove' &&\n        (operation.op !== 'move' || operation.from !== operation.path) &&\n        typeof operation.path === 'string'\n      )\n    })\n    .map((operation) => parsePath(json, operation.path))\n\n  if (isEmpty(paths)) {\n    return undefined\n  }\n\n  // TODO: make this function robust against operations which do not have consecutive paths or have wrongly ordered paths\n\n  return {\n    type: SelectionType.multi,\n    anchorPath: first(paths) as JSONPath,\n    focusPath: last(paths) as JSONPath\n  }\n}\n\n/**\n * Find the common path of two paths.\n * For example findCommonRoot(['arr', '1', 'name'], ['arr', '1', 'address', 'contact']) returns ['arr', '1']\n */\n// TODO: write unit tests for findSharedPath\nexport function findSharedPath(path1: JSONPath, path2: JSONPath): JSONPath {\n  let i = 0\n  while (i < path1.length && i < path2.length && path1[i] === path2[i]) {\n    i++\n  }\n\n  return path1.slice(0, i)\n}\n\nexport function singleItemSelected(selection: JSONSelection | undefined): boolean {\n  return (\n    isKeySelection(selection) ||\n    isValueSelection(selection) ||\n    isMultiSelectionWithOneItem(selection)\n  )\n}\n\nexport function findRootPath(json: unknown, selection: JSONSelection): JSONPath {\n  return singleItemSelected(selection) && isObjectOrArray(getIn(json, getFocusPath(selection)))\n    ? getFocusPath(selection)\n    : initial(getFocusPath(selection)) // the parent path of the paths\n}\n\nexport function pathStartsWith(path: JSONPath, parentPath: JSONPath): boolean {\n  if (path.length < parentPath.length) {\n    return false\n  }\n\n  for (let i = 0; i < parentPath.length; i++) {\n    if (path[i] !== parentPath[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// TODO: write unit tests\nexport function removeEditModeFromSelection(\n  selection: JSONSelection | undefined\n): JSONSelection | undefined {\n  if (isEditingSelection(selection)) {\n    const { type, path } = selection\n    return { type, path } as KeySelection | ValueSelection\n  }\n\n  return selection\n}\n\nexport function createKeySelection(path: JSONPath): KeySelection {\n  return { type: SelectionType.key, path }\n}\n\nexport function createEditKeySelection(path: JSONPath, initialValue?: string): EditKeySelection {\n  return { type: SelectionType.key, path, edit: true, initialValue }\n}\n\nexport function createValueSelection(path: JSONPath): ValueSelection {\n  return { type: SelectionType.value, path }\n}\n\nexport function createEditValueSelection(\n  path: JSONPath,\n  initialValue?: string\n): EditValueSelection {\n  return { type: SelectionType.value, path, edit: true, initialValue }\n}\n\nexport function createInsideSelection(path: JSONPath): InsideSelection {\n  return {\n    type: SelectionType.inside,\n    path\n  }\n}\n\nexport function createAfterSelection(path: JSONPath): AfterSelection {\n  return {\n    type: SelectionType.after,\n    path\n  }\n}\n\nexport function createMultiSelection(anchorPath: JSONPath, focusPath: JSONPath): MultiSelection {\n  // normalize the paths to both be a child of a shared parent\n  const sharedPath = findSharedPath(anchorPath, focusPath)\n  const isParent = anchorPath.length > sharedPath.length && focusPath.length > sharedPath.length\n\n  return {\n    type: SelectionType.multi,\n    anchorPath: isParent ? sharedPath.concat(anchorPath[sharedPath.length]) : sharedPath,\n    focusPath: isParent ? sharedPath.concat(focusPath[sharedPath.length]) : sharedPath\n  }\n}\n\n/**\n * Turn selected contents into plain text partial JSON, usable for copying to\n * clipboard for example.\n */\nexport function selectionToPartialJson(\n  json: unknown,\n  selection: JSONSelection | undefined,\n  indentation: number | string | undefined,\n  parser: JSONParser\n): string | undefined {\n  if (isKeySelection(selection)) {\n    return String(last(selection.path))\n  }\n\n  if (isValueSelection(selection)) {\n    const value = getIn(json, selection.path)\n    return typeof value === 'string' ? value : parser.stringify(value, null, indentation) // TODO: customizable indentation?\n  }\n\n  if (isMultiSelection(selection)) {\n    if (isEmpty(selection.focusPath)) {\n      // root object -> does not have a parent key/index\n      return parser.stringify(json, null, indentation)\n    }\n\n    const parentPath = getParentPath(selection)\n    const parent = getIn(json, parentPath)\n    if (Array.isArray(parent)) {\n      if (isMultiSelectionWithOneItem(selection)) {\n        // do not suffix a single selected array item with a comma\n        const item = getIn(json, selection.focusPath)\n        return parser.stringify(item, null, indentation)\n      } else {\n        return getSelectionPaths(json, selection)\n          .map((path) => {\n            const item = getIn(json, path)\n            return `${parser.stringify(item, null, indentation)},`\n          })\n          .join('\\n')\n      }\n    } else {\n      // parent is Object\n      return getSelectionPaths(json, selection)\n        .map((path) => {\n          const key = last(path)\n          const value = getIn(json, path)\n          return `${parser.stringify(key)}: ${parser.stringify(value, null, indentation)},`\n        })\n        .join('\\n')\n    }\n  }\n\n  return undefined\n}\n\nexport function isEditingSelection(\n  selection: JSONSelection | undefined\n): selection is EditKeySelection | EditValueSelection {\n  return (\n    (isKeySelection(selection) || isValueSelection(selection)) &&\n    (selection as Record<string, unknown>).edit === true\n  )\n}\n\n/**\n * Create a selection which selects the root of the document\n */\n// TODO: write unit tests\nexport function selectAll(): JSONSelection {\n  return createValueSelection([])\n}\n\n// TODO: write unit tests\nexport function hasSelectionContents(selection: JSONSelection | undefined): boolean {\n  return isKeySelection(selection) || isValueSelection(selection) || isMultiSelection(selection)\n}\n\n/**\n * Test whether the current selection can be converted.\n * That is the case when the selection is a key/value, or a multi selection with only one path\n */\nexport function canConvert(selection: JSONSelection | undefined): boolean {\n  return (\n    isKeySelection(selection) ||\n    isValueSelection(selection) ||\n    isMultiSelectionWithOneItem(selection)\n  )\n}\n\n// TODO: unit test\n// eslint-disable-next-line consistent-return\nexport function fromCaretPosition(caretPosition: CaretPosition): JSONSelection {\n  switch (caretPosition.type) {\n    case CaretType.key:\n      return createKeySelection(caretPosition.path)\n    case CaretType.value:\n      return createValueSelection(caretPosition.path)\n    case CaretType.after:\n      return createAfterSelection(caretPosition.path)\n    case CaretType.inside:\n      return createInsideSelection(caretPosition.path)\n  }\n}\n\n// TODO: unit test\n// eslint-disable-next-line consistent-return\nexport function fromSelectionType(selectionType: SelectionType, path: JSONPath): JSONSelection {\n  switch (selectionType) {\n    case SelectionType.key:\n      return createKeySelection(path)\n    case SelectionType.value:\n      return createValueSelection(path)\n    case SelectionType.after:\n      return createAfterSelection(path)\n    case SelectionType.inside:\n      return createInsideSelection(path)\n    case SelectionType.multi:\n    case SelectionType.text: // type `text` is not applicable, but we need to handle all types\n      return createMultiSelection(path, path)\n  }\n}\n\nexport function selectionIfOverlapping(\n  json: unknown | undefined,\n  selection: JSONSelection | undefined,\n  path: JSONPath\n): JSONSelection | undefined {\n  if (!selection) {\n    return undefined\n  }\n\n  if (pathInSelection(json, selection, path)) {\n    return selection\n  }\n\n  const sharedPath = isMultiSelection(selection) ? initial(selection.focusPath) : selection.path\n  if (pathStartsWith(sharedPath, path)) {\n    return selection\n  }\n\n  return undefined\n}\n\nexport function pathInSelection(\n  json: unknown | undefined,\n  selection: JSONSelection | undefined,\n  path: JSONPath\n): boolean {\n  if (json === undefined || !selection) {\n    return false\n  }\n\n  if (isKeySelection(selection) || isInsideSelection(selection) || isAfterSelection(selection)) {\n    return isEqual(selection.path, path)\n  }\n\n  if (isValueSelection(selection)) {\n    return pathStartsWith(path, selection.path)\n  }\n\n  if (isMultiSelection(selection)) {\n    const startPath = getStartPath(json, selection)\n    const endPath = getEndPath(json, selection)\n    const parentPath = initial(selection.focusPath)\n\n    if (!pathStartsWith(path, parentPath) || path.length <= parentPath.length) {\n      return false\n    }\n\n    const startIndex = getChildIndex(json, selection, startPath)\n    const endIndex = getChildIndex(json, selection, endPath)\n    const pathIndex = getChildIndex(json, selection, path)\n    return pathIndex !== -1 && pathIndex >= startIndex && pathIndex <= endIndex\n  }\n\n  return false\n}\n\nfunction getChildIndex(json: unknown, selection: MultiSelection, path: JSONPath): number {\n  const parentPath = initial(selection.focusPath)\n  if (!pathStartsWith(path, parentPath) || path.length <= parentPath.length) {\n    return -1\n  }\n\n  const key = path[parentPath.length]\n  const parent = getIn(json, parentPath)\n\n  if (isJSONObject(parent)) {\n    const keys = Object.keys(parent)\n    return keys.indexOf(key)\n  }\n\n  if (isJSONArray(parent)) {\n    const index = int(key)\n    if (index < parent.length) {\n      return index\n    }\n  }\n\n  return -1\n}\n\n// TODO: write some unit tests\nexport function getFocusPath(selection: JSONSelection): JSONPath {\n  return isMultiSelection(selection) ? selection.focusPath : selection.path\n}\n\n// TODO: write some unit tests\nexport function getAnchorPath(selection: JSONSelection): JSONPath {\n  return isMultiSelection(selection) ? selection.anchorPath : selection.path\n}\n","/**\n * A simplified version of https://github.com/JedWatson/classnames\n *\n * Example usage:\n *\n *     classnames('primary-button', { selected: true }, 'left')\n *\n */\nexport function classnames(...args: Array<string | Record<string, boolean> | undefined>): string {\n  const classes = []\n\n  for (const arg of args) {\n    if (typeof arg === 'string') {\n      classes.push(arg)\n    }\n\n    if (arg && typeof arg === 'object') {\n      for (const key in arg) {\n        if (Object.hasOwnProperty.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n","import { isUrl, valueType } from '$lib/utils/typeUtils.js'\nimport { type JSONParser, Mode } from '$lib/types.js'\nimport { classnames } from '$lib/utils/cssUtils.js'\n\nexport function getValueClass(value: unknown, mode: Mode, parser: JSONParser): string {\n  const type = valueType(value, parser)\n\n  return classnames('jse-value', 'jse-' + type, {\n    'jse-url': isUrl(value),\n    'jse-empty': typeof value === 'string' && value.length === 0,\n    'jse-table-cell': mode === Mode.table\n  })\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { onDestroy, onMount } from 'svelte'\n  import { addNewLineSuffix, removeNewLineSuffix, setCursorToEnd } from '$lib/utils/domUtils.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { noop } from 'lodash-es'\n  import type { OnFind, OnPaste } from '$lib/types'\n  import { UpdateSelectionAfterChange } from '$lib/types'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  const debug = createDebug('jsoneditor:EditableDiv')\n\n  export let value: string\n  export let initialValue: string | undefined\n  export let shortText = false\n  export let label: string\n  export let onChange: (newValue: string, updateSelection: UpdateSelectionAfterChange) => void\n  export let onCancel: () => void\n  export let onFind: OnFind\n  export let onPaste: OnPaste = noop\n  export let onValueClass: (value: string) => string = () => ''\n\n  let domValue: HTMLDivElement | undefined\n  let valueClass: string\n  $: valueClass = onValueClass(value)\n  let closed = false\n\n  onMount(() => {\n    debug('onMount', { value, initialValue })\n    setDomValue(initialValue !== undefined ? initialValue : value)\n\n    // focus\n    if (domValue) {\n      setCursorToEnd(domValue)\n    }\n  })\n\n  onDestroy(() => {\n    const newValue = getDomValue()\n\n    debug('onDestroy', { closed, value, newValue })\n\n    if (!closed && newValue !== value) {\n      onChange(newValue, UpdateSelectionAfterChange.no)\n    }\n  })\n\n  function getDomValue(): string {\n    if (!domValue) {\n      return ''\n    }\n    return removeNewLineSuffix(domValue.innerText)\n  }\n\n  function setDomValue(updatedValue: string) {\n    if (!domValue) {\n      return\n    }\n    domValue.innerText = addNewLineSuffix(updatedValue)\n  }\n\n  function handleValueInput() {\n    const newValue = getDomValue()\n\n    if (newValue === '') {\n      // immediately update to clean up any left over <br/>\n      setDomValue('')\n    }\n\n    // update class\n    valueClass = onValueClass(newValue)\n  }\n\n  function handleCancel() {\n    // cancel changes (needed to prevent triggering a change onDestroy)\n    closed = true\n\n    onCancel()\n  }\n\n  function handleValueKeyDown(event: KeyboardEvent) {\n    event.stopPropagation()\n\n    const combo = keyComboFromEvent(event)\n\n    if (combo === 'Escape') {\n      handleCancel()\n    }\n\n    if (combo === 'Enter' || combo === 'Tab') {\n      // apply changes\n      closed = true\n\n      const newValue = getDomValue()\n      onChange(newValue, UpdateSelectionAfterChange.nextInside)\n    }\n\n    if (combo === 'Ctrl+F') {\n      event.preventDefault()\n      onFind(false)\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      onFind(true)\n    }\n  }\n\n  function handleValuePaste(event: ClipboardEvent) {\n    event.stopPropagation()\n\n    if (!onPaste || !event.clipboardData) {\n      return\n    }\n\n    const clipboardText = event.clipboardData.getData('text/plain')\n    onPaste(clipboardText)\n  }\n\n  function handleBlur() {\n    const hasFocus = document.hasFocus()\n    const newValue = getDomValue()\n\n    debug('handleBlur', { hasFocus, closed, value, newValue })\n\n    // we only want to close the editable div when the focus did go to another\n    // element on the same page, but not when the user switches to another\n    // application or browser tab to copy/paste something whilst still editing\n    // the value, hence the check for document.hasFocus()\n    if (document.hasFocus() && !closed) {\n      closed = true\n      if (newValue !== value) {\n        onChange(newValue, UpdateSelectionAfterChange.self)\n      } else {\n        // Note that we do not fire an onCancel here: a blur action\n        // is caused by the user clicking somewhere else. If we apply\n        // onCancel now, we would override the selection that the user\n        // wants by clicking somewhere else in the editor (since `blur`\n        // is occurring *after* `mousedown`).\n      }\n    }\n  }\n</script>\n\n<div\n  role=\"textbox\"\n  aria-label={label}\n  tabindex=\"0\"\n  class={classnames('jse-editable-div', valueClass, { 'jse-short-text': shortText })}\n  contenteditable=\"true\"\n  spellcheck=\"false\"\n  on:input={handleValueInput}\n  on:keydown={handleValueKeyDown}\n  on:paste={handleValuePaste}\n  on:blur={handleBlur}\n  bind:this={domValue}\n/>\n\n<style src=\"./EditableDiv.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import { isObjectOrArray, stringConvert } from '$lib/utils/typeUtils.js'\n  import { createValueSelection, getFocusPath, isEditingSelection } from '$lib/logic/selection.js'\n  import { getValueClass } from '$lib/plugins/value/components/utils/getValueClass.js'\n  import EditableDiv from '../../../components/controls/EditableDiv.svelte'\n  import {\n    type FindNextInside,\n    type JSONParser,\n    type JSONSelection,\n    Mode,\n    type OnFind,\n    type OnJSONSelect,\n    type OnPasteJson,\n    type OnPatch,\n    UpdateSelectionAfterChange,\n    type ValueNormalization\n  } from '$lib/types.js'\n  import { isEqual } from 'lodash-es'\n  import { expandSmart } from '$lib/logic/documentState'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let selection: JSONSelection | undefined\n  export let mode: Mode\n  export let parser: JSONParser\n  export let normalization: ValueNormalization\n  export let enforceString: boolean\n  export let onPatch: OnPatch\n  export let onPasteJson: OnPasteJson\n  export let onSelect: OnJSONSelect\n  export let onFind: OnFind\n  export let focus: () => void\n  export let findNextInside: FindNextInside\n\n  function convert(value: string): unknown {\n    return enforceString ? value : stringConvert(value, parser)\n  }\n\n  function handleChangeValue(newValue: string, updateSelection: UpdateSelectionAfterChange) {\n    onPatch(\n      [\n        {\n          op: 'replace',\n          path: compileJSONPointer(path),\n          value: convert(normalization.unescapeValue(newValue))\n        }\n      ],\n      (_, patchedState, patchedSelection) => {\n        // Leave the selection as is when it is no longer the path that we were editing here\n        // This happens for example when the user clicks or double-clicks on another value\n        // whilst editing a value\n        if (patchedSelection && !isEqual(path, getFocusPath(patchedSelection))) {\n          return undefined\n        }\n\n        const selection =\n          updateSelection === UpdateSelectionAfterChange.nextInside\n            ? findNextInside(path)\n            : createValueSelection(path)\n\n        return {\n          state: patchedState,\n          selection\n        }\n      }\n    )\n\n    focus()\n  }\n\n  function handleCancelChange() {\n    onSelect(createValueSelection(path))\n    focus()\n  }\n\n  function handlePaste(pastedText: string): void {\n    try {\n      const pastedJson = parser.parse(pastedText)\n      if (isObjectOrArray(pastedJson)) {\n        onPasteJson({\n          path,\n          contents: pastedJson,\n          onPasteAsJson: () => {\n            // exit edit mode\n            handleCancelChange()\n\n            // replace the value with the JSON object/array\n            const operations: JSONPatchDocument = [\n              {\n                op: 'replace',\n                path: compileJSONPointer(path),\n                value: pastedJson\n              }\n            ]\n\n            onPatch(operations, (patchedJson, patchedState) => ({\n              state: expandSmart(patchedJson, patchedState, path)\n            }))\n          }\n        })\n      }\n    } catch (err) {\n      // silently ignore: thee pasted text is no valid JSON object or array,\n      // no need to do anything\n    }\n  }\n\n  function handleOnValueClass(value: string): string {\n    return getValueClass(convert(normalization.unescapeValue(value)), mode, parser)\n  }\n</script>\n\n<EditableDiv\n  value={normalization.escapeValue(value)}\n  initialValue={isEditingSelection(selection) ? selection.initialValue : undefined}\n  label=\"Edit value\"\n  onChange={handleChangeValue}\n  onCancel={handleCancelChange}\n  onPaste={handlePaste}\n  {onFind}\n  onValueClass={handleOnValueClass}\n/>\n","import { cloneDeepWith, first, initial, isEmpty, last, times } from 'lodash-es'\nimport {\n  compileJSONPointer,\n  existsIn,\n  getIn,\n  isJSONArray,\n  isJSONObject,\n  isJSONPatchMove,\n  isJSONPatchRemove,\n  isJSONPatchReplace,\n  type JSONPatchAdd,\n  type JSONPatchCopy,\n  type JSONPatchDocument,\n  type JSONPatchOperation,\n  type JSONPath,\n  parseJSONPointer,\n  revertJSONPatch\n} from 'immutable-json-patch'\nimport { parseAndRepair, parseAndRepairOrUndefined, parsePartialJson } from '../utils/jsonUtils.js'\nimport { findUniqueName } from '../utils/stringUtils.js'\nimport { isObject, isObjectOrArray } from '../utils/typeUtils.js'\nimport { getNextKeys } from './documentState.js'\nimport {\n  createAfterSelection,\n  createInsideSelection,\n  createSelectionFromOperations,\n  createValueSelection,\n  getEndPath,\n  getFocusPath,\n  getParentPath,\n  getSelectionPaths,\n  getStartPath,\n  isAfterSelection,\n  isInsideSelection,\n  isKeySelection,\n  isMultiSelection,\n  isValueSelection,\n  pathStartsWith\n} from './selection.js'\nimport type { ClipboardValues, DragInsideAction, JSONParser, JSONSelection } from '$lib/types'\nimport { int } from '../utils/numberUtils.js'\n\n/**\n * Create a JSONPatch for an insert operation.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the inserted node in case of duplicating\n * and object property\n */\n// TODO: write tests\nexport function insertBefore(\n  json: unknown,\n  path: JSONPath,\n  values: ClipboardValues\n): JSONPatchDocument {\n  const parentPath = initial(path)\n  const parent = getIn(json, parentPath)\n\n  if (isJSONArray(parent)) {\n    // the path is parsed from a JSONPatch operation,\n    // so array indices are a string which we have to parse into a number\n    const offset = int(last(path) as string)\n    return values.map((entry, index) => ({\n      op: 'add',\n      path: compileJSONPointer(parentPath.concat(String(offset + index))),\n      value: entry.value\n    }))\n  } else if (isJSONObject(parent)) {\n    // 'object'\n    const afterKey = last(path)\n    const keys = Object.keys(parent)\n    const nextKeys = afterKey !== undefined ? getNextKeys(keys, afterKey, true) : []\n\n    return [\n      // insert new values\n      ...values.map((entry) => {\n        const newProp = findUniqueName(entry.key, keys)\n        return {\n          op: 'add',\n          path: compileJSONPointer(parentPath.concat(newProp)),\n          value: entry.value\n        } as JSONPatchAdd\n      }),\n\n      // move all lower down keys so the inserted key will maintain its position\n      ...nextKeys.map((key) => moveDown(parentPath, key))\n    ]\n  } else {\n    throw new Error('Cannot create insert operations: parent must be an Object or Array')\n  }\n}\n\n/**\n * Create a JSONPatch for an append operation. The values will be appended\n * to the end of the array or object.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the inserted node in case of duplicating\n * and object property\n */\nexport function append(json: unknown, path: JSONPath, values: ClipboardValues): JSONPatchDocument {\n  const parent = getIn(json, path)\n\n  if (Array.isArray(parent)) {\n    const offset = parent.length\n    return values.map((entry, index) => ({\n      op: 'add',\n      path: compileJSONPointer(path.concat(String(offset + index))),\n      value: entry.value\n    }))\n  } else {\n    // 'object'\n    return values.map((entry) => {\n      const newProp = findUniqueName(entry.key, Object.keys(parent as Record<string, unknown>))\n      return {\n        op: 'add',\n        path: compileJSONPointer(path.concat(newProp)),\n        value: entry.value\n      }\n    })\n  }\n}\n\n/**\n * Rename an object key\n * Not applicable to arrays\n */\nexport function rename(\n  parentPath: JSONPath,\n  keys: string[],\n  oldKey: string,\n  newKey: string\n): JSONPatchDocument {\n  const filteredKeys = keys.filter((key) => key !== oldKey)\n  const newKeyUnique = findUniqueName(newKey, filteredKeys)\n  const nextKeys = getNextKeys(keys, oldKey, false)\n\n  return [\n    // rename a key\n    {\n      op: 'move',\n      from: compileJSONPointer(parentPath.concat(oldKey)),\n      path: compileJSONPointer(parentPath.concat(newKeyUnique))\n    },\n\n    // move all lower down keys so the renamed key will maintain it's position\n    ...nextKeys.map((key) => moveDown(parentPath, key))\n  ]\n}\n\n/**\n * Create a JSONPatch for an insert operation.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the inserted node in case of duplicating\n * and object property\n */\nexport function replace(\n  json: unknown,\n  paths: JSONPath[],\n  values: ClipboardValues\n): JSONPatchDocument {\n  const firstPath = first(paths)\n  const parentPath = initial(firstPath)\n  const parent = getIn(json, parentPath)\n\n  if (isJSONArray(parent)) {\n    const firstPath = first(paths)\n    const offset = firstPath ? int(last(firstPath) as string) : 0\n\n    return [\n      // remove operations\n      ...removeAll(paths),\n\n      // insert operations\n      ...values.map((entry, index) => {\n        const operation: JSONPatchOperation = {\n          op: 'add',\n          path: compileJSONPointer(parentPath.concat(String(index + offset))),\n          value: entry.value\n        }\n\n        return operation\n      })\n    ]\n  } else if (isJSONObject(parent)) {\n    // parent is Object\n    // if we're going to replace an existing object with key \"a\" with a new\n    // key \"a\", we must not create a new unique name \"a (copy)\".\n    const lastPath = last(paths)\n    const parentPath = initial(lastPath)\n    const beforeKey = last(lastPath)\n    const keys: string[] = Object.keys(parent)\n    const nextKeys = beforeKey !== undefined ? getNextKeys(keys, beforeKey, false) : []\n    const removeKeys = new Set(paths.map((path) => last(path)))\n    const filteredKeys = keys.filter((key) => !removeKeys.has(key))\n\n    return [\n      // remove operations\n      ...removeAll(paths),\n\n      // insert operations\n      ...values.map((entry) => {\n        const newProp = findUniqueName(entry.key, filteredKeys)\n        return {\n          op: 'add',\n          path: compileJSONPointer(parentPath.concat(newProp)),\n          value: entry.value\n        } as JSONPatchAdd\n      }),\n\n      // move down operations\n      // move all lower down keys so the renamed key will maintain its position\n      ...nextKeys.map((key) => moveDown(parentPath, key))\n    ]\n  } else {\n    throw new Error('Cannot create replace operations: parent must be an Object or Array')\n  }\n}\n\n/**\n * Create a JSONPatch for a duplicate action.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the duplicated node in case of duplicating\n * and object property\n */\nexport function duplicate(json: unknown, paths: JSONPath[]): JSONPatchDocument {\n  // FIXME: here we assume paths is sorted correctly, that's a dangerous assumption\n  const lastPath = last(paths)\n\n  if (isEmpty(lastPath)) {\n    throw new Error('Cannot duplicate root object')\n  }\n\n  const parentPath = initial(lastPath)\n  const beforeKey = last(lastPath)\n  const parent = getIn(json, parentPath)\n\n  if (isJSONArray(parent)) {\n    const lastPath = last(paths)\n    const offset = lastPath ? int(last(lastPath) as string) + 1 : 0\n\n    return [\n      // copy operations\n      ...paths.map((path, index) => {\n        const operation: JSONPatchOperation = {\n          op: 'copy',\n          from: compileJSONPointer(path),\n          path: compileJSONPointer(parentPath.concat(String(index + offset)))\n        }\n\n        return operation\n      })\n    ]\n  } else if (isJSONObject(parent)) {\n    // 'object'\n    const keys = Object.keys(parent)\n    const nextKeys = beforeKey !== undefined ? getNextKeys(keys, beforeKey, false) : []\n\n    return [\n      // copy operations\n      ...paths.map((path) => {\n        const prop = last(path) as string\n        const newProp = findUniqueName(prop, keys)\n\n        return {\n          op: 'copy',\n          from: compileJSONPointer(path),\n          path: compileJSONPointer(parentPath.concat(newProp))\n        } as JSONPatchCopy\n      }),\n\n      // move down operations\n      // move all lower down keys so the renamed key will maintain it's position\n      ...nextKeys.map((key) => moveDown(parentPath, key))\n    ]\n  } else {\n    throw new Error('Cannot create duplicate operations: parent must be an Object or Array')\n  }\n}\n\n/**\n * Create a JSONPatch for an extract action.\n */\n// TODO: write unit tests\nexport function extract(json: unknown, selection: JSONSelection): JSONPatchDocument {\n  if (isValueSelection(selection)) {\n    return [\n      {\n        op: 'move',\n        from: compileJSONPointer(selection.path),\n        path: ''\n      }\n    ]\n  }\n\n  if (isMultiSelection(selection)) {\n    const parentPath = initial(selection.focusPath)\n    const parent = getIn(json, parentPath)\n\n    if (isJSONArray(parent)) {\n      const value = getSelectionPaths(json, selection).map((path) => {\n        const index = int(last(path) as string)\n        return parent[index]\n      })\n\n      return [\n        {\n          op: 'replace',\n          path: '',\n          value\n        }\n      ]\n    } else if (isJSONObject(parent)) {\n      // object\n      const value: Record<string, unknown> = {}\n      getSelectionPaths(json, selection).forEach((path) => {\n        const key = String(last(path))\n        value[key] = parent[key]\n      })\n\n      return [\n        {\n          op: 'replace',\n          path: '',\n          value\n        }\n      ]\n    }\n  } else {\n    throw new Error('Cannot create extract operations: parent must be an Object or Array')\n  }\n\n  // this should never happen\n  throw new Error('Cannot extract: unsupported type of selection ' + JSON.stringify(selection))\n}\n\n// TODO: write unit tests\nexport function insert(\n  json: unknown,\n  selection: JSONSelection | undefined,\n  clipboardText: string,\n  parser: JSONParser\n): JSONPatchDocument {\n  if (isKeySelection(selection)) {\n    // rename key\n    const clipboard = parseAndRepairOrUndefined(clipboardText, parser)\n    const parentPath = initial(selection.path)\n    const parent = getIn(json, parentPath)\n    const keys = Object.keys(parent as Record<string, unknown>)\n    const oldKey = last(selection.path) as string\n    const newKey = typeof clipboard === 'string' ? clipboard : clipboardText\n\n    return rename(parentPath, keys, oldKey, newKey)\n  }\n\n  if (\n    isValueSelection(selection) ||\n    (isMultiSelection(selection) && isEmpty(selection.focusPath)) // root selected\n  ) {\n    // replace selected value (new value can be primitive or an array/object with contents)\n    try {\n      return [\n        {\n          op: 'replace',\n          path: compileJSONPointer(getFocusPath(selection)),\n          value: parsePartialJson(clipboardText, (text) => parseAndRepair(text, parser))\n        }\n      ]\n    } catch (err) {\n      // parsing failed -> just paste the raw text as value\n      return [\n        {\n          op: 'replace',\n          path: compileJSONPointer(getFocusPath(selection)),\n          value: clipboardText\n        }\n      ]\n    }\n  }\n\n  if (isMultiSelection(selection)) {\n    const newValues = clipboardToValues(clipboardText, parser)\n\n    return replace(json, getSelectionPaths(json, selection), newValues)\n  }\n\n  if (isAfterSelection(selection)) {\n    const newValues = clipboardToValues(clipboardText, parser)\n    const path = selection.path\n    const parentPath = initial(path)\n    const parent = getIn(json, parentPath)\n\n    if (isJSONArray(parent)) {\n      const index = int(last(path) as string)\n      const nextItemPath = parentPath.concat(String(index + 1))\n\n      return insertBefore(json, nextItemPath, newValues)\n    } else if (isJSONObject(parent)) {\n      // value is an Object\n      const key = String(last(path))\n      const keys: string[] = Object.keys(parent)\n      if (isEmpty(keys) || last(keys) === key) {\n        return append(json, parentPath, newValues)\n      } else {\n        const index = keys.indexOf(key)\n        const nextKey = keys[index + 1]\n        const nextKeyPath = parentPath.concat(nextKey)\n\n        return insertBefore(json, nextKeyPath, newValues)\n      }\n    } else {\n      throw new Error('Cannot create insert operations: parent must be an Object or Array')\n    }\n  }\n\n  if (isInsideSelection(selection)) {\n    const newValues = clipboardToValues(clipboardText, parser)\n    const path = selection.path\n    const value = getIn(json, path)\n\n    if (isJSONArray(value)) {\n      const firstItemPath = path.concat('0')\n      return insertBefore(json, firstItemPath, newValues)\n    } else if (isJSONObject(value)) {\n      // value is an Object\n      const keys = Object.keys(value)\n      if (isEmpty(keys)) {\n        return append(json, path, newValues)\n      } else {\n        const firstKey = first(keys) as string\n        const firstKeyPath = path.concat(firstKey)\n\n        return insertBefore(json, firstKeyPath, newValues)\n      }\n    } else {\n      throw new Error('Cannot create insert operations: parent must be an Object or Array')\n    }\n  }\n\n  // this should never happen\n  throw new Error('Cannot insert: unsupported type of selection ' + JSON.stringify(selection))\n}\n\nexport function moveInsideParent(\n  json: unknown,\n  selection: JSONSelection | undefined,\n  dragInsideAction: DragInsideAction\n): JSONPatchDocument {\n  if (!selection) {\n    return []\n  }\n\n  const beforePath = 'beforePath' in dragInsideAction ? dragInsideAction['beforePath'] : undefined\n  const append = 'append' in dragInsideAction ? dragInsideAction['append'] : undefined\n\n  const parentPath = initial(getFocusPath(selection))\n  const parent = getIn(json, parentPath)\n\n  if (\n    !append &&\n    !(beforePath && pathStartsWith(beforePath, parentPath) && beforePath.length > parentPath.length)\n  ) {\n    return []\n  }\n\n  const startPath = getStartPath(json, selection)\n  const endPath = getEndPath(json, selection)\n  const startKey = last(startPath) as string\n  const endKey = last(endPath) as string\n  const toKey: string | undefined = beforePath ? beforePath[parentPath.length] : undefined\n\n  if (isJSONObject(parent)) {\n    const keys = Object.keys(parent)\n    const startIndex = keys.indexOf(startKey)\n    const endIndex = keys.indexOf(endKey)\n    const toIndex = append ? keys.length : toKey !== undefined ? keys.indexOf(toKey) : -1\n\n    if (startIndex !== -1 && endIndex !== -1 && toIndex !== -1) {\n      if (toIndex > startIndex) {\n        // moving down\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return [...keys.slice(startIndex, endIndex + 1), ...keys.slice(toIndex, keys.length)].map(\n          (key) => moveDown(parentPath, key)\n        )\n      } else {\n        // moving up\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return [...keys.slice(toIndex, startIndex), ...keys.slice(endIndex + 1, keys.length)].map(\n          (key) => moveDown(parentPath, key)\n        )\n      }\n    }\n  } else if (isJSONArray(parent)) {\n    // array\n    const startIndex = int(startKey)\n    const endIndex = int(endKey)\n    const toIndex = toKey !== undefined ? int(toKey) : parent.length\n    const count = endIndex - startIndex + 1\n\n    if (toIndex < startIndex) {\n      // move up\n      return times(count, (offset) => {\n        return {\n          op: 'move',\n          from: compileJSONPointer(parentPath.concat(String(startIndex + offset))),\n          path: compileJSONPointer(parentPath.concat(String(toIndex + offset)))\n        }\n      })\n    } else {\n      // move down\n      return times(count, () => {\n        return {\n          op: 'move',\n          from: compileJSONPointer(parentPath.concat(String(startIndex))),\n          path: compileJSONPointer(parentPath.concat(String(toIndex)))\n        }\n      })\n    }\n  } else {\n    throw new Error('Cannot create move operations: parent must be an Object or Array')\n  }\n\n  return []\n}\n\nexport function createNewValue(\n  json: unknown | undefined,\n  selection: JSONSelection | undefined,\n  valueType: 'object' | 'array' | 'structure' | 'value'\n): unknown {\n  if (valueType === 'object') {\n    return {}\n  }\n\n  if (valueType === 'array') {\n    return []\n  }\n\n  if (valueType === 'structure' && json !== undefined) {\n    const parentPath = selection ? getParentPath(selection) : []\n    const parent = getIn(json, parentPath)\n\n    if (Array.isArray(parent) && !isEmpty(parent)) {\n      const jsonExample = first(parent)\n      if (isObjectOrArray(jsonExample)) {\n        return cloneDeepWith(jsonExample, (value) => {\n          return Array.isArray(value)\n            ? []\n            : isObject(value)\n              ? undefined // leave object as is, will recurse into it\n              : ''\n        })\n      } else {\n        // just a primitive value\n        return ''\n      }\n    }\n  }\n\n  // type === value,\n  // or type === structure but the parent is no array or an array containing\n  // primitive values (and no objects having any structure).\n  return ''\n}\n\n/**\n * Create a JSONPatch for a remove operation\n */\nexport function remove(path: JSONPath): JSONPatchDocument {\n  return [\n    {\n      op: 'remove',\n      path: compileJSONPointer(path)\n    }\n  ]\n}\n\n/**\n * Create a JSONPatch for a multiple remove operation\n */\nexport function removeAll(paths: JSONPath[]): JSONPatchDocument {\n  return paths\n    .map((path) => {\n      const operation: JSONPatchOperation = {\n        op: 'remove',\n        path: compileJSONPointer(path)\n      }\n\n      return operation\n    })\n    .reverse() // reverse is needed for arrays: delete the last index first\n}\n\n// helper function to move a key down in an object,\n// so another key can get positioned before the moved down keys\nfunction moveDown(parentPath: JSONPath, key: string): JSONPatchOperation {\n  return {\n    op: 'move',\n    from: compileJSONPointer(parentPath.concat(key)),\n    path: compileJSONPointer(parentPath.concat(key))\n  }\n}\n\nexport function clipboardToValues(clipboardText: string, parser: JSONParser): ClipboardValues {\n  const textIsObject = /^\\s*{/.test(clipboardText)\n  const textIsArray = /^\\s*\\[/.test(clipboardText)\n\n  const clipboardOriginal = parseAndRepairOrUndefined(clipboardText, parser)\n  const clipboardRepaired =\n    clipboardOriginal !== undefined\n      ? clipboardOriginal\n      : parsePartialJson(clipboardText, (text) => parseAndRepair(text, parser))\n\n  if (\n    (textIsObject && isObject(clipboardRepaired)) ||\n    (textIsArray && Array.isArray(clipboardRepaired))\n  ) {\n    return [{ key: 'New item', value: clipboardRepaired }]\n  }\n\n  if (Array.isArray(clipboardRepaired)) {\n    return clipboardRepaired.map((value, index) => {\n      return { key: 'New item ' + index, value }\n    })\n  }\n\n  if (isObject(clipboardRepaired)) {\n    return Object.keys(clipboardRepaired).map((key) => {\n      return { key, value: clipboardRepaired[key] }\n    })\n  }\n\n  // regular value\n  return [{ key: 'New item', value: clipboardRepaired }]\n}\n\n// TODO: write unit tests\nexport function createRemoveOperations(\n  json: unknown,\n  selection: JSONSelection\n): { newSelection: JSONSelection | undefined; operations: JSONPatchDocument } {\n  if (isKeySelection(selection)) {\n    // FIXME: DOESN'T work yet\n    const parentPath = initial(selection.path)\n    const parent = getIn(json, parentPath)\n    const keys = Object.keys(parent as Record<string, unknown>)\n    const oldKey = last(selection.path) as string\n    const newKey = ''\n\n    const operations = rename(parentPath, keys, oldKey, newKey)\n    const newSelection = createSelectionFromOperations(json, operations)\n\n    return { operations, newSelection }\n  }\n\n  if (isValueSelection(selection)) {\n    const operations: JSONPatchDocument = [\n      {\n        op: 'replace',\n        path: compileJSONPointer(selection.path),\n        value: ''\n      }\n    ]\n\n    return { operations, newSelection: selection }\n  }\n\n  if (isMultiSelection(selection)) {\n    const paths = getSelectionPaths(json, selection)\n    const operations = removeAll(paths)\n    const lastPath = last(paths)\n\n    if (isEmpty(lastPath)) {\n      // there is no parent, this is the root document\n      const operations: JSONPatchDocument = [{ op: 'replace', path: '', value: '' }]\n\n      const newSelection = createValueSelection([])\n\n      return { operations, newSelection }\n    }\n\n    const parentPath = initial(lastPath)\n    const parent = getIn(json, parentPath)\n\n    if (isJSONArray(parent)) {\n      const firstPath = first(paths)\n      const index = int(last(firstPath) as string)\n      const newSelection =\n        index === 0\n          ? createInsideSelection(parentPath)\n          : createAfterSelection(parentPath.concat(String(index - 1)))\n\n      return { operations, newSelection }\n    } else if (isJSONObject(parent)) {\n      // parent is object\n      const keys = Object.keys(parent)\n      const firstPath = first(paths)\n      const key = last(firstPath) as string\n      const index = keys.indexOf(key)\n      const previousKey = keys[index - 1]\n      const newSelection =\n        index === 0\n          ? createInsideSelection(parentPath)\n          : createAfterSelection(parentPath.concat(previousKey))\n\n      return { operations, newSelection }\n    } else {\n      throw new Error('Cannot create remove operations: parent must be an Object or Array')\n    }\n  }\n\n  // this should never happen\n  throw new Error('Cannot remove: unsupported type of selection ' + JSON.stringify(selection))\n}\n\nexport function revertJSONPatchWithMoveOperations(\n  json: unknown,\n  operations: JSONPatchDocument\n): JSONPatchDocument {\n  return revertJSONPatch(json, operations, {\n    before: (json, operation, revertOperations) => {\n      if (isJSONPatchRemove(operation)) {\n        const path = parseJSONPointer(operation.path)\n        return {\n          revertOperations: [...revertOperations, ...createRevertMoveOperations(json, path)]\n        }\n      }\n\n      if (isJSONPatchMove(operation)) {\n        const from = parseJSONPointer(operation.from)\n        return {\n          revertOperations: [...revertOperations, ...createRevertMoveOperations(json, from)]\n        }\n      }\n\n      return { document: json }\n    }\n  })\n}\n\nfunction createRevertMoveOperations(json: unknown, path: JSONPath): JSONPatchOperation[] {\n  const parentPath = initial(path)\n  const afterKey = last(path) as string\n  const parent = getIn(json, parentPath)\n  if (isJSONObject(parent)) {\n    const keys = Object.keys(parent)\n    const nextKeys = getNextKeys(keys, afterKey, false)\n\n    // move all lower down keys so the inserted key will maintain its position\n    return nextKeys.map((key) => moveDown(parentPath, key))\n  }\n\n  return []\n}\n\n/**\n * Add operations to create parent objects when missing before replacing a nested value\n */\nexport function createNestedValueOperations(operations: JSONPatchOperation[], json: unknown) {\n  return operations.flatMap((operation) => {\n    if (isJSONPatchReplace(operation)) {\n      const path = parseJSONPointer(operation.path)\n      if (path.length > 0) {\n        const extendedOperations: JSONPatchOperation[] = [operation]\n\n        let parentPath = initial(path)\n        while (parentPath.length > 0 && !existsIn(json, parentPath)) {\n          extendedOperations.unshift({\n            op: 'add',\n            path: compileJSONPointer(parentPath),\n            value: {}\n          })\n\n          parentPath = initial(parentPath)\n        }\n\n        return extendedOperations\n      }\n    }\n\n    return operation\n  })\n}\n","import type { JSONPatchDocument, JSONPatchOperation, JSONPath } from 'immutable-json-patch'\nimport { compileJSONPointer, getIn, isJSONArray, isJSONObject } from 'immutable-json-patch'\nimport { forEachRight, initial, isEqual, last } from 'lodash-es'\nimport { createRecursiveState, getEnforceString, updateInRecursiveState } from './documentState.js'\nimport { createSelectionFromOperations } from './selection.js'\nimport { rename } from './operations.js'\nimport { stringConvert } from '../utils/typeUtils.js'\nimport type {\n  DocumentState,\n  ExtendedSearchResultItem,\n  JSONParser,\n  JSONSelection,\n  SearchOptions,\n  SearchResultDetails,\n  SearchResultItem,\n  SearchResults,\n  RecursiveStateFactory\n} from '$lib/types'\nimport { SearchField } from '$lib/types.js'\nimport {\n  hasSearchResults,\n  isArrayRecursiveState,\n  isObjectRecursiveState\n} from 'svelte-jsoneditor/typeguards.js'\n\n// TODO: comment\n// TODO: unit test\nexport function updateSearchResult(\n  newResultItems: SearchResultItem[],\n  previousResult: SearchResultDetails | undefined\n): SearchResultDetails {\n  const activePath = previousResult?.activeItem\n    ? getSearchResultPath(previousResult.activeItem)\n    : undefined\n\n  const matchingActiveIndex = newResultItems.findIndex((item) => {\n    return isEqual(activePath, getSearchResultPath(item))\n  })\n\n  const activeIndex =\n    matchingActiveIndex !== -1\n      ? matchingActiveIndex\n      : previousResult?.activeIndex !== undefined &&\n          previousResult?.activeIndex < newResultItems.length\n        ? previousResult?.activeIndex\n        : newResultItems.length > 0\n          ? 0\n          : -1\n\n  const items: ExtendedSearchResultItem[] = newResultItems.map((item, index) => {\n    return { ...item, active: index === activeIndex }\n  })\n\n  const activeItem = items[activeIndex]\n\n  return {\n    items,\n    activeItem,\n    activeIndex\n  }\n}\n\n// TODO: unit test\nexport function searchNext(searchResult: SearchResultDetails): SearchResultDetails {\n  const nextActiveIndex =\n    searchResult.activeIndex < searchResult.items.length - 1\n      ? searchResult.activeIndex + 1\n      : searchResult.items.length > 0\n        ? 0\n        : -1\n\n  const nextActiveItem = searchResult.items[nextActiveIndex]\n\n  const items: ExtendedSearchResultItem[] = searchResult.items.map((item, index) => {\n    return { ...item, active: index === nextActiveIndex }\n  })\n\n  return {\n    ...searchResult,\n    items,\n    activeItem: nextActiveItem,\n    activeIndex: nextActiveIndex\n  }\n}\n\n// TODO: unit test\nexport function searchPrevious(searchResult: SearchResultDetails): SearchResultDetails {\n  const previousActiveIndex =\n    searchResult.activeIndex > 0 ? searchResult.activeIndex - 1 : searchResult.items.length - 1\n\n  const previousActiveItem = searchResult.items[previousActiveIndex]\n\n  const items: ExtendedSearchResultItem[] = searchResult.items.map((item, index) => {\n    return { ...item, active: index === previousActiveIndex }\n  })\n\n  return {\n    ...searchResult,\n    items,\n    activeItem: previousActiveItem,\n    activeIndex: previousActiveIndex\n  }\n}\n\n// TODO: comment\nexport function search(\n  searchText: string,\n  json: unknown,\n  options: SearchOptions = {}\n): SearchResultItem[] {\n  const searchTextLowerCase = searchText.toLowerCase()\n  const maxResults = options?.maxResults ?? Infinity\n  const columns = options?.columns\n  const results: SearchResultItem[] = []\n  const path: JSONPath = [] // we reuse the same Array recursively, this is *much* faster than creating a new path every time\n\n  function onMatch(match: SearchResultItem) {\n    if (results.length >= maxResults) {\n      return\n    }\n\n    results.push(match)\n  }\n\n  function searchRecursive(searchTextLowerCase: string, value: unknown) {\n    if (isJSONArray(value)) {\n      const level = path.length\n      path.push('0')\n\n      for (let i = 0; i < value.length; i++) {\n        path[level] = String(i)\n\n        searchRecursive(searchTextLowerCase, value[i])\n\n        if (results.length >= maxResults) {\n          return\n        }\n      }\n\n      path.pop()\n    } else if (isJSONObject(value)) {\n      const keys = Object.keys(value)\n      const level = path.length\n\n      path.push('')\n\n      for (const key of keys) {\n        path[level] = key\n\n        findCaseInsensitiveMatches(key, searchTextLowerCase, path, SearchField.key, onMatch)\n\n        searchRecursive(searchTextLowerCase, value[key])\n\n        if (results.length >= maxResults) {\n          return\n        }\n      }\n\n      path.pop()\n    } else {\n      // type is a value\n      findCaseInsensitiveMatches(\n        String(value),\n        searchTextLowerCase,\n        path,\n        SearchField.value,\n        onMatch\n      )\n    }\n  }\n\n  if (searchText === '') {\n    return []\n  } else if (columns) {\n    if (!Array.isArray(json)) {\n      throw new Error('json must be an Array when option columns is defined')\n    }\n\n    for (let i = 0; i < json.length; i++) {\n      path[0] = String(i)\n\n      const item = json[i]\n\n      for (let c = 0; c < columns.length; c++) {\n        const column = columns[c]\n\n        if (column.length === 1) {\n          path[1] = column[0]\n        } else {\n          for (let p = 0; p < column.length; p++) {\n            path[p + 1] = column[p]\n          }\n        }\n        while (path.length > column.length + 1) {\n          path.pop()\n        }\n\n        const value = getIn(item, column)\n\n        searchRecursive(searchTextLowerCase, value)\n      }\n\n      if (results.length >= maxResults) {\n        break\n      }\n    }\n\n    return results\n  } else {\n    searchRecursive(searchTextLowerCase, json)\n    return results\n  }\n}\n\n/**\n * Do a case-insensitive search for a search text in a text\n */\nexport function findCaseInsensitiveMatches(\n  text: string,\n  searchTextLowerCase: string,\n  path: JSONPath,\n  field: SearchField,\n  onMatch: (searchResultItem: SearchResultItem) => void\n): void {\n  const textLower = text.toLowerCase()\n\n  let fieldIndex = 0\n  let position = -1\n  let index = -1\n\n  do {\n    index = textLower.indexOf(searchTextLowerCase, position)\n\n    if (index !== -1) {\n      position = index + searchTextLowerCase.length\n\n      onMatch({\n        path: path.slice(0), // path may be mutated in a later stage, therefore we store a copy\n        field,\n        fieldIndex,\n        start: index,\n        end: position\n      })\n\n      fieldIndex++\n    }\n  } while (index !== -1)\n}\n\n/**\n * Replace a search result item with a replacement text\n */\nexport function replaceText(text: string, replacementText: string, start: number, end: number) {\n  return text.substring(0, start) + replacementText + text.substring(end)\n}\n\n/**\n * Replace all matches with a replacement text\n */\nexport function replaceAllText(\n  text: string,\n  replacementText: string,\n  occurrences: Array<{ start: number; end: number }>\n): string {\n  let updatedText = text\n\n  forEachRight(occurrences, (occurrence) => {\n    updatedText = replaceText(updatedText, replacementText, occurrence.start, occurrence.end)\n  })\n\n  return updatedText\n}\n\nexport function createSearchAndReplaceOperations(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  replacementText: string,\n  searchResultItem: SearchResultItem,\n  parser: JSONParser\n): { newSelection: JSONSelection | undefined; operations: JSONPatchDocument } {\n  const { field, path, start, end } = searchResultItem\n\n  if (field === SearchField.key) {\n    // replace a key\n    const parentPath = initial(path)\n    const parent = getIn(json, parentPath)\n    const oldKey = last(path) as string\n    const keys = Object.keys(parent as Record<string, unknown>)\n    const newKey = replaceText(oldKey, replacementText, start, end)\n\n    const operations = rename(parentPath, keys, oldKey, newKey)\n    const newSelection = createSelectionFromOperations(json, operations)\n\n    return {\n      newSelection,\n      operations\n    }\n  } else if (field === SearchField.value) {\n    // replace a value\n    const currentValue: unknown | undefined = getIn(json, path)\n    if (currentValue === undefined) {\n      throw new Error(`Cannot replace: path not found ${compileJSONPointer(path)}`)\n    }\n    const currentValueText = typeof currentValue === 'string' ? currentValue : String(currentValue)\n\n    const enforceString = getEnforceString(json, documentState, path)\n    const value = replaceText(currentValueText, replacementText, start, end)\n\n    const operations: JSONPatchOperation[] = [\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: enforceString ? value : stringConvert(value, parser)\n      }\n    ]\n\n    const newSelection = createSelectionFromOperations(json, operations)\n\n    return {\n      newSelection,\n      operations\n    }\n  } else {\n    throw new Error(`Cannot replace: unknown type of search result field ${field}`)\n  }\n}\n\nexport function createSearchAndReplaceAllOperations(\n  json: unknown,\n  documentState: DocumentState | undefined,\n  searchText: string,\n  replacementText: string,\n  parser: JSONParser\n): { newSelection: JSONSelection | undefined; operations: JSONPatchDocument } {\n  // TODO: to improve performance, we could reuse existing search results (except when hitting a maxResult limit)\n  const searchResultItems = search(searchText, json, { maxResults: Infinity })\n\n  interface Match {\n    path: JSONPath\n    field: string\n    items: SearchResultItem[]\n  }\n\n  // step 1: deduplicate matches inside the same field/value\n  // (filter, map, and group)\n  const deduplicatedMatches: Match[] = []\n  for (let i = 0; i < searchResultItems.length; i++) {\n    const previousItem = searchResultItems[i - 1]\n    const item = searchResultItems[i]\n    if (i === 0 || item.field !== previousItem.field || !isEqual(item.path, previousItem.path)) {\n      deduplicatedMatches.push({\n        path: item.path,\n        field: item.field,\n        items: [item]\n      })\n    } else {\n      ;(last(deduplicatedMatches) as Match).items.push(item)\n    }\n  }\n\n  // step 2: sort from deepest nested to least nested\n  // this is needed to replace in that order because paths may change\n  // if there are replacements in keys\n  deduplicatedMatches.sort((a, b) => {\n    // sort values first, properties next\n    if (a.field !== b.field) {\n      if (a.field === SearchField.key) {\n        return 1\n      } else {\n        return -1\n      }\n    }\n\n    // sort longest paths first, shortest last\n    return b.path.length - a.path.length\n  })\n\n  // step 3: call createSearchAndReplaceOperations for each of the matches\n  let allOperations: JSONPatchDocument = []\n  let lastNewSelection: JSONSelection | undefined\n  deduplicatedMatches.forEach((match) => {\n    // TODO: there is overlap with the logic of createSearchAndReplaceOperations. Can we extract and reuse this logic?\n    const { field, path, items } = match\n\n    if (field === SearchField.key) {\n      // replace a key\n      const parentPath = initial(path)\n      const parent = getIn(json, parentPath)\n      const oldKey = last(path) as string\n      const keys = Object.keys(parent as Record<string, unknown>)\n      const newKey = replaceAllText(oldKey, replacementText, items)\n\n      const operations = rename(parentPath, keys, oldKey, newKey)\n      allOperations = allOperations.concat(operations)\n\n      lastNewSelection = createSelectionFromOperations(json, operations)\n    } else if (field === SearchField.value) {\n      // replace a value\n      const currentValue: unknown | undefined = getIn(json, path)\n      if (currentValue === undefined) {\n        throw new Error(`Cannot replace: path not found ${compileJSONPointer(path)}`)\n      }\n      const currentValueText =\n        typeof currentValue === 'string' ? currentValue : String(currentValue)\n      const enforceString = getEnforceString(json, documentState, path)\n      const value = replaceAllText(currentValueText, replacementText, items)\n\n      const operations: JSONPatchOperation[] = [\n        {\n          op: 'replace',\n          path: compileJSONPointer(path),\n          value: enforceString ? value : stringConvert(value, parser)\n        }\n      ]\n      allOperations = allOperations.concat(operations)\n\n      lastNewSelection = createSelectionFromOperations(json, operations)\n    } else {\n      throw new Error(`Cannot replace: unknown type of search result field ${field}`)\n    }\n  })\n\n  return {\n    operations: allOperations,\n    newSelection: lastNewSelection\n  }\n}\n\nexport interface SplitValuePart {\n  text: string\n  type: 'normal' | 'highlight'\n  active: boolean\n}\n\n/**\n * Split the text into separate parts for each search result and the text\n * in between.\n */\nexport function splitValue(text: string, matches: ExtendedSearchResultItem[]): SplitValuePart[] {\n  const parts: SplitValuePart[] = []\n\n  let previousEnd = 0\n\n  for (const match of matches) {\n    const precedingText = text.slice(previousEnd, match.start)\n    if (precedingText !== '') {\n      parts.push({\n        type: 'normal',\n        text: precedingText,\n        active: false\n      })\n    }\n\n    const matchingText = text.slice(match.start, match.end)\n    parts.push({\n      type: 'highlight',\n      text: matchingText,\n      active: match.active\n    })\n\n    previousEnd = match.end\n  }\n\n  const lastMatch = last(matches)\n  if (lastMatch && lastMatch.end < text.length) {\n    parts.push({\n      type: 'normal',\n      text: text.slice(lastMatch.end),\n      active: false\n    })\n  }\n\n  return parts\n}\n\n/**\n * Get the path of the search result property on a nested search result\n */\nfunction getSearchResultPath(searchResultItem: SearchResultItem): JSONPath {\n  return searchResultItem.path.concat(searchResultItem.field, String(searchResultItem.fieldIndex))\n}\n\n/**\n * Filter key search results.\n * Returns a non-empty array, or undefined if there are no key search results\n */\nexport function filterKeySearchResults(\n  searchResult: SearchResults | undefined\n): ExtendedSearchResultItem[] | undefined {\n  const filtered = hasSearchResults(searchResult)\n    ? searchResult.searchResults.filter((result) => result.field === SearchField.key)\n    : undefined\n\n  return filtered && filtered.length > 0 ? filtered : undefined\n}\n\n/**\n * Filter value search results.\n * Returns a non-empty array, or undefined if there are no value search results\n */\nexport function filterValueSearchResults(\n  searchResult: SearchResults | undefined\n): ExtendedSearchResultItem[] | undefined {\n  const filtered = hasSearchResults(searchResult)\n    ? searchResult.searchResults.filter((result) => result.field === SearchField.value)\n    : undefined\n\n  return filtered && filtered.length > 0 ? filtered : undefined\n}\n\nexport const searchResultsFactory: RecursiveStateFactory = {\n  createObjectDocumentState: () => ({ type: 'object', properties: {} }),\n  createArrayDocumentState: () => ({ type: 'array', items: [] }),\n  createValueDocumentState: () => ({ type: 'value' })\n}\n\nexport function updateInSearchResults(\n  json: unknown,\n  searchResults: SearchResults | undefined,\n  path: JSONPath,\n  transform: (value: unknown, state: SearchResults) => SearchResults\n): SearchResults {\n  return updateInRecursiveState(json, searchResults, path, transform, searchResultsFactory)\n}\n\nexport function toRecursiveSearchResults(\n  json: unknown,\n  searchResultItems: ExtendedSearchResultItem[]\n): SearchResults | undefined {\n  return searchResultItems.reduce(\n    (recursiveState, searchResult) => {\n      return updateInSearchResults(json, recursiveState, searchResult.path, (_, nestedState) => ({\n        ...nestedState,\n        searchResults: nestedState.searchResults\n          ? nestedState.searchResults.concat(searchResult)\n          : [searchResult]\n      }))\n    },\n    undefined as SearchResults | undefined\n  )\n}\n\nexport function flattenSearchResults(node: SearchResults | undefined): ExtendedSearchResultItem[] {\n  const self = node?.searchResults ?? []\n\n  const nested = isObjectRecursiveState(node)\n    ? Object.values(node.properties).flatMap(flattenSearchResults)\n    : isArrayRecursiveState(node)\n      ? node.items.flatMap(flattenSearchResults)\n      : []\n\n  return self.concat(nested)\n}\n","<script lang=\"ts\">\n  import { splitValue } from '$lib/logic/search.js'\n  import { addNewLineSuffix } from '$lib/utils/domUtils.js'\n  import type { ExtendedSearchResultItem } from '$lib/types'\n\n  export let text: string\n  export let searchResultItems: ExtendedSearchResultItem[]\n\n  $: parts = splitValue(String(text), searchResultItems)\n</script>\n\n{#each parts as part}\n  {#if part.type === 'normal'}\n    {part.text}\n  {:else}\n    <span class=\"jse-highlight\" class:jse-active={part.active}>{addNewLineSuffix(part.text)}</span>\n  {/if}\n{/each}\n\n<style src=\"./SearchResultHighlighter.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { isUrl } from '$lib/utils/typeUtils.js'\n  import { createEditValueSelection } from '$lib/logic/selection.js'\n  import SearchResultHighlighter from '../../../components/modes/treemode/highlight/SearchResultHighlighter.svelte'\n  import { getValueClass } from './utils/getValueClass.js'\n  import { addNewLineSuffix } from '$lib/utils/domUtils.js'\n  import {\n    type ExtendedSearchResultItem,\n    type JSONParser,\n    Mode,\n    type OnJSONSelect,\n    type ValueNormalization\n  } from '$lib/types.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { isCtrlKeyDown } from 'svelte-jsoneditor/utils/keyBindings'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let mode: Mode\n  export let readOnly: boolean\n  export let normalization: ValueNormalization\n  export let parser: JSONParser\n  export let onSelect: OnJSONSelect\n\n  export let searchResultItems: ExtendedSearchResultItem[] | undefined\n\n  $: valueIsUrl = isUrl(value)\n\n  function handleValueClick(event: MouseEvent) {\n    if (typeof value === 'string' && valueIsUrl && isCtrlKeyDown(event)) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      window.open(value, '_blank')\n    }\n  }\n\n  function handleValueDoubleClick(event: MouseEvent) {\n    if (!readOnly) {\n      event.preventDefault()\n      onSelect(createEditValueSelection(path))\n    }\n  }\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<div\n  role=\"button\"\n  tabindex=\"-1\"\n  data-type=\"selectable-value\"\n  class={getValueClass(value, mode, parser)}\n  on:click={handleValueClick}\n  on:dblclick={handleValueDoubleClick}\n  title={valueIsUrl ? 'Ctrl+Click or Ctrl+Enter to open url in new window' : undefined}\n>\n  {#if searchResultItems}\n    <SearchResultHighlighter text={normalization.escapeValue(value)} {searchResultItems} />\n  {:else}\n    {addNewLineSuffix(normalization.escapeValue(value))}\n  {/if}\n</div>\n\n<style src=\"./ReadonlyValue.scss\"></style>\n","<script lang=\"ts\">\n  export let text: string\n</script>\n\n<div class=\"jse-tooltip\">\n  {text}\n</div>\n\n<style src=\"./Tooltip.scss\"></style>\n","import Tooltip from './Tooltip.svelte'\nimport type { SvelteComponent } from 'svelte'\nimport type { AbsolutePopupOptions } from '$lib/types'\n\nexport interface TooltipOptions {\n  text: string\n  openAbsolutePopup: (\n    component: typeof SvelteComponent<Record<string, unknown>>,\n    props: Record<string, unknown>,\n    options: AbsolutePopupOptions\n  ) => number\n  closeAbsolutePopup: (popupId: number | undefined) => void\n}\n\nexport function tooltip(\n  node: Element,\n  { text, openAbsolutePopup, closeAbsolutePopup }: TooltipOptions\n) {\n  let popupId: number | undefined\n\n  function handleMouseEnter() {\n    const props = {\n      text\n    }\n\n    // opening popup will fail if there is already a popup open\n    popupId = openAbsolutePopup(Tooltip, props, {\n      position: 'top',\n      width: 10 * text.length, // rough estimate of the width of the message\n      offsetTop: 3,\n      anchor: node,\n      closeOnOuterClick: true\n    })\n  }\n\n  function handleMouseLeave() {\n    closeAbsolutePopup(popupId)\n  }\n\n  node.addEventListener('mouseenter', handleMouseEnter)\n  node.addEventListener('mouseleave', handleMouseLeave)\n\n  return {\n    destroy() {\n      node.removeEventListener('mouseenter', handleMouseEnter)\n      node.removeEventListener('mouseleave', handleMouseLeave)\n    }\n  }\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faClock } from '@fortawesome/free-regular-svg-icons'\n  import { getContext } from 'svelte'\n  import { tooltip } from '$lib/components/controls/tooltip/tooltip.js'\n  import type { AbsolutePopupContext } from '$lib/types'\n\n  const absolutePopupContext = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let value: number\n\n  $: text = `Time: ${new Date(value).toString()}`\n</script>\n\n<div class=\"jse-timestamp\" use:tooltip={{ text, ...absolutePopupContext }}>\n  <Icon data={faClock} />\n</div>\n\n<style src=\"./TimestampTag.scss\"></style>\n","import { isBoolean, isColor, isTimestamp } from '$lib/utils/typeUtils.js'\nimport type { RenderValueComponentDescription, RenderValueProps } from '$lib/types'\nimport BooleanToggle from './components/BooleanToggle.svelte'\nimport ColorPicker from './components/ColorPicker.svelte'\nimport EditableValue from './components/EditableValue.svelte'\nimport ReadonlyValue from './components/ReadonlyValue.svelte'\nimport TimestampTag from './components/TimestampTag.svelte'\n\nexport function renderValue({\n  path,\n  value,\n  mode,\n  readOnly,\n  selection,\n  enforceString,\n  searchResultItems,\n  isEditing,\n  parser,\n  normalization,\n  onPatch,\n  onPasteJson,\n  onSelect,\n  onFind,\n  findNextInside,\n  focus\n}: RenderValueProps): RenderValueComponentDescription[] {\n  const renderers: RenderValueComponentDescription[] = []\n\n  if (!isEditing && isBoolean(value)) {\n    renderers.push({\n      component: BooleanToggle,\n      props: { path, value, readOnly, onPatch, focus }\n    })\n  }\n\n  if (!isEditing && isColor(value)) {\n    renderers.push({\n      component: ColorPicker,\n      props: { path, value, readOnly, onPatch, focus }\n    })\n  }\n\n  if (isEditing) {\n    renderers.push({\n      component: EditableValue,\n      props: {\n        path,\n        value,\n        selection,\n        mode,\n        enforceString,\n        parser,\n        normalization,\n        onPatch,\n        onPasteJson,\n        onSelect,\n        onFind,\n        findNextInside,\n        focus\n      }\n    })\n  }\n\n  if (!isEditing) {\n    renderers.push({\n      component: ReadonlyValue,\n      props: { path, value, mode, readOnly, parser, normalization, searchResultItems, onSelect }\n    })\n  }\n\n  if (!isEditing && isTimestamp(value)) {\n    renderers.push({\n      component: TimestampTag,\n      props: { value }\n    })\n  }\n\n  return renderers\n}\n","import { isEmpty } from 'lodash-es'\nimport type { JSONPath } from 'immutable-json-patch'\nimport type { PathOption } from '$lib/types.js'\n\n/**\n **\n * Stringify an array with a path like ['items', '3', 'name'] into string like 'items[3].name'\n * Note that we allow all characters in a property name, like \"item with spaces[3].name\",\n * so this path is not usable as-is in JavaScript.\n */\nexport function stringifyJSONPath(path: JSONPath): string {\n  return path\n    .map((p, index) => {\n      return integerNumberRegex.test(p)\n        ? '[' + p + ']'\n        : /[.[\\]]/.test(p) || p === '' // match any character . or [ or ] and handle an empty string\n          ? '[\"' + escapeQuotes(p) + '\"]'\n          : (index > 0 ? '.' : '') + p\n    })\n    .join('')\n}\n\nfunction escapeQuotes(prop: string): string {\n  return prop.replace(/\"/g, '\\\\\"')\n}\n\n/**\n * Parse a JSON path like 'items[3].name' into a path like ['items', '3', 'name']\n */\nexport function parseJSONPath(pathStr: string): JSONPath {\n  const path: JSONPath = []\n  let i = 0\n\n  while (i < pathStr.length) {\n    if (pathStr[i] === '.') {\n      i++\n    }\n\n    if (pathStr[i] === '[') {\n      i++\n\n      if (pathStr[i] === '\"') {\n        i++\n        path.push(parseProp((c) => c === '\"', true))\n        eatCharacter('\"')\n      } else {\n        path.push(parseProp((c) => c === ']'))\n      }\n\n      eatCharacter(']')\n    } else {\n      path.push(parseProp((c) => c === '.' || c === '['))\n    }\n  }\n\n  function parseProp(isEnd: (char: string) => boolean, unescape = false) {\n    let prop = ''\n\n    while (i < pathStr.length && !isEnd(pathStr[i])) {\n      if (unescape && pathStr[i] === '\\\\' && pathStr[i + 1] === '\"') {\n        // escaped double quote\n        prop += '\"'\n        i += 2\n      } else {\n        prop += pathStr[i]\n        i++\n      }\n    }\n\n    return prop\n  }\n\n  function eatCharacter(char: string) {\n    if (pathStr[i] !== char) {\n      throw new SyntaxError(`Invalid JSON path: ${char} expected at position ${i}`)\n    }\n    i++\n  }\n\n  return path\n}\n\n/**\n * Convert a JSONPath into an option for use in a select box\n */\nexport function pathToOption(path: JSONPath): PathOption {\n  return {\n    value: path,\n    label: isEmpty(path) ? '(item root)' : stringifyJSONPath(path)\n  }\n}\n\n/**\n * Stringify a JSON path into a lodash path like:\n *\n *     [\"data\", 2, \"nested property\", \"name\"]\n *\n * into a lodash path like:\n *\n *     \"data[2].nested.name\"\n *\n */\nexport function createLodashPropertySelector(path: JSONPath): string {\n  return path.length === 0\n    ? ''\n    : path.every((prop) => integerNumberRegex.test(prop) || javaScriptPropertyRegex.test(prop))\n      ? \"'\" + path.map(stringifyLodashProperty).join('').replace(/^\\./, '') + \"'\"\n      : JSON.stringify(path)\n}\n\n/**\n * Stringify a single property of a JSON path. See also createLodashPropertySelector\n */\nfunction stringifyLodashProperty(prop: string): string {\n  if (integerNumberRegex.test(prop)) {\n    return '[' + prop + ']'\n  } else if (javaScriptPropertyRegex.test(prop)) {\n    return '.' + prop\n  } else {\n    const propStr = JSON.stringify(prop)\n    // remove enclosing double quotes, and unescape escaped double quotes \\\"\n    const jsonPathStr = propStr.substring(1, propStr.length - 1).replace(/\\\\\"/g, '\"')\n    return \"['\" + jsonPathStr + \"']\"\n  }\n}\n\n/**\n * Create a JavaScript property selector\n *\n * Turn a paths like:\n *\n *   ['location', 'latitude']\n *   ['address', 'full name']\n *\n * into a JavaScript selector (string) like:\n *\n *   '?.location?.latitude'\n *   '?.address?.[\"full name\"]'\n */\nexport function createPropertySelector(path: JSONPath): string {\n  return path\n    .map((prop) => {\n      if (integerNumberRegex.test(prop)) {\n        // an index\n        return `?.[${prop}]`\n      } else if (javaScriptPropertyRegex.test(prop)) {\n        // a key without special characters\n        return `?.${prop}`\n      } else {\n        // a key that may have special characters (like spaces or so)\n        return `?.[${JSON.stringify(prop)}]`\n      }\n    })\n    .join('')\n}\n\n// https://developer.mozilla.org/en-US/docs/Glossary/Identifier\n// Note: We can extend this regex to allow unicode characters too.\n// I'm too lazy to figure that out right now\nconst javaScriptPropertyRegex = /^[a-zA-Z$_][a-zA-Z$_\\d]*$/\nconst integerNumberRegex = /^\\d+$/\n","import type { QueryLanguageOptions } from '$lib/types.js'\n\nexport interface TransformModalState {\n  queryLanguageId: string\n  queryOptions: QueryLanguageOptions\n  query: string\n  isManual: boolean\n}\n\nexport const transformModalStates: Record<string, TransformModalState> = {}\n\nexport interface TransformModalStateShared {\n  showWizard: boolean\n  showOriginal: boolean\n}\n\nexport const transformModalStateShared: TransformModalStateShared = {\n  showWizard: true,\n  showOriginal: true\n}\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","export default function filter({\n    loadOptions,\n    filterText,\n    items,\n    multiple,\n    value,\n    itemId,\n    groupBy,\n    filterSelectedItems,\n    itemFilter,\n    convertStringItemsToObjects,\n    filterGroupedItems,\n    label,\n}) {\n    if (items && loadOptions) return items;\n    if (!items) return [];\n\n    if (items && items.length > 0 && typeof items[0] !== 'object') {\n        items = convertStringItemsToObjects(items);\n    }\n\n    let filterResults = items.filter((item) => {\n        let matchesFilter = itemFilter(item[label], filterText, item);\n        if (matchesFilter && multiple && value?.length) {\n            matchesFilter = !value.some((x) => {\n                return filterSelectedItems ? x[itemId] === item[itemId] : false;\n            });\n        }\n\n        return matchesFilter;\n    });\n\n    if (groupBy) {\n        filterResults = filterGroupedItems(filterResults);\n    }\n\n    return filterResults;\n}\n","export default async function getItems({ dispatch, loadOptions, convertStringItemsToObjects, filterText }) {\n    let res = await loadOptions(filterText).catch((err) => {\n        console.warn('svelte-select loadOptions error :>> ', err);\n        dispatch('error', { type: 'loadOptions', details: err });\n    });\n\n    if (res && !res.cancelled) {        \n        if (res) {\n            if (res && res.length > 0 && typeof res[0] !== 'object') {\n                res = convertStringItemsToObjects(res);\n            }\n            \n            dispatch('loaded', { items: res });\n        } else {\n            res = [];\n        }\n\n        return {\n            filteredItems: res,\n            loading: false,\n            focused: true,\n            listOpen: true,\n        };\n    }\n}\n","<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    focusable=\"false\"\n    aria-hidden=\"true\">\n    <path\n    fill=\"currentColor\"\n        d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747\n          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0\n          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502\n          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0\n          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\n</svg>\n\n<style>\n  svg {\n      width: var(--chevron-icon-width, 20px);\n      height: var(--chevron-icon-width, 20px);\n      color: var(--chevron-icon-colour, currentColor);\n  }\n</style>","<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"-2 -2 50 50\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n>\n    <path\n        fill=\"currentColor\"\n        d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\"\n    />\n</svg>\n\n<style>\n    svg {\n        width: var(--clear-icon-width, 20px);\n        height: var(--clear-icon-width, 20px);\n        color: var(--clear-icon-color, currentColor);\n    }\n</style>","<svg class=\"loading\" viewBox=\"25 25 50 50\">\n    <circle\n        class=\"circle_path\"\n        cx=\"50\"\n        cy=\"50\"\n        r=\"20\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"5\"\n        stroke-miterlimit=\"10\" />\n</svg>\n\n<style>\n    .loading {\n        width: var(--spinner-width, 20px);\n        height: var(--spinner-height, 20px);\n        color: var(--spinner-color, var(--icons-color));\n        animation: rotate 0.75s linear infinite;\n        transform-origin: center center;\n        transform: none;\n    }\n\n    .circle_path {\n        stroke-dasharray: 90;\n        stroke-linecap: round;\n    }\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n</style>","<script>\n    import { beforeUpdate, createEventDispatcher, onDestroy, onMount } from 'svelte';\n    import { offset, flip, shift } from 'svelte-floating-ui/dom';\n    import { createFloatingActions } from 'svelte-floating-ui';\n\n    const dispatch = createEventDispatcher();\n\n    import _filter from './filter';\n    import _getItems from './get-items';\n\n    import ChevronIcon from './ChevronIcon.svelte';\n    import ClearIcon from './ClearIcon.svelte';\n    import LoadingIcon from './LoadingIcon.svelte';\n\n    export let justValue = null; // read-only\n\n    export let filter = _filter;\n    export let getItems = _getItems;\n\n    export let id = null;\n    export let name = null;\n    export let container = undefined;\n    export let input = undefined;\n    export let multiple = false;\n    export let multiFullItemClearable = false;\n    export let disabled = false;\n    export let focused = false;\n    export let value = null;\n    export let filterText = '';\n    export let placeholder = 'Please select';\n    export let placeholderAlwaysShow = false;\n    export let items = null;\n    export let label = 'label';\n    export let itemFilter = (label, filterText, option) => `${label}`.toLowerCase().includes(filterText.toLowerCase());\n    export let groupBy = undefined;\n    export let groupFilter = (groups) => groups;\n    export let groupHeaderSelectable = false;\n    export let itemId = 'value';\n    export let loadOptions = undefined;\n    export let containerStyles = '';\n    export let hasError = false;\n    export let filterSelectedItems = true;\n    export let required = false;\n    export let closeListOnChange = true;\n    export let clearFilterTextOnBlur = true;\n\n    export let createGroupHeaderItem = (groupValue, item) => {\n        return {\n            value: groupValue,\n            [label]: groupValue,\n        };\n    };\n\n    export const getFilteredItems = () => {\n        return filteredItems;\n    };\n\n    export let searchable = true;\n    export let inputStyles = '';\n    export let clearable = true;\n    export let loading = false;\n    export let listOpen = false;\n\n    let timeout;\n    export let debounce = (fn, wait = 1) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, wait);\n    };\n\n    export let debounceWait = 300;\n    export let hideEmptyState = false;\n    export let inputAttributes = {};\n    export let listAutoWidth = true;\n    export let showChevron = false;\n    export let listOffset = 5;\n    export let hoverItemIndex = 0;\n    export let floatingConfig = {};\n\n    export { containerClasses as class };\n\n    let containerClasses = '';\n    let activeValue;\n    let prev_value;\n    let prev_filterText;\n    let prev_multiple;\n\n    function setValue() {\n        if (typeof value === 'string') {\n            let item = (items || []).find((item) => item[itemId] === value);\n            value = item || {\n                [itemId]: value,\n                label: value,\n            };\n        } else if (multiple && Array.isArray(value) && value.length > 0) {\n            value = value.map((item) => (typeof item === 'string' ? { value: item, label: item } : item));\n        }\n    }\n\n    let _inputAttributes;\n    function assignInputAttributes() {\n        _inputAttributes = Object.assign(\n            {\n                autocapitalize: 'none',\n                autocomplete: 'off',\n                autocorrect: 'off',\n                spellcheck: false,\n                tabindex: 0,\n                type: 'text',\n                'aria-autocomplete': 'list',\n            },\n            inputAttributes\n        );\n\n        if (id) {\n            _inputAttributes['id'] = id;\n        }\n\n        if (!searchable) {\n            _inputAttributes['readonly'] = true;\n        }\n    }\n\n    function convertStringItemsToObjects(_items) {\n        return _items.map((item, index) => {\n            return {\n                index,\n                value: item,\n                label: `${item}`,\n            };\n        });\n    }\n\n    function filterGroupedItems(_items) {\n        const groupValues = [];\n        const groups = {};\n\n        _items.forEach((item) => {\n            const groupValue = groupBy(item);\n\n            if (!groupValues.includes(groupValue)) {\n                groupValues.push(groupValue);\n                groups[groupValue] = [];\n\n                if (groupValue) {\n                    groups[groupValue].push(\n                        Object.assign(createGroupHeaderItem(groupValue, item), {\n                            id: groupValue,\n                            groupHeader: true,\n                            selectable: groupHeaderSelectable,\n                        })\n                    );\n                }\n            }\n\n            groups[groupValue].push(Object.assign({ groupItem: !!groupValue }, item));\n        });\n\n        const sortedGroupedItems = [];\n\n        groupFilter(groupValues).forEach((groupValue) => {\n            if (groups[groupValue]) sortedGroupedItems.push(...groups[groupValue]);\n        });\n\n        return sortedGroupedItems;\n    }\n\n    function dispatchSelectedItem() {\n        if (multiple) {\n            if (JSON.stringify(value) !== JSON.stringify(prev_value)) {\n                if (checkValueForDuplicates()) {\n                    dispatch('input', value);\n                }\n            }\n            return;\n        }\n\n        if (!prev_value || JSON.stringify(value[itemId]) !== JSON.stringify(prev_value[itemId])) {\n            dispatch('input', value);\n        }\n    }\n\n    function setupMulti() {\n        if (value) {\n            if (Array.isArray(value)) {\n                value = [...value];\n            } else {\n                value = [value];\n            }\n        }\n    }\n\n    function setupSingle() {\n        if (value) value = null;\n    }\n\n    $: if ((items, value)) setValue();\n    $: if (inputAttributes || !searchable) assignInputAttributes();\n    $: if (multiple) setupMulti();\n    $: if (prev_multiple && !multiple) setupSingle();\n    $: if (multiple && value && value.length > 1) checkValueForDuplicates();\n    $: if (value) dispatchSelectedItem();\n    $: if (!value && multiple && prev_value) dispatch('input', value);\n    $: if (!focused && input) closeList();\n    $: if (filterText !== prev_filterText) setupFilterText();\n    $: if (!multiple && listOpen && value && filteredItems) setValueIndexAsHoverIndex();\n    $: dispatchHover(hoverItemIndex);\n\n    function setValueIndexAsHoverIndex() {\n        const valueIndex = filteredItems.findIndex((i) => {\n            return i[itemId] === value[itemId];\n        });\n\n        checkHoverSelectable(valueIndex, true);\n    }\n\n    function dispatchHover(i) {\n        dispatch('hoverItem', i);\n    }\n\n    function checkHoverSelectable(startingIndex = 0, ignoreGroup) {\n        hoverItemIndex = startingIndex < 0 ? 0 : startingIndex;\n        if (!ignoreGroup && groupBy && filteredItems[hoverItemIndex] && !filteredItems[hoverItemIndex].selectable) {\n            setHoverIndex(1);\n        }\n    }\n\n    function setupFilterText() {\n        if (!loadOptions && filterText.length === 0) return;\n\n        if (loadOptions) {\n            debounce(async function () {\n                loading = true;\n                let res = await getItems({\n                    dispatch,\n                    loadOptions,\n                    convertStringItemsToObjects,\n                    filterText,\n                });\n\n                if (res) {\n                    loading = res.loading;\n                    listOpen = listOpen ? res.listOpen : filterText.length > 0 ? true : false;\n                    focused = listOpen && res.focused;\n                    items = groupBy ? filterGroupedItems(res.filteredItems) : res.filteredItems;\n                } else {\n                    loading = false;\n                    focused = true;\n                    listOpen = true;\n                }\n            }, debounceWait);\n        } else {\n            listOpen = true;\n\n            if (multiple) {\n                activeValue = undefined;\n            }\n        }\n    }\n\n    $: hasValue = multiple ? value && value.length > 0 : value;\n    $: hideSelectedItem = hasValue && filterText.length > 0;\n    $: showClear = hasValue && clearable && !disabled && !loading;\n    $: placeholderText =\n        placeholderAlwaysShow && multiple\n            ? placeholder\n            : multiple && value?.length === 0\n            ? placeholder\n            : value\n            ? ''\n            : placeholder;\n    $: ariaSelection = value ? handleAriaSelection(multiple) : '';\n    $: ariaContext = handleAriaContent({ filteredItems, hoverItemIndex, focused, listOpen });\n    $: updateValueDisplay(items);\n    $: justValue = computeJustValue(multiple, value, itemId);\n    $: if (!multiple && prev_value && !value) dispatch('input', value);\n    $: filteredItems = filter({\n        loadOptions,\n        filterText,\n        items,\n        multiple,\n        value,\n        itemId,\n        groupBy,\n        label,\n        filterSelectedItems,\n        itemFilter,\n        convertStringItemsToObjects,\n        filterGroupedItems,\n    });\n    $: if (listOpen && filteredItems && !multiple && !value) checkHoverSelectable();\n    $: handleFilterEvent(filteredItems);\n    $: if (container && floatingConfig) floatingUpdate(Object.assign(_floatingConfig, floatingConfig));\n    $: listDom = !!list;\n    $: listMounted(list, listOpen);\n    $: if (listOpen && container && list) setListWidth();\n    $: scrollToHoverItem = hoverItemIndex;\n    $: if (listOpen && multiple) hoverItemIndex = 0;\n    $: if (input && listOpen && !focused) handleFocus();\n    $: if (filterText) hoverItemIndex = 0;\n\n    function handleFilterEvent(items) {\n        if (listOpen) dispatch('filter', items);\n    }\n\n    beforeUpdate(async () => {\n        prev_value = value;\n        prev_filterText = filterText;\n        prev_multiple = multiple;\n    });\n\n    function computeJustValue() {\n        if (multiple) return value ? value.map((item) => item[itemId]) : null;\n        return value ? value[itemId] : value;\n    }\n\n    function checkValueForDuplicates() {\n        let noDuplicates = true;\n        if (value) {\n            const ids = [];\n            const uniqueValues = [];\n\n            value.forEach((val) => {\n                if (!ids.includes(val[itemId])) {\n                    ids.push(val[itemId]);\n                    uniqueValues.push(val);\n                } else {\n                    noDuplicates = false;\n                }\n            });\n\n            if (!noDuplicates) value = uniqueValues;\n        }\n        return noDuplicates;\n    }\n\n    function findItem(selection) {\n        let matchTo = selection ? selection[itemId] : value[itemId];\n        return items.find((item) => item[itemId] === matchTo);\n    }\n\n    function updateValueDisplay(items) {\n        if (!items || items.length === 0 || items.some((item) => typeof item !== 'object')) return;\n        if (!value || (multiple ? value.some((selection) => !selection || !selection[itemId]) : !value[itemId])) return;\n\n        if (Array.isArray(value)) {\n            value = value.map((selection) => findItem(selection) || selection);\n        } else {\n            value = findItem() || value;\n        }\n    }\n\n    async function handleMultiItemClear(i) {\n        const itemToRemove = value[i];\n\n        if (value.length === 1) {\n            value = undefined;\n        } else {\n            value = value.filter((item) => {\n                return item !== itemToRemove;\n            });\n        }\n\n        dispatch('clear', itemToRemove);\n    }\n\n    function handleKeyDown(e) {\n        if (!focused) return;\n        e.stopPropagation();\n        switch (e.key) {\n            case 'Escape':\n                e.preventDefault();\n                closeList();\n                break;\n            case 'Enter':\n                e.preventDefault();\n\n                if (listOpen) {\n                    if (filteredItems.length === 0) break;\n                    const hoverItem = filteredItems[hoverItemIndex];\n\n                    if (value && !multiple && value[itemId] === hoverItem[itemId]) {\n                        closeList();\n                        break;\n                    } else {\n                        handleSelect(filteredItems[hoverItemIndex]);\n                    }\n                }\n\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(-1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'Tab':\n                if (listOpen && focused) {\n                    if (\n                        filteredItems.length === 0 ||\n                        (value && value[itemId] === filteredItems[hoverItemIndex][itemId])\n                    )\n                        return closeList();\n\n                    e.preventDefault();\n                    handleSelect(filteredItems[hoverItemIndex]);\n                    closeList();\n                }\n\n                break;\n            case 'Backspace':\n                if (!multiple || filterText.length > 0) return;\n\n                if (multiple && value && value.length > 0) {\n                    handleMultiItemClear(activeValue !== undefined ? activeValue : value.length - 1);\n                    if (activeValue === 0 || activeValue === undefined) break;\n                    activeValue = value.length > activeValue ? activeValue - 1 : undefined;\n                }\n\n                break;\n            case 'ArrowLeft':\n                if (!value || !multiple || filterText.length > 0) return;\n                if (activeValue === undefined) {\n                    activeValue = value.length - 1;\n                } else if (value.length > activeValue && activeValue !== 0) {\n                    activeValue -= 1;\n                }\n                break;\n            case 'ArrowRight':\n                if (!value || !multiple || filterText.length > 0 || activeValue === undefined) return;\n                if (activeValue === value.length - 1) {\n                    activeValue = undefined;\n                } else if (activeValue < value.length - 1) {\n                    activeValue += 1;\n                }\n                break;\n        }\n    }\n\n    function handleFocus(e) {\n        if (focused && input === document?.activeElement) return;\n        if (e) dispatch('focus', e);\n        input?.focus();\n        focused = true;\n    }\n\n    async function handleBlur(e) {\n        if (isScrolling) return;\n        if (listOpen || focused) {\n            dispatch('blur', e);\n            closeList();\n            focused = false;\n            activeValue = undefined;\n            input?.blur();\n        }\n    }\n\n    function handleClick() {\n        if (disabled) return;\n        if (filterText.length > 0) return listOpen = true;\n        listOpen = !listOpen;\n    }\n\n    export function handleClear() {\n        dispatch('clear', value);\n        value = undefined;\n        closeList();\n        handleFocus();\n    }\n\n    onMount(() => {\n        if (listOpen) focused = true;\n        if (focused && input) input.focus();\n    });\n\n    function itemSelected(selection) {\n        if (selection) {\n            filterText = '';\n            const item = Object.assign({}, selection);\n\n            if (item.groupHeader && !item.selectable) return;\n            value = multiple ? (value ? value.concat([item]) : [item]) : (value = item);\n\n            setTimeout(() => {\n                if (closeListOnChange) closeList();\n                activeValue = undefined;\n                dispatch('change', value);\n                dispatch('select', selection);\n            });\n        }\n    }\n\n    function closeList() {\n        if (clearFilterTextOnBlur) {\n            filterText = '';\n        }\n        listOpen = false;\n    }\n\n    export let ariaValues = (values) => {\n        return `Option ${values}, selected.`;\n    };\n\n    export let ariaListOpen = (label, count) => {\n        return `You are currently focused on option ${label}. There are ${count} results available.`;\n    };\n\n    export let ariaFocused = () => {\n        return `Select is focused, type to refine list, press down to open the menu.`;\n    };\n\n    function handleAriaSelection(_multiple) {\n        let selected = undefined;\n\n        if (_multiple && value.length > 0) {\n            selected = value.map((v) => v[label]).join(', ');\n        } else {\n            selected = value[label];\n        }\n\n        return ariaValues(selected);\n    }\n\n    function handleAriaContent() {\n        if (!filteredItems || filteredItems.length === 0) return '';\n        let _item = filteredItems[hoverItemIndex];\n        if (listOpen && _item) {\n            let count = filteredItems ? filteredItems.length : 0;\n            return ariaListOpen(_item[label], count);\n        } else {\n            return ariaFocused();\n        }\n    }\n\n    let list = null;\n\n    let isScrollingTimer;\n    function handleListScroll() {\n        clearTimeout(isScrollingTimer);\n        isScrollingTimer = setTimeout(() => {\n            isScrolling = false;\n        }, 100);\n    }\n\n    function handleClickOutside(event) {\n        if (!listOpen && !focused && container && !container.contains(event.target) && !list?.contains(event.target)) {\n            handleBlur();\n        }\n    }\n\n    onDestroy(() => {\n        list?.remove();\n    });\n\n    let isScrolling = false;\n\n    function handleSelect(item) {\n        if (!item || item.selectable === false) return;\n        itemSelected(item);\n    }\n\n    function handleHover(i) {\n        if (isScrolling) return;\n        hoverItemIndex = i;\n    }\n\n    function handleItemClick(args) {\n        const { item, i } = args;\n        if (item?.selectable === false) return;\n        if (value && !multiple && value[itemId] === item[itemId]) return closeList();\n        if (isItemSelectable(item)) {\n            hoverItemIndex = i;\n            handleSelect(item);\n        }\n    }\n\n    function setHoverIndex(increment) {\n        let selectableFilteredItems = filteredItems.filter(\n            (item) => !Object.hasOwn(item, 'selectable') || item.selectable === true\n        );\n\n        if (selectableFilteredItems.length === 0) {\n            return (hoverItemIndex = 0);\n        }\n\n        if (increment > 0 && hoverItemIndex === filteredItems.length - 1) {\n            hoverItemIndex = 0;\n        } else if (increment < 0 && hoverItemIndex === 0) {\n            hoverItemIndex = filteredItems.length - 1;\n        } else {\n            hoverItemIndex = hoverItemIndex + increment;\n        }\n\n        const hover = filteredItems[hoverItemIndex];\n\n        if (hover && hover.selectable === false) {\n            if (increment === 1 || increment === -1) setHoverIndex(increment);\n            return;\n        }\n    }\n\n    function isItemActive(item, value, itemId) {\n        if (multiple) return;\n        return value && value[itemId] === item[itemId];\n    }\n\n    function isItemFirst(itemIndex) {\n        return itemIndex === 0;\n    }\n\n    function isItemSelectable(item) {\n        return (item.groupHeader && item.selectable) || item.selectable || !item.hasOwnProperty('selectable');\n    }\n\n    const activeScroll = scrollAction;\n    const hoverScroll = scrollAction;\n\n    function scrollAction(node) {\n        return {\n            update(args) {\n                if (args.scroll) {\n                    handleListScroll();\n                    node.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n                }\n            },\n        };\n    }\n\n    function setListWidth() {\n        const { width } = container.getBoundingClientRect();\n        list.style.width = listAutoWidth ? width + 'px' : 'auto';\n    }\n\n    let _floatingConfig = {\n        strategy: 'absolute',\n        placement: 'bottom-start',\n        middleware: [offset(listOffset), flip(), shift()],\n        autoUpdate: false,\n    };\n\n    const [floatingRef, floatingContent, floatingUpdate] = createFloatingActions(_floatingConfig);\n\n    $: if (container && floatingConfig?.autoUpdate === undefined) {\n        _floatingConfig.autoUpdate = true;\n    }\n\n    let prefloat = true;\n    function listMounted(list, listOpen) {\n        if (!list || !listOpen) return (prefloat = true);\n        setTimeout(() => {\n            prefloat = false;\n        }, 0);\n    }\n</script>\n\n<svelte:window on:click={handleClickOutside} on:keydown={handleKeyDown} />\n\n<div\n    class=\"svelte-select {containerClasses}\"\n    class:multi={multiple}\n    class:disabled\n    class:focused\n    class:list-open={listOpen}\n    class:show-chevron={showChevron}\n    class:error={hasError}\n    style={containerStyles}\n    on:pointerup|preventDefault={handleClick}\n    bind:this={container}\n    use:floatingRef\n    role=\"none\">\n    {#if listOpen}\n        <div\n            use:floatingContent\n            bind:this={list}\n            class=\"svelte-select-list\"\n            class:prefloat\n            on:scroll={handleListScroll}\n            on:pointerup|preventDefault|stopPropagation\n            on:mousedown|preventDefault|stopPropagation\n\t\t\trole=\"none\">\n            {#if $$slots['list-prepend']}<slot name=\"list-prepend\" />{/if}\n            {#if $$slots.list}<slot name=\"list\" {filteredItems} />\n            {:else if filteredItems.length > 0}\n                {#each filteredItems as item, i}\n                    <div\n                        on:mouseover={() => handleHover(i)}\n                        on:focus={() => handleHover(i)}\n                        on:click|stopPropagation={() => handleItemClick({ item, i })}\n                        on:keydown|preventDefault|stopPropagation\n                        class=\"list-item\"\n                        tabindex=\"-1\"\n                        role=\"none\">\n                        <div\n                            use:activeScroll={{ scroll: isItemActive(item, value, itemId), listDom }}\n                            use:hoverScroll={{ scroll: scrollToHoverItem === i, listDom }}\n                            class=\"item\"\n                            class:list-group-title={item.groupHeader}\n                            class:active={isItemActive(item, value, itemId)}\n                            class:first={isItemFirst(i)}\n                            class:hover={hoverItemIndex === i}\n                            class:group-item={item.groupItem}\n                            class:not-selectable={item?.selectable === false}>\n                            <slot name=\"item\" {item} index={i}>\n                                {item?.[label]}\n                            </slot>\n                        </div>\n                    </div>\n                {/each}\n            {:else if !hideEmptyState}\n                <slot name=\"empty\">\n                    <div class=\"empty\">No options</div>\n                </slot>\n            {/if}\n            {#if $$slots['list-append']}<slot name=\"list-append\" />{/if}\n        </div>\n    {/if}\n\n    <span aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"additions text\" class=\"a11y-text\">\n        {#if focused}\n            <span id=\"aria-selection\">{ariaSelection}</span>\n            <span id=\"aria-context\">\n                {ariaContext}\n            </span>\n        {/if}\n    </span>\n\n    <div class=\"prepend\">\n        <slot name=\"prepend\" />\n    </div>\n\n    <div class=\"value-container\">\n        {#if hasValue}\n            {#if multiple}\n                {#each value as item, i}\n                    <div\n                        class=\"multi-item\"\n                        class:active={activeValue === i}\n                        class:disabled\n                        on:click|preventDefault={() => (multiFullItemClearable ? handleMultiItemClear(i) : {})}\n                        on:keydown|preventDefault|stopPropagation\n                        role=\"none\">\n                        <span class=\"multi-item-text\">\n                            <slot name=\"selection\" selection={item} index={i}>\n                                {item[label]}\n                            </slot>\n                        </span>\n\n                        {#if !disabled && !multiFullItemClearable && ClearIcon}\n                            <div\n                                class=\"multi-item-clear\"\n                                on:pointerup|preventDefault|stopPropagation={() => handleMultiItemClear(i)}>\n                                <slot name=\"multi-clear-icon\">\n                                    <ClearIcon />\n                                </slot>\n                            </div>\n                        {/if}\n                    </div>\n                {/each}\n            {:else}\n                <div class=\"selected-item\" class:hide-selected-item={hideSelectedItem}>\n                    <slot name=\"selection\" selection={value}>\n                        {value[label]}\n                    </slot>\n                </div>\n            {/if}\n        {/if}\n\n        <input\n            on:keydown={handleKeyDown}\n            on:blur={handleBlur}\n            on:focus={handleFocus}\n            readOnly={!searchable}\n            {..._inputAttributes}\n            bind:this={input}\n            bind:value={filterText}\n            placeholder={placeholderText}\n            style={inputStyles}\n            {disabled} />\n    </div>\n\n    <div class=\"indicators\">\n        {#if loading}\n            <div class=\"icon loading\" aria-hidden=\"true\">\n                <slot name=\"loading-icon\">\n                    <LoadingIcon />\n                </slot>\n            </div>\n        {/if}\n\n        {#if showClear}\n            <button type=\"button\" class=\"icon clear-select\" on:click={handleClear}>\n                <slot name=\"clear-icon\">\n                    <ClearIcon />\n                </slot>\n            </button>\n        {/if}\n\n        {#if showChevron}\n            <div class=\"icon chevron\" aria-hidden=\"true\">\n                <slot name=\"chevron-icon\" {listOpen}>\n                    <ChevronIcon />\n                </slot>\n            </div>\n        {/if}\n    </div>\n\n    <slot name=\"input-hidden\" {value}>\n        <input {name} type=\"hidden\" value={value ? JSON.stringify(value) : null} />\n    </slot>\n\n    {#if required && (!value || value.length === 0)}\n        <slot name=\"required\" {value}>\n            <select class=\"required\" required tabindex=\"-1\" aria-hidden=\"true\" />\n        </slot>\n    {/if}\n</div>\n\n<style>\n    .svelte-select {\n        /* deprecating camelCase custom props in favour of kebab-case for v5 */\n        --borderRadius: var(--border-radius);\n        --clearSelectColor: var(--clear-select-color);\n        --clearSelectWidth: var(--clear-select-width);\n        --disabledBackground: var(--disabled-background);\n        --disabledBorderColor: var(--disabled-border-color);\n        --disabledColor: var(--disabled-color);\n        --disabledPlaceholderColor: var(--disabled-placeholder-color);\n        --disabledPlaceholderOpacity: var(--disabled-placeholder-opacity);\n        --errorBackground: var(--error-background);\n        --errorBorder: var(--error-border);\n        --groupItemPaddingLeft: var(--group-item-padding-left);\n        --groupTitleColor: var(--group-title-color);\n        --groupTitleFontSize: var(--group-title-font-size);\n        --groupTitleFontWeight: var(--group-title-font-weight);\n        --groupTitlePadding: var(--group-title-padding);\n        --groupTitleTextTransform: var(--group-title-text-transform);\n        --groupTitleBorderColor: var(--group-title-border-color);\n        --groupTitleBorderWidth: var(--group-title-border-width);\n        --groupTitleBorderStyle: var(--group-title-border-style);\n        --indicatorColor: var(--chevron-color);\n        --indicatorHeight: var(--chevron-height);\n        --indicatorWidth: var(--chevron-width);\n        --inputColor: var(--input-color);\n        --inputLeft: var(--input-left);\n        --inputLetterSpacing: var(--input-letter-spacing);\n        --inputMargin: var(--input-margin);\n        --inputPadding: var(--input-padding);\n        --itemActiveBackground: var(--item-active-background);\n        --itemColor: var(--item-color);\n        --itemFirstBorderRadius: var(--item-first-border-radius);\n        --itemHoverBG: var(--item-hover-bg);\n        --itemHoverColor: var(--item-hover-color);\n        --itemIsActiveBG: var(--item-is-active-bg);\n        --itemIsActiveColor: var(--item-is-active-color);\n        --itemIsNotSelectableColor: var(--item-is-not-selectable-color);\n        --itemPadding: var(--item-padding);\n        --listBackground: var(--list-background);\n        --listBorder: var(--list-border);\n        --listBorderRadius: var(--list-border-radius);\n        --listEmptyColor: var(--list-empty-color);\n        --listEmptyPadding: var(--list-empty-padding);\n        --listEmptyTextAlign: var(--list-empty-text-align);\n        --listMaxHeight: var(--list-max-height);\n        --listPosition: var(--list-position);\n        --listShadow: var(--list-shadow);\n        --listZIndex: var(--list-z-index);\n        --multiItemBG: var(--multi-item-bg);\n        --multiItemBorderRadius: var(--multi-item-border-radius);\n        --multiItemDisabledHoverBg: var(--multi-item-disabled-hover-bg);\n        --multiItemDisabledHoverColor: var(--multi-item-disabled-hover-color);\n        --multiItemHeight: var(--multi-item-height);\n        --multiItemMargin: var(--multi-item-margin);\n        --multiItemPadding: var(--multi-item-padding);\n        --multiSelectInputMargin: var(--multi-select-input-margin);\n        --multiSelectInputPadding: var(--multi-select-input-padding);\n        --multiSelectPadding: var(--multi-select-padding);\n        --placeholderColor: var(--placeholder-color);\n        --placeholderOpacity: var(--placeholder-opacity);\n        --selectedItemPadding: var(--selected-item-padding);\n        --spinnerColor: var(--spinner-color);\n        --spinnerHeight: var(--spinner-height);\n        --spinnerWidth: var(--spinner-width);\n\n        --internal-padding: 0 0 0 16px;\n\n        border: var(--border, 1px solid #d8dbdf);\n        border-radius: var(--border-radius, 6px);\n        min-height: var(--height, 42px);\n        position: relative;\n        display: flex;\n        align-items: stretch;\n        padding: var(--padding, var(--internal-padding));\n        background: var(--background, #fff);\n        margin: var(--margin, 0);\n        width: var(--width, 100%);\n        font-size: var(--font-size, 16px);\n        max-height: var(--max-height);\n    }\n\n    * {\n        box-sizing: var(--box-sizing, border-box);\n    }\n\n    .svelte-select:hover {\n        border: var(--border-hover, 1px solid #b2b8bf);\n    }\n\n    .value-container {\n        display: flex;\n        flex: 1 1 0%;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: 5px 10px;\n        padding: var(--value-container-padding, 5px 0);\n        position: relative;\n        overflow: var(--value-container-overflow, hidden);\n        align-self: stretch;\n    }\n\n    .prepend,\n    .indicators {\n        display: flex;\n        flex-shrink: 0;\n        align-items: center;\n    }\n\n    .indicators {\n        position: var(--indicators-position);\n        top: var(--indicators-top);\n        right: var(--indicators-right);\n        bottom: var(--indicators-bottom);\n    }\n\n    input {\n        position: absolute;\n        cursor: default;\n        border: none;\n        color: var(--input-color, var(--item-color));\n        padding: var(--input-padding, 0);\n        letter-spacing: var(--input-letter-spacing, inherit);\n        margin: var(--input-margin, 0);\n        min-width: 10px;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background: transparent;\n        font-size: var(--font-size, 16px);\n    }\n\n    :not(.multi) > .value-container > input {\n        width: 100%;\n        height: 100%;\n    }\n\n    input::placeholder {\n        color: var(--placeholder-color, #78848f);\n        opacity: var(--placeholder-opacity, 1);\n    }\n\n    input:focus {\n        outline: none;\n    }\n\n    .svelte-select.focused {\n        border: var(--border-focused, 1px solid #006fe8);\n        border-radius: var(--border-radius-focused, var(--border-radius, 6px));\n    }\n\n    .disabled {\n        background: var(--disabled-background, #ebedef);\n        border-color: var(--disabled-border-color, #ebedef);\n        color: var(--disabled-color, #c1c6cc);\n    }\n\n    .disabled input::placeholder {\n        color: var(--disabled-placeholder-color, #c1c6cc);\n        opacity: var(--disabled-placeholder-opacity, 1);\n    }\n\n    .selected-item {\n        position: relative;\n        overflow: var(--selected-item-overflow, hidden);\n        padding: var(--selected-item-padding, 0 20px 0 0);\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        color: var(--selected-item-color, inherit);\n        font-size: var(--font-size, 16px);\n    }\n\n    .multi .selected-item {\n        position: absolute;\n        line-height: var(--height, 42px);\n        height: var(--height, 42px);\n    }\n\n    .selected-item:focus {\n        outline: none;\n    }\n\n    .hide-selected-item {\n        opacity: 0;\n    }\n\n    .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .clear-select {\n        all: unset;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--clear-select-width, 40px);\n        height: var(--clear-select-height, 100%);\n        color: var(--clear-select-color, var(--icons-color));\n        margin: var(--clear-select-margin, 0);\n        pointer-events: all;\n        flex-shrink: 0;\n    }\n\n    .clear-select:focus {\n        outline: var(--clear-select-focus-outline, 1px solid #006fe8);\n    }\n\n    .loading {\n        width: var(--loading-width, 40px);\n        height: var(--loading-height);\n        color: var(--loading-color, var(--icons-color));\n        margin: var(--loading--margin, 0);\n        flex-shrink: 0;\n    }\n\n    .chevron {\n        width: var(--chevron-width, 40px);\n        height: var(--chevron-height, 40px);\n        background: var(--chevron-background, transparent);\n        pointer-events: var(--chevron-pointer-events, none);\n        color: var(--chevron-color, var(--icons-color));\n        border: var(--chevron-border, 0 0 0 1px solid #d8dbdf);\n        flex-shrink: 0;\n    }\n\n    .multi {\n        padding: var(--multi-select-padding, var(--internal-padding));\n    }\n\n    .multi input {\n        padding: var(--multi-select-input-padding, 0);\n        position: relative;\n        margin: var(--multi-select-input-margin, 5px 0);\n        flex: 1 1 40px;\n    }\n\n    .svelte-select.error {\n        border: var(--error-border, 1px solid #ff2d55);\n        background: var(--error-background, #fff);\n    }\n\n    .a11y-text {\n        z-index: 9999;\n        border: 0px;\n        clip: rect(1px, 1px, 1px, 1px);\n        height: 1px;\n        width: 1px;\n        position: absolute;\n        overflow: hidden;\n        padding: 0px;\n        white-space: nowrap;\n    }\n\n    .multi-item {\n        background: var(--multi-item-bg, #ebedef);\n        margin: var(--multi-item-margin, 0);\n        outline: var(--multi-item-outline, 1px solid #ddd);\n        border-radius: var(--multi-item-border-radius, 4px);\n        height: var(--multi-item-height, 25px);\n        line-height: var(--multi-item-height, 25px);\n        display: flex;\n        cursor: default;\n        padding: var(--multi-item-padding, 0 5px);\n        overflow: hidden;\n        gap: var(--multi-item-gap, 4px);\n        outline-offset: -1px;\n        max-width: var(--multi-max-width, none);\n        color: var(--multi-item-color, var(--item-color));\n    }\n\n    .multi-item.disabled:hover {\n        background: var(--multi-item-disabled-hover-bg, #ebedef);\n        color: var(--multi-item-disabled-hover-color, #c1c6cc);\n    }\n\n    .multi-item-text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .multi-item-clear {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        --clear-icon-color: var(--multi-item-clear-icon-color, #000);\n    }\n\n    .multi-item.active {\n        outline: var(--multi-item-active-outline, 1px solid #006fe8);\n    }\n\n    .svelte-select-list {\n        box-shadow: var(--list-shadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));\n        border-radius: var(--list-border-radius, 4px);\n        max-height: var(--list-max-height, 252px);\n        overflow-y: auto;\n        background: var(--list-background, #fff);\n        position: var(--list-position, absolute);\n        z-index: var(--list-z-index, 2);\n        border: var(--list-border);\n    }\n\n    .prefloat {\n        opacity: 0;\n        pointer-events: none;\n    }\n\n    .list-group-title {\n        color: var(--group-title-color, #8f8f8f);\n        cursor: default;\n        font-size: var(--group-title-font-size, 16px);\n        font-weight: var(--group-title-font-weight, 600);\n        height: var(--height, 42px);\n        line-height: var(--height, 42px);\n        padding: var(--group-title-padding, 0 20px);\n        text-overflow: ellipsis;\n        overflow-x: hidden;\n        white-space: nowrap;\n        text-transform: var(--group-title-text-transform, uppercase);\n        border-width: var(--group-title-border-width, medium);\n        border-style: var(--group-title-border-style, none);\n        border-color: var(--group-title-border-color, color);\n    }\n\n    .empty {\n        text-align: var(--list-empty-text-align, center);\n        padding: var(--list-empty-padding, 20px 0);\n        color: var(--list-empty-color, #78848f);\n    }\n\n    .item {\n        cursor: default;\n        height: var(--item-height, var(--height, 42px));\n        line-height: var(--item-line-height, var(--height, 42px));\n        padding: var(--item-padding, 0 20px);\n        color: var(--item-color, inherit);\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: var(--item-transition, all 0.2s);\n        align-items: center;\n        width: 100%;\n    }\n\n    .item.group-item {\n        padding-left: var(--group-item-padding-left, 40px);\n    }\n\n    .item:active {\n        background: var(--item-active-background, #b9daff);\n    }\n\n    .item.active {\n        background: var(--item-is-active-bg, #007aff);\n        color: var(--item-is-active-color, #fff);\n    }\n\n    .item.first {\n        border-radius: var(--item-first-border-radius, 4px 4px 0 0);\n    }\n\n    .item.hover:not(.active) {\n        background: var(--item-hover-bg, #e7f2ff);\n        color: var(--item-hover-color, inherit);\n    }\n\n    .item.not-selectable,\n    .item.hover.item.not-selectable,\n    .item.active.item.not-selectable,\n    .item.not-selectable:active {\n        color: var(--item-is-not-selectable-color, #999);\n        background: transparent;\n    }\n\n    .required {\n        opacity: 0;\n        z-index: -1;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n    }\n</style>\n","//@ts-ignore\nimport { arrow as arrowCore } from \"./core\";\nimport { autoUpdate as _autoUpdate, computePosition } from \"./dom/index.js\";\nimport { get } from \"svelte/store\";\nimport { onDestroy, tick } from 'svelte';\nexport function createFloatingActions(initOptions) {\n    let referenceElement;\n    let floatingElement;\n    const defaultOptions = {\n        autoUpdate: true\n    };\n    let options = initOptions;\n    const getOptions = (mixin) => {\n        return { ...defaultOptions, ...(initOptions || {}), ...(mixin || {}) };\n    };\n    const updatePosition = (updateOptions) => {\n        if (referenceElement && floatingElement) {\n            options = getOptions(updateOptions);\n            computePosition(referenceElement, floatingElement, options)\n                .then(v => {\n                Object.assign(floatingElement.style, {\n                    position: v.strategy,\n                    left: `${v.x}px`,\n                    top: `${v.y}px`,\n                });\n                options?.onComputed && options.onComputed(v);\n            });\n        }\n    };\n    const referenceAction = node => {\n        if ('subscribe' in node) {\n            setupVirtualElementObserver(node);\n            return {};\n        }\n        else {\n            referenceElement = node;\n            updatePosition();\n        }\n    };\n    const contentAction = (node, contentOptions) => {\n        let autoUpdateDestroy;\n        floatingElement = node;\n        options = getOptions(contentOptions);\n        setTimeout(() => updatePosition(contentOptions), 0); //tick doesn't work\n        updatePosition(contentOptions);\n        const destroyAutoUpdate = () => {\n            if (autoUpdateDestroy) {\n                autoUpdateDestroy();\n                autoUpdateDestroy = undefined;\n            }\n        };\n        const initAutoUpdate = ({ autoUpdate } = options || {}) => {\n            destroyAutoUpdate();\n            if (autoUpdate !== false) {\n                tick().then(() => {\n                    return _autoUpdate(referenceElement, floatingElement, () => updatePosition(options), (autoUpdate === true ? {} : autoUpdate));\n                });\n            }\n            return;\n        };\n        autoUpdateDestroy = initAutoUpdate();\n        return {\n            update(contentOptions) {\n                updatePosition(contentOptions);\n                autoUpdateDestroy = initAutoUpdate(contentOptions);\n            },\n            destroy() {\n                destroyAutoUpdate();\n            }\n        };\n    };\n    const setupVirtualElementObserver = (node) => {\n        const unsubscribe = node.subscribe(($node) => {\n            if (referenceElement === undefined) {\n                referenceElement = $node;\n                updatePosition();\n            }\n            else {\n                // Preserve the reference to the virtual element.\n                Object.assign(referenceElement, $node);\n                updatePosition();\n            }\n        });\n        onDestroy(unsubscribe);\n    };\n    return [\n        referenceAction,\n        contentAction,\n        updatePosition\n    ];\n}\nexport function arrow(options) {\n    return {\n        name: \"arrow\",\n        options,\n        fn(args) {\n            const element = get(options.element);\n            if (element) {\n                return arrowCore({\n                    element,\n                    padding: options.padding\n                }).fn(args);\n            }\n            return {};\n        }\n    };\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Select from 'svelte-select'\n  import { getNestedPaths } from '$lib/utils/arrayUtils.js'\n  import { pathToOption } from '$lib/utils/pathUtils.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { isEqual } from 'lodash-es'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { setIn } from 'immutable-json-patch'\n  import type { PathOption, QueryLanguageOptions } from '$lib/types.js'\n\n  const debug = createDebug('jsoneditor:TransformWizard')\n\n  export let json: unknown\n  export let queryOptions: QueryLanguageOptions = {}\n  export let onChange: (queryOptions: QueryLanguageOptions) => void\n\n  // options\n  $: jsonIsArray = Array.isArray(json)\n  $: paths = jsonIsArray ? getNestedPaths(json) : []\n  $: pathsIncludingObjects = jsonIsArray ? getNestedPaths(json, true) : []\n  $: fieldOptions = paths.map(pathToOption)\n  $: projectionOptions = pathsIncludingObjects ? pathsIncludingObjects.map(pathToOption) : []\n\n  const filterRelationOptions = ['==', '!=', '<', '<=', '>', '>='].map((relation) => ({\n    value: relation,\n    label: relation\n  }))\n\n  const sortDirectionOptions = [\n    { value: 'asc', label: 'ascending' },\n    { value: 'desc', label: 'descending' }\n  ]\n\n  // TODO: the binding with the select boxes is very cumbersome. Can we simplify this?\n  let filterPath = queryOptions?.filter?.path ? pathToOption(queryOptions.filter.path) : undefined\n  let filterRelation =\n    filterRelationOptions.find((option) => option.value === queryOptions.filter?.relation) ??\n    filterRelationOptions[0]\n  let filterValue = queryOptions?.filter?.value || ''\n  let sortPath = queryOptions?.sort?.path ? pathToOption(queryOptions.sort.path) : undefined\n  let sortDirection =\n    sortDirectionOptions.find((option) => option.value === queryOptions.sort?.direction) ??\n    sortDirectionOptions[0]\n\n  $: projectionPaths =\n    queryOptions?.projection?.paths && projectionOptions\n      ? (queryOptions.projection.paths\n          .map((path) => projectionOptions.find((option) => isEqual(option.value, path)))\n          .filter((option) => !!option) as PathOption[])\n      : undefined\n\n  function changeFilterPath(path: JSONPath | undefined) {\n    if (!isEqual(queryOptions?.filter?.path, path)) {\n      debug('changeFilterPath', path)\n      queryOptions = setIn(queryOptions, ['filter', 'path'], path, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeFilterRelation(relation: string | undefined) {\n    if (!isEqual(queryOptions?.filter?.relation, relation)) {\n      debug('changeFilterRelation', relation)\n      queryOptions = setIn(queryOptions, ['filter', 'relation'], relation, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeFilterValue(value: string | undefined) {\n    if (!isEqual(queryOptions?.filter?.value, value)) {\n      debug('changeFilterValue', value)\n      queryOptions = setIn(queryOptions, ['filter', 'value'], value, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeSortPath(path: JSONPath | undefined) {\n    if (!isEqual(queryOptions?.sort?.path, path)) {\n      debug('changeSortPath', path)\n      queryOptions = setIn(queryOptions, ['sort', 'path'], path, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeSortDirection(direction: string | undefined) {\n    if (!isEqual(queryOptions?.sort?.direction, direction)) {\n      debug('changeSortDirection', direction)\n      queryOptions = setIn(queryOptions, ['sort', 'direction'], direction, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeProjectionPaths(paths: JSONPath[] | unknown) {\n    if (!isEqual(queryOptions?.projection?.paths, paths)) {\n      debug('changeProjectionPaths', paths)\n      queryOptions = setIn(queryOptions, ['projection', 'paths'], paths, true)\n      onChange(queryOptions)\n    }\n  }\n\n  $: changeFilterPath(filterPath?.value)\n  $: changeFilterRelation(filterRelation?.value)\n  $: changeFilterValue(filterValue)\n  $: changeSortPath(sortPath?.value)\n  $: changeSortDirection(sortDirection?.value)\n  $: changeProjectionPaths(projectionPaths ? projectionPaths.map((item) => item.value) : undefined)\n</script>\n\n<table class=\"jse-transform-wizard\">\n  <tr>\n    <th>Filter</th>\n    <td>\n      <div class=\"jse-horizontal\">\n        <Select class=\"jse-filter-path\" showChevron items={fieldOptions} bind:value={filterPath} />\n        <Select\n          class=\"jse-filter-relation\"\n          showChevron\n          clearable={false}\n          items={filterRelationOptions}\n          bind:value={filterRelation}\n        />\n        <input class=\"jse-filter-value\" bind:value={filterValue} />\n      </div>\n    </td>\n  </tr>\n  <tr>\n    <th>Sort</th>\n    <td>\n      <div class=\"jse-horizontal\">\n        <Select class=\"jse-sort-path\" showChevron items={fieldOptions} bind:value={sortPath} />\n        <Select\n          class=\"jse-sort-direction\"\n          showChevron\n          clearable={false}\n          items={sortDirectionOptions}\n          bind:value={sortDirection}\n        />\n      </div>\n    </td>\n  </tr>\n  <tr>\n    <th>Pick</th>\n    <td>\n      <div class=\"jse-horizontal\">\n        <Select\n          class=\"jse-projection-paths\"\n          multiple\n          showChevron\n          items={projectionOptions}\n          bind:value={projectionPaths}\n        />\n      </div>\n    </td>\n  </tr>\n</table>\n\n<style src=\"./TransformWizard.scss\"></style>\n","<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faCheckSquare, faSquare } from '@fortawesome/free-regular-svg-icons'\n  import type { QueryLanguage, OnChangeQueryLanguage } from '$lib/types.js'\n\n  export let queryLanguages: QueryLanguage[]\n  export let queryLanguageId: string\n  export let onChangeQueryLanguage: OnChangeQueryLanguage\n\n  function handleChangeQueryLanguage(newQueryLanguageId: string) {\n    queryLanguageId = newQueryLanguageId\n    onChangeQueryLanguage(newQueryLanguageId)\n  }\n</script>\n\n<div class=\"jse-select-query-language\">\n  <div class=\"jse-select-query-language-container\">\n    {#each queryLanguages as queryLanguage}\n      <button\n        type=\"button\"\n        on:click={() => handleChangeQueryLanguage(queryLanguage.id)}\n        class=\"jse-query-language\"\n        class:selected={queryLanguage.id === queryLanguageId}\n        title={`Select ${queryLanguage.name} as query language`}\n      >\n        {#if queryLanguage.id === queryLanguageId}\n          <Icon data={faCheckSquare} />\n        {:else}\n          <Icon data={faSquare} />\n        {/if}\n        {queryLanguage.name}\n      </button>\n    {/each}\n  </div>\n</div>\n\n<style src=\"./SelectQueryLanguage.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import {\n    faDownLeftAndUpRightToCenter,\n    faTimes,\n    faUpRightAndDownLeftFromCenter\n  } from '@fortawesome/free-solid-svg-icons'\n\n  export let title = 'Modal'\n  export let fullScreenButton: boolean = false\n  export let fullscreen: boolean = false\n  export let onClose: (() => void) | undefined = undefined\n</script>\n\n<div class=\"jse-header\">\n  <div class=\"jse-title\">\n    {title}\n  </div>\n  <slot name=\"actions\" />\n  {#if fullScreenButton}\n    <button\n      type=\"button\"\n      class=\"jse-fullscreen\"\n      title=\"Toggle full screen\"\n      on:click={() => (fullscreen = !fullscreen)}\n    >\n      <Icon data={fullscreen ? faDownLeftAndUpRightToCenter : faUpRightAndDownLeftFromCenter} />\n    </button>\n  {/if}\n  <button type=\"button\" class=\"jse-close\" on:click={() => onClose?.()}>\n    <Icon data={faTimes} />\n  </button>\n</div>\n\n<style src=\"./Header.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getContext } from 'svelte'\n  import Icon from 'svelte-awesome'\n  import { faCog } from '@fortawesome/free-solid-svg-icons'\n  import SelectQueryLanguage from '../controls/selectQueryLanguage/SelectQueryLanguage.svelte'\n  import type { AbsolutePopupContext, OnChangeQueryLanguage, QueryLanguage } from '$lib/types.js'\n  import Header from './Header.svelte'\n\n  export let queryLanguages: QueryLanguage[]\n  export let queryLanguageId: string\n  export let fullscreen: boolean\n  export let onChangeQueryLanguage: OnChangeQueryLanguage\n  export let onClose: () => void\n\n  let refConfigButton: HTMLButtonElement | undefined\n  let popupId: number | undefined\n\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n\n  function openConfig() {\n    const props = {\n      queryLanguages,\n      queryLanguageId,\n      onChangeQueryLanguage: (queryLanguageId: string) => {\n        closeAbsolutePopup(popupId)\n        onChangeQueryLanguage(queryLanguageId)\n      }\n    }\n\n    popupId = openAbsolutePopup(SelectQueryLanguage, props, {\n      offsetTop: -2,\n      offsetLeft: 0,\n      anchor: refConfigButton,\n      closeOnOuterClick: true\n    })\n  }\n</script>\n\n<Header title=\"Transform\" fullScreenButton={true} bind:fullscreen {onClose}>\n  <button\n    slot=\"actions\"\n    type=\"button\"\n    bind:this={refConfigButton}\n    class=\"jse-config\"\n    class:hide={queryLanguages.length <= 1}\n    on:click={openConfig}\n    title=\"Select a query language\"\n  >\n    <Icon data={faCog} />\n  </button>\n</Header>\n\n<style src=\"./TransformModalHeader.scss\"></style>\n","import { createDebug } from '$lib/utils/debug.js'\nimport {\n  AUTO_SCROLL_INTERVAL,\n  AUTO_SCROLL_SPEED_FAST,\n  AUTO_SCROLL_SPEED_NORMAL,\n  AUTO_SCROLL_SPEED_SLOW\n} from '$lib/constants.js'\n\nconst debug = createDebug('jsoneditor:AutoScrollHandler')\n\nexport function createAutoScrollHandler(scrollableElement: Element) {\n  debug('createAutoScrollHandler', scrollableElement)\n\n  let autoScrollSpeed: number | undefined // pixels per second\n  let autoScrollTimer: number | undefined\n\n  function calculateSpeed(diff: number) {\n    return diff < 20\n      ? AUTO_SCROLL_SPEED_SLOW\n      : diff < 50\n        ? AUTO_SCROLL_SPEED_NORMAL\n        : AUTO_SCROLL_SPEED_FAST\n  }\n\n  function autoScrollCallback() {\n    if (scrollableElement) {\n      // debug('auto scroll...')\n      const diff = (autoScrollSpeed || 0) * (AUTO_SCROLL_INTERVAL / 1000)\n\n      scrollableElement.scrollTop += diff\n    }\n  }\n\n  function startAutoScroll(speed: number) {\n    if (!autoScrollTimer || speed !== autoScrollSpeed) {\n      stopAutoScroll()\n\n      debug('startAutoScroll', speed)\n      autoScrollSpeed = speed\n      autoScrollTimer = setInterval(autoScrollCallback, AUTO_SCROLL_INTERVAL) as unknown as number\n    }\n  }\n\n  function stopAutoScroll() {\n    if (autoScrollTimer) {\n      debug('stopAutoScroll')\n\n      clearInterval(autoScrollTimer)\n      autoScrollTimer = undefined\n      autoScrollSpeed = undefined\n    }\n  }\n\n  function onDrag(event: MouseEvent) {\n    if (scrollableElement) {\n      const y = event.clientY\n      const { top, bottom } = scrollableElement.getBoundingClientRect()\n\n      if (y < top) {\n        const speed = calculateSpeed(top - y)\n        startAutoScroll(-speed)\n      } else if (y > bottom) {\n        const speed = calculateSpeed(y - bottom)\n        startAutoScroll(speed)\n      } else {\n        stopAutoScroll()\n      }\n    }\n  }\n\n  function onDragEnd() {\n    stopAutoScroll()\n  }\n\n  return {\n    onDrag,\n    onDragEnd\n  }\n}\n","// Robert Penner's easeInOutQuad\n\n// find the rest of his easing functions here: http://robertpenner.com/easing/\n// find them exported for ES6 consumption here: https://github.com/jaxgeller/ez.js\n\nexport default (t: number, b: number, c: number, d: number): number => {\n  t /= d / 2\n  if (t < 1) {\n    return (c / 2) * t * t + b\n  }\n  t--\n  return (-c / 2) * (t * (t - 2) - 1) + b\n}\n","import easeInOutQuad from './easing.js'\n\ntype Easing = (t: number, b: number, c: number, d: number) => number\ntype Duration = number | ((distance: number) => number)\n\ninterface JumpOptions {\n  duration?: Duration\n  offset?: number\n  callback?: () => void\n  easing?: Easing\n  a11y?: boolean\n  container?: Element | string\n}\n\nexport const createJump = () => {\n  // private variable cache\n  // no variables are created during a jump, preventing memory leaks\n\n  let container: Element // container element to be scrolled       (node)\n  let element: Element | undefined // element to scroll to                   (node)\n\n  let start: number // where scroll starts                    (px)\n  let stop: number // where scroll stops                     (px)\n\n  let offset // adjustment from the stop position      (px)\n  let easing: Easing // easing function                        (function)\n  let a11y: boolean // accessibility support flag             (boolean)\n\n  let distance: number // distance of scroll                     (px)\n  let duration: number // scroll duration                        (ms)\n\n  let timeStart: number // time scroll started                    (ms)\n  let timeElapsed: number // time spent scrolling thus far          (ms)\n\n  let next: number // next scroll position                   (px)\n\n  let callback: (() => void) | undefined // to call when done scrolling            (function)\n\n  let scrolling: boolean // true whilst scrolling                  (boolean)\n\n  // scroll position helper\n\n  function location() {\n    return container.scrollTop\n  }\n\n  // element offset helper\n\n  function top(element: Element) {\n    const elementTop = element.getBoundingClientRect().top\n    const containerTop = container.getBoundingClientRect ? container.getBoundingClientRect().top : 0\n\n    return elementTop - containerTop + start\n  }\n\n  // scrollTo helper\n\n  function scrollTo(top: number) {\n    container.scrollTo\n      ? container.scrollTo(container.scrollLeft, top) // window\n      : (container.scrollTop = top) // custom container\n  }\n\n  // rAF loop helper\n\n  function loop(timeCurrent: number) {\n    // store time scroll started, if not started already\n    if (!timeStart) {\n      timeStart = timeCurrent\n    }\n\n    // determine time spent scrolling so far\n    timeElapsed = timeCurrent - timeStart\n\n    // calculate next scroll position\n    next = easing(timeElapsed, start, distance, duration)\n\n    // scroll to it\n    scrollTo(next)\n\n    scrolling = true\n\n    // check progress\n    timeElapsed < duration\n      ? requestAnimationFrame(loop) // continue scroll loop\n      : done() // scrolling is done\n  }\n\n  // scroll finished helper\n\n  function done() {\n    // account for rAF time rounding inaccuracies\n    scrollTo(start + distance)\n\n    // if scrolling to an element, and accessibility is enabled\n    if (element && a11y) {\n      // add tabindex indicating programmatic focus\n      element.setAttribute('tabindex', '-1')\n\n      // focus the element\n      const htmlElement = element as HTMLElement\n      htmlElement.focus()\n    }\n\n    // if it exists, fire the callback\n    if (typeof callback === 'function') {\n      callback()\n    }\n\n    // reset time for next jump\n    timeStart = 0\n\n    // we're done scrolling\n    scrolling = false\n  }\n\n  // API\n\n  function jump(target: Element | number | string, options: JumpOptions = {}) {\n    // resolve options, or use defaults\n    duration = 1000\n    offset = options.offset || 0\n    callback = options.callback // \"undefined\" is a suitable default, and won't be called\n    easing = options.easing || easeInOutQuad\n    a11y = options.a11y || false\n\n    // resolve container\n    switch (typeof options.container) {\n      case 'object':\n        // we assume container is an HTML element (Node)\n        container = options.container\n        break\n\n      case 'string':\n        container = document.querySelector(options.container) as Element\n        break\n\n      default:\n        container = window.document.documentElement\n    }\n\n    // cache starting position\n    start = location()\n\n    // resolve target\n    switch (typeof target) {\n      // scroll from current position\n      case 'number':\n        element = undefined // no element to scroll to\n        a11y = false // make sure accessibility is off\n        stop = start + target\n        break\n\n      // scroll to element (node)\n      // bounding rect is relative to the viewport\n      case 'object':\n        element = target\n        stop = top(element)\n        break\n\n      // scroll to element (selector)\n      // bounding rect is relative to the viewport\n      case 'string':\n        element = document.querySelector(target) as unknown as Element\n        stop = top(element)\n        break\n\n      default:\n    }\n\n    // resolve scroll distance, accounting for offset\n    distance = stop - start + offset\n\n    // resolve duration\n    switch (typeof options.duration) {\n      // number in ms\n      case 'number':\n        duration = options.duration\n        break\n\n      // function passed the distance of the scroll\n      case 'function':\n        duration = options.duration(distance)\n        break\n\n      default:\n    }\n\n    // start the loop if we're not already scrolling\n    if (!scrolling) {\n      requestAnimationFrame(loop)\n    } else {\n      // reset time for next jump\n      timeStart = 0\n    }\n  }\n\n  // expose only the jump method\n  return jump\n}\n\n// export singleton\n\nconst singleton = createJump()\n\nexport default singleton\n","import { createDebug } from '../utils/debug.js'\n\nconst MAX_HISTORY_ITEMS = 1000\n\nconst debug = createDebug('jsoneditor:History')\n\n/**\n * @typedef {*} HistoryItem\n * @property {Object} undo\n * @property {Object} redo\n */\n\nexport interface HistoryOptions {\n  maxItems?: number\n  onChange?: (props: { canUndo: boolean; canRedo: boolean; length: number }) => void\n}\n\nexport interface HistoryState {\n  canUndo: boolean\n  canRedo: boolean\n  length: number\n}\n\nexport interface History<T> {\n  add: (item: T) => void\n  clear: () => void\n  getState: () => HistoryState\n  undo: () => T | undefined\n  redo: () => T | undefined\n}\n\nexport function createHistory<T>(options: HistoryOptions = {}): History<T> {\n  const maxItems = options.maxItems || MAX_HISTORY_ITEMS\n\n  /**\n   * items in history are sorted from newest first to oldest last\n   */\n  let items: T[] = []\n\n  let index = 0\n\n  function canUndo(): boolean {\n    return index < items.length\n  }\n\n  function canRedo(): boolean {\n    return index > 0\n  }\n\n  function getState(): HistoryState {\n    return {\n      canUndo: canUndo(),\n      canRedo: canRedo(),\n      length: items.length\n    }\n  }\n\n  function handleChange() {\n    if (options.onChange) {\n      options.onChange(getState())\n    }\n  }\n\n  function add(item: T) {\n    debug('add', item)\n\n    items = [item].concat(items.slice(index)).slice(0, maxItems)\n\n    index = 0\n\n    handleChange()\n  }\n\n  function clear() {\n    debug('clear')\n\n    items = []\n    index = 0\n\n    handleChange()\n  }\n\n  function undo(): T | undefined {\n    if (canUndo()) {\n      const item = items[index]\n      index += 1\n\n      debug('undo', item)\n\n      handleChange()\n\n      return item\n    }\n\n    return undefined\n  }\n\n  function redo(): T | undefined {\n    if (canRedo()) {\n      index -= 1\n\n      debug('redo', items[index])\n\n      handleChange()\n\n      return items[index]\n    }\n\n    return undefined\n  }\n\n  return {\n    add,\n    clear,\n    getState,\n    undo,\n    redo\n  }\n}\n","/**\n * Measure how long a callback takes to execute.\n * Returns the response from the callback\n * The measured duration is returned via the onDuration callback\n */\nexport function measure<T>(callback: () => T, onDuration: (duration: number) => void): T {\n  const start = Date.now()\n  const result = callback()\n  const end = Date.now()\n\n  onDuration(end - start)\n\n  return result\n}\n","import { initial, isEmpty } from 'lodash-es'\nimport type {\n  ContentErrors,\n  JSONParser,\n  RecursiveStateFactory,\n  ValidationErrors,\n  ValidationError,\n  Validator\n} from '$lib/types.js'\nimport { ValidationSeverity } from '$lib/types.js'\nimport { MAX_AUTO_REPAIRABLE_SIZE, MAX_VALIDATABLE_SIZE } from '../constants.js'\nimport { measure } from '../utils/timeUtils.js'\nimport { normalizeJsonParseError } from '../utils/jsonUtils.js'\nimport { createDebug } from '../utils/debug.js'\nimport { jsonrepair } from 'jsonrepair'\nimport { updateInRecursiveState } from './documentState.js'\nimport type { JSONPath } from 'immutable-json-patch'\n\nconst debug = createDebug('validation')\n\nexport const validationErrorsFactory: RecursiveStateFactory = {\n  createObjectDocumentState: () => ({ type: 'object', properties: {} }),\n  createArrayDocumentState: () => ({ type: 'array', items: [] }),\n  createValueDocumentState: () => ({ type: 'value' })\n}\n\nexport function updateInValidationErrors(\n  json: unknown,\n  errors: ValidationErrors | undefined,\n  path: JSONPath,\n  transform: (value: unknown, state: ValidationErrors) => ValidationErrors\n): ValidationErrors {\n  return updateInRecursiveState(json, errors, path, transform, validationErrorsFactory)\n}\n\n/**\n * Create a flat map with validation errors, where the key is the stringified path\n * and also create error messages for the parent nodes of the nodes having an error.\n *\n * Returns a nested object containing the validation errors\n */\nexport function toRecursiveValidationErrors(\n  json: unknown,\n  validationErrors: ValidationError[]\n): ValidationErrors | undefined {\n  let output: ValidationErrors | undefined\n\n  // first generate the errors themselves\n  validationErrors.forEach((validationError) => {\n    output = updateInValidationErrors(json, output, validationError.path, (_, state) => ({\n      ...state,\n      validationError\n    }))\n  })\n\n  // create error entries for all parent nodes (displayed when the node is collapsed)\n  validationErrors.forEach((validationError) => {\n    let parentPath = validationError.path\n\n    while (parentPath.length > 0) {\n      parentPath = initial(parentPath)\n\n      output = updateInValidationErrors(json, output, parentPath, (_, state) => {\n        return state.validationError\n          ? state\n          : {\n              ...state,\n              validationError: {\n                isChildError: true,\n                path: parentPath,\n                message: 'Contains invalid data',\n                severity: ValidationSeverity.warning\n              }\n            }\n      })\n    }\n  })\n\n  return output\n}\n\nexport function validateJSON(\n  json: unknown,\n  validator: Validator | undefined,\n  parser: JSONParser,\n  validationParser: JSONParser\n): ValidationError[] {\n  debug('validateJSON')\n\n  if (!validator) {\n    return []\n  }\n\n  if (parser !== validationParser) {\n    // if needed, convert for example Lossless JSON to native JSON\n    // (like replace bigint or LosslessNumber into regular numbers)\n    const text = parser.stringify(json)\n    const convertedJSON = text !== undefined ? validationParser.parse(text) : undefined\n    return validator(convertedJSON)\n  } else {\n    return validator(json)\n  }\n}\n\nexport function validateText(\n  text: string,\n  validator: Validator | undefined,\n  parser: JSONParser,\n  validationParser: JSONParser\n): ContentErrors | undefined {\n  debug('validateText')\n\n  if (text.length > MAX_VALIDATABLE_SIZE) {\n    const validationError: ValidationError = {\n      path: [],\n      message: 'Validation turned off: the document is too large',\n      severity: ValidationSeverity.info\n    }\n\n    return {\n      validationErrors: [validationError]\n    }\n  }\n\n  if (text.length === 0) {\n    // new, empty document, do not try to parse\n    return undefined\n  }\n\n  try {\n    // parse with the \"main\" parser (not the validation parser) to get parse errors\n    // (like syntax errors and duplicate keys errors)\n    const json = measure(\n      () => parser.parse(text),\n      (duration) => debug(`validate: parsed json in ${duration} ms`)\n    )\n\n    if (!validator) {\n      return undefined\n    }\n\n    // if needed, parse with the validationParser to be able to feed the json to the validator\n    const convertedJSON =\n      parser === validationParser\n        ? json\n        : measure(\n            () => validationParser.parse(text),\n            (duration) => debug(`validate: parsed json with the validationParser in ${duration} ms`)\n          )\n\n    // actually validate the json\n    const validationErrors = measure(\n      () => validator(convertedJSON),\n      (duration) => debug(`validate: validated json in ${duration} ms`)\n    )\n\n    return !isEmpty(validationErrors) ? { validationErrors } : undefined\n  } catch (err) {\n    const isRepairable = measure(\n      () => canAutoRepair(text, parser),\n      (duration) => debug(`validate: checked whether repairable in ${duration} ms`)\n    )\n\n    const parseError = normalizeJsonParseError(\n      text,\n      (err as Error).message || (err as Error).toString()\n    )\n\n    return {\n      parseError,\n      isRepairable\n    }\n  }\n}\n\nfunction canAutoRepair(text: string, parser: JSONParser): boolean {\n  if (text.length > MAX_AUTO_REPAIRABLE_SIZE) {\n    return false\n  }\n\n  try {\n    parser.parse(jsonrepair(text))\n\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","import { createDebug } from '$lib/utils/debug.js'\n\nconst debug = createDebug('jsoneditor:FocusTracker')\n\nexport interface FocusTrackerProps {\n  onMount: (callback: () => void) => void\n  onDestroy: (callback: () => void) => void\n  getWindow: () => Window | undefined\n  hasFocus: () => boolean\n  onFocus: () => void\n  onBlur: () => void\n}\n\nexport function createFocusTracker({\n  onMount,\n  onDestroy,\n  getWindow,\n  hasFocus,\n  onFocus,\n  onBlur\n}: FocusTrackerProps) {\n  let blurTimeoutHandle: number | undefined\n  let focus = false\n\n  function handleFocusIn() {\n    const newFocus = hasFocus()\n\n    if (newFocus) {\n      clearTimeout(blurTimeoutHandle)\n      if (!focus) {\n        debug('focus')\n        onFocus()\n        focus = newFocus\n      }\n    }\n  }\n\n  function handleFocusOut() {\n    if (focus) {\n      // We set focus to false after timeout. Often, you get a blur and directly\n      // another focus when moving focus from one button to another.\n      // The focusIn handler will cancel any pending blur timer in those cases\n      clearTimeout(blurTimeoutHandle)\n      blurTimeoutHandle = setTimeout(() => {\n        if (!hasFocus()) {\n          debug('blur')\n          focus = false\n          onBlur()\n        }\n      }) as unknown as number\n    }\n  }\n\n  onMount(() => {\n    debug('mount FocusTracker')\n    const window = getWindow()\n    if (window) {\n      window.addEventListener('focusin', handleFocusIn, true)\n      window.addEventListener('focusout', handleFocusOut, true)\n    }\n  })\n\n  onDestroy(() => {\n    debug('destroy FocusTracker')\n    const window = getWindow()\n    if (window) {\n      window.removeEventListener('focusin', handleFocusIn, true)\n      window.removeEventListener('focusout', handleFocusOut, true)\n    }\n  })\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import type { MessageAction } from '$lib/types'\n  import type { IconDefinition } from '@fortawesome/free-solid-svg-icons'\n  import { onDestroy } from 'svelte'\n\n  export let type: 'success' | 'error' | 'warning' | 'info' = 'success'\n  export let icon: IconDefinition | undefined = undefined\n  export let message: string | undefined = undefined\n  export let actions: MessageAction[] = []\n  export let onClick: (() => void) | undefined = undefined\n  export let onClose: (() => void) | undefined = undefined\n\n  if (onClose) {\n    onDestroy(onClose)\n  }\n\n  function handleClick() {\n    if (onClick) {\n      onClick()\n    }\n  }\n</script>\n\n<div class=\"jse-message jse-{type}\">\n  <!-- svelte-ignore a11y-click-events-have-key-events -->\n  <div\n    role=\"button\"\n    tabindex=\"-1\"\n    class=\"jse-text\"\n    class:jse-clickable={!!onClick}\n    on:click={handleClick}\n  >\n    <div class=\"jse-text-centered\">\n      {#if icon}\n        <Icon data={icon} />\n      {/if}\n      {message}\n    </div>\n  </div>\n  <div class=\"jse-actions\">\n    {#each actions as action}\n      <button\n        type=\"button\"\n        on:click={() => {\n          if (action.onClick) {\n            action.onClick()\n          }\n        }}\n        on:mousedown={() => {\n          if (action.onMouseDown) {\n            action.onMouseDown()\n          }\n        }}\n        class=\"jse-button jse-action jse-primary\"\n        title={action.title}\n        disabled={action.disabled}\n      >\n        {#if action.icon}\n          <Icon data={action.icon} />\n        {/if}\n        {action.text}\n      </button>\n    {/each}\n  </div>\n</div>\n\n<style src=\"./Message.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faAngleDown,\n    faAngleRight,\n    faExclamationTriangle\n  } from '@fortawesome/free-solid-svg-icons'\n  import { isEmpty } from 'lodash-es'\n  import Icon from 'svelte-awesome'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import { ValidationSeverity, type ValidationError } from '$lib/types.js'\n  import { MAX_VALIDATION_ERRORS } from '$lib/constants.js'\n  import { limit } from '$lib/utils/arrayUtils.js'\n\n  export let validationErrors: ValidationError[]\n  export let selectError: (error: ValidationError) => void\n\n  $: count = validationErrors.length\n\n  let expanded = true\n\n  function collapse() {\n    expanded = false\n  }\n\n  function expand() {\n    expanded = true\n  }\n\n  function getMaxSeverity(errors: ValidationError[]): ValidationSeverity | undefined {\n    const severities = [\n      ValidationSeverity.error,\n      ValidationSeverity.warning,\n      ValidationSeverity.info\n    ]\n\n    return severities.find((severity) => errors.some((error) => error.severity === severity))\n  }\n</script>\n\n{#if !isEmpty(validationErrors)}\n  <div class=\"jse-validation-errors-overview\">\n    {#if expanded || count === 1}\n      <table class=\"jse-validation-errors-overview-expanded\">\n        <tbody>\n          {#each limit(validationErrors, MAX_VALIDATION_ERRORS) as validationError, index}\n            <tr\n              class=\"jse-validation-{validationError.severity}\"\n              tabindex=\"0\"\n              on:click={() => {\n                // trigger on the next tick to prevent the editor not getting focus\n                setTimeout(() => selectError(validationError))\n              }}\n            >\n              <td class=\"jse-validation-error-icon\">\n                <Icon data={faExclamationTriangle} />\n              </td>\n              <td class=\"jse-validation-error-path\">\n                {stringifyJSONPath(validationError.path)}\n              </td>\n              <td class=\"jse-validation-error-message\">\n                {validationError.message}\n              </td>\n              <td class=\"jse-validation-error-action\">\n                {#if index === 0 && validationErrors.length > 1}\n                  <button\n                    type=\"button\"\n                    class=\"jse-validation-errors-collapse\"\n                    on:click|stopPropagation={collapse}\n                    title=\"Collapse validation errors\"\n                  >\n                    <Icon data={faAngleDown} />\n                  </button>\n                {/if}\n              </td>\n            </tr>\n          {/each}\n\n          {#if count > MAX_VALIDATION_ERRORS}\n            <tr class=\"jse-validation-error\">\n              <td />\n              <td />\n              <td>(and {count - MAX_VALIDATION_ERRORS} more errors)</td>\n              <td />\n            </tr>\n          {/if}\n        </tbody>\n      </table>\n    {:else}\n      <table class=\"jse-validation-errors-overview-collapsed\">\n        <tbody>\n          <tr class=\"jse-validation-{getMaxSeverity(validationErrors)}\" on:click={expand}>\n            <td class=\"jse-validation-error-icon\">\n              <Icon data={faExclamationTriangle} />\n            </td>\n            <td class=\"jse-validation-error-count\">\n              {count} validation errors\n              <div class=\"jse-validation-errors-expand\">\n                <Icon data={faAngleRight} />\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    {/if}\n  </div>\n{/if}\n\n<style src=\"./ValidationErrorsOverview.scss\"></style>\n","type Callback = () => void\n\n/**\n * The provided callback is invoked when the user presses Escape, and then stops propagation of the event.\n */\nexport function onEscape(element: HTMLElement | undefined, callback: Callback) {\n  if (!element) {\n    return undefined\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      event.preventDefault()\n      event.stopPropagation()\n      callback()\n    }\n  }\n\n  element.addEventListener('keydown', handleKeyDown)\n\n  return {\n    destroy() {\n      element.removeEventListener('keydown', handleKeyDown)\n    }\n  }\n}\n","<script lang=\"ts\">\n  // code based on: https://svelte.dev/examples/modal\n  import { onEscape } from '$lib/actions/onEscape.js'\n  import { onDestroy, onMount } from 'svelte'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  export let className: string | undefined = undefined\n  export let fullscreen = false\n  export let onClose: () => void\n\n  let dialog: HTMLDialogElement\n\n  onMount(() => dialog.showModal())\n  onDestroy(() => dialog.close())\n\n  function close() {\n    onClose()\n  }\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events a11y-no-noninteractive-element-interactions -->\n<dialog\n  bind:this={dialog}\n  on:close={close}\n  on:click|self={close}\n  on:cancel|preventDefault\n  use:onEscape={close}\n  class={classnames('jse-modal', className)}\n  class:jse-fullscreen={fullscreen}\n>\n  <div class=\"jse-modal-inner\">\n    <slot />\n  </div>\n</dialog>\n\n<style lang=\"scss\">\n  @import '../../styles.scss';\n\n  dialog.jse-modal {\n    border-radius: $border-radius;\n    font-size: $padding; // for some reason that I don't understand, the font-size of the dialog is used as margin around the dialog\n    border: none;\n    padding: 0;\n    display: flex;\n    min-width: 0;\n    margin: auto;\n    overflow: visible;\n    transition:\n      width 0.1s ease-in-out,\n      height 0.1s ease-in-out;\n\n    &.jse-sort-modal {\n      width: 400px;\n    }\n\n    &.jse-repair-modal {\n      width: 600px;\n      height: 500px;\n    }\n\n    &.jse-jsoneditor-modal {\n      width: 800px;\n      height: 600px;\n    }\n\n    &.jse-transform-modal {\n      width: 1200px;\n      height: 800px;\n    }\n\n    &.jse-fullscreen {\n      width: 100%;\n      height: 100%;\n    }\n\n    &::backdrop {\n      background: $modal-overlay-background;\n    }\n\n    &[open] {\n      animation: zoom 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n    }\n\n    &[open]::backdrop {\n      animation: fade 0.2s ease-out;\n    }\n\n    & .jse-modal-inner {\n      @include jse-modal-style;\n    }\n\n    @keyframes zoom {\n      from {\n        transform: scale(0.95);\n      }\n      to {\n        transform: scale(1);\n      }\n    }\n\n    @keyframes fade {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    // styling for the select box, svelte-select\n    // see docs: https://github.com/rob-balfre/svelte-select#css-custom-properties-variables\n    :global(.svelte-select) {\n      --border: #{$svelte-select-border};\n      --item-is-active-bg: #{$svelte-select-item-is-active-bg};\n      --border-radius: #{$svelte-select-border-radius};\n      --background: #{$svelte-select-background};\n      --padding: #{$svelte-select-padding};\n      --multi-select-padding: #{$svelte-select-multi-select-padding};\n      --font-size: #{$svelte-select-font-size};\n      --height: 36px;\n      --multi-item-height: 28px;\n      --multi-item-margin: 2px;\n      --multi-item-padding: 2px 8px;\n      --multi-item-border-radius: 6px;\n      --indicator-top: 8px;\n    }\n  }\n</style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { isMacDevice } from '$lib/utils/navigatorUtils.js'\n  import Header from './Header.svelte'\n  import Modal from './Modal.svelte'\n\n  export let onClose: () => void\n\n  const ctrl = isMacDevice() ? '⌘' : 'Ctrl'\n</script>\n\n<Modal {onClose} className=\"jse-copy-paste\">\n  <Header title=\"Copying and pasting\" {onClose} />\n\n  <div class=\"jse-modal-contents\">\n    <div>These actions are unavailable via the menu. Please use:</div>\n\n    <div class=\"jse-shortcuts\">\n      <div class=\"jse-shortcut\">\n        <div class=\"jse-key\">\n          {ctrl}+C\n        </div>\n        for copy\n      </div>\n      <div class=\"jse-shortcut\">\n        <div class=\"jse-key\">\n          {ctrl}+X\n        </div>\n        for cut\n      </div>\n      <div class=\"jse-shortcut\">\n        <div class=\"jse-key\">\n          {ctrl}+V\n        </div>\n        for paste\n      </div>\n    </div>\n\n    <div class=\"jse-actions\">\n      <button type=\"button\" class=\"jse-primary\" on:click={onClose}> Close </button>\n    </div>\n  </div>\n</Modal>\n\n<style src=\"./CopyPasteModal.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import type { MenuItem } from '$lib/types'\n  import { isMenuButton, isMenuSeparator, isMenuSpace } from '$lib/typeguards.js'\n\n  export let items: MenuItem[] = []\n\n  function unknownMenuItem(item: MenuItem): string {\n    console.error('Unknown type of menu item', item)\n    return '???'\n  }\n</script>\n\n<div class=\"jse-menu\">\n  <slot name=\"left\" />\n\n  {#each items as item}\n    {#if isMenuSeparator(item)}\n      <div class=\"jse-separator\" />\n    {:else if isMenuSpace(item)}\n      <div class=\"jse-space\" />\n    {:else if isMenuButton(item)}\n      <button\n        type=\"button\"\n        class=\"jse-button {item.className}\"\n        on:click={item.onClick}\n        title={item.title}\n        disabled={item.disabled || false}\n      >\n        {#if item.icon}\n          <Icon data={item.icon} />\n        {/if}\n        {#if item.text}\n          {item.text}\n        {/if}\n      </button>\n    {:else}\n      {unknownMenuItem(item)}\n    {/if}\n  {/each}\n\n  <slot name=\"right\" />\n</div>\n\n<style src=\"./Menu.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faArrowDown,\n    faCheck,\n    faExclamationTriangle,\n    faTimes,\n    faWrench\n  } from '@fortawesome/free-solid-svg-icons'\n  import { createDebug } from '$lib/utils/debug.js'\n  import Message from '../../controls/Message.svelte'\n  import { normalizeJsonParseError } from '$lib/utils/jsonUtils.js'\n  import Menu from '../../controls/Menu.svelte'\n  import type { MenuItem, ParseError } from '$lib/types.js'\n\n  export let text = ''\n  export let readOnly = false\n  export let onParse: (text: string) => void\n  export let onRepair: (text: string) => string\n  export let onChange: ((updatedText: string) => void) | undefined = undefined\n  export let onApply: (repairedText: string) => void\n  export let onCancel: () => void\n\n  const debug = createDebug('jsoneditor:JSONRepair')\n\n  let domTextArea: HTMLTextAreaElement\n\n  $: error = getErrorMessage(text)\n  $: repairable = isRepairable(text)\n\n  $: debug('error', error)\n\n  function getErrorMessage(jsonText: string): ParseError | undefined {\n    try {\n      onParse(jsonText)\n      return undefined\n    } catch (err) {\n      return normalizeJsonParseError(jsonText, (err as Error).message)\n    }\n  }\n\n  function isRepairable(jsonText: string) {\n    try {\n      onRepair(jsonText)\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n\n  function goToError() {\n    if (domTextArea && error) {\n      const position = error.position !== undefined ? error.position : 0\n      domTextArea.setSelectionRange(position, position)\n      domTextArea.focus()\n    }\n  }\n\n  function handleChange(event: Event & { currentTarget: EventTarget & HTMLTextAreaElement }) {\n    debug('handleChange')\n\n    const value = (event.target as HTMLTextAreaElement).value\n\n    if (text === value) {\n      return\n    }\n\n    text = value\n\n    if (onChange) {\n      onChange(text)\n    }\n  }\n\n  function handleApply() {\n    onApply(text)\n  }\n\n  function handleRepair() {\n    try {\n      // TODO: simpleJsonRepair should also partially apply fixes. Now it's all or nothing\n      text = onRepair(text)\n\n      if (onChange) {\n        onChange(text)\n      }\n    } catch (err) {\n      // no need to do something with the error\n    }\n  }\n\n  let items: MenuItem[]\n  $: items = [\n    {\n      type: 'space'\n    },\n    {\n      type: 'button',\n      icon: faTimes,\n      title: 'Cancel repair',\n      className: 'jse-cancel',\n      onClick: onCancel\n    }\n  ]\n\n  $: gotoAction = {\n    icon: faArrowDown,\n    text: 'Show me',\n    title: 'Scroll to the error location',\n    onClick: goToError\n  }\n\n  $: repairAction = {\n    icon: faWrench,\n    text: 'Auto repair',\n    title: 'Automatically repair JSON',\n    onClick: handleRepair\n  }\n\n  $: errorActions = repairable ? [gotoAction, repairAction] : [gotoAction]\n\n  $: successActions = [\n    {\n      icon: faCheck,\n      text: 'Apply',\n      title: 'Apply fixed JSON',\n      disabled: readOnly,\n      onClick: handleApply\n    }\n  ]\n</script>\n\n<div class=\"jse-json-repair-component\">\n  <Menu {items}>\n    <div slot=\"left\" class=\"jse-info\">Repair invalid JSON, then click apply</div>\n  </Menu>\n\n  {#if error}\n    <Message\n      type=\"error\"\n      icon={faExclamationTriangle}\n      message={`Cannot parse JSON: ${error.message}`}\n      actions={errorActions}\n    />\n  {:else}\n    <Message\n      type=\"success\"\n      message=\"JSON is valid now and can be parsed.\"\n      actions={successActions}\n    />\n  {/if}\n  <textarea\n    bind:this={domTextArea}\n    on:input={handleChange}\n    readonly={readOnly}\n    class=\"jse-json-text\"\n    autocomplete=\"off\"\n    autocapitalize=\"off\"\n    spellcheck=\"false\">{text}</textarea\n  >\n</div>\n\n<style src=\"./JSONRepairComponent.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import JSONRepairComponent from './repair/JSONRepairComponent.svelte'\n  import Modal from './Modal.svelte'\n\n  export let text: string\n  export let onParse: (text: string) => void\n  export let onRepair: (text: string) => string\n  export let onApply: (repairedText: string) => void\n  export let onClose: () => void\n\n  function handleApply(repairedText: string) {\n    onApply(repairedText)\n    onClose()\n  }\n\n  function handleCancel() {\n    onClose()\n  }\n</script>\n\n<Modal {onClose} className=\"jse-repair-modal\">\n  <JSONRepairComponent\n    bind:text\n    {onParse}\n    {onRepair}\n    onApply={handleApply}\n    onCancel={handleCancel}\n  />\n</Modal>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getExpandItemsSections } from '$lib/logic/expandItemsSections.js'\n  import type { JSONSelection, Section, VisibleSection, JSONEditorContext } from '$lib/types.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { pathInSelection } from '$lib/logic/selection.js'\n\n  export let visibleSections: VisibleSection[]\n  export let sectionIndex: number\n  export let total: number\n  export let path: JSONPath\n  export let selection: JSONSelection | undefined\n  export let onExpandSection: (path: JSONPath, section: Section) => void\n  export let context: JSONEditorContext\n\n  $: visibleSection = visibleSections[sectionIndex]\n\n  $: startIndex = visibleSection.end\n  $: endIndex = visibleSections[sectionIndex + 1] ? visibleSections[sectionIndex + 1].start : total\n\n  $: selected = pathInSelection(context.getJson(), selection, path.concat(String(startIndex)))\n\n  $: expandItemsSections = getExpandItemsSections(startIndex, endIndex)\n\n  function handleMouseMove(event: MouseEvent) {\n    // prevent the whole array from being selected whilst dragging over\n    // a section with collapsed items\n    event.stopPropagation()\n  }\n</script>\n\n<div\n  role=\"none\"\n  class=\"jse-collapsed-items\"\n  class:jse-selected={selected}\n  on:mousemove={handleMouseMove}\n  style:--level={path.length + 2}\n>\n  <div>\n    <div class=\"jse-text\">Items {startIndex}-{endIndex}</div>\n    {#each expandItemsSections as expandItemsSection}<button\n        type=\"button\"\n        class=\"jse-expand-items\"\n        on:click={() => onExpandSection(path, expandItemsSection)}\n      >\n        show {expandItemsSection.start}-{expandItemsSection.end}\n      </button>\n    {/each}\n  </div>\n</div>\n\n<style src=\"./CollapsedItems.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { faCaretDown } from '@fortawesome/free-solid-svg-icons'\n  import Icon from 'svelte-awesome'\n  import {\n    CONTEXT_MENU_EXPLANATION,\n    CONTEXT_MENU_HEIGHT,\n    CONTEXT_MENU_WIDTH\n  } from '$lib/constants.js'\n  import type { OnContextMenu } from '$lib/types'\n\n  export let root: boolean = false\n  export let insert: boolean = false\n  export let selected: boolean\n  export let onContextMenu: OnContextMenu\n\n  function handleClick(event: MouseEvent & { currentTarget: EventTarget & HTMLButtonElement }) {\n    let buttonElem: Element | undefined = event.target as HTMLButtonElement\n    while (buttonElem && buttonElem.nodeName !== 'BUTTON') {\n      buttonElem = buttonElem.parentNode as Element\n    }\n\n    if (buttonElem) {\n      onContextMenu({\n        anchor: buttonElem,\n        left: 0,\n        top: 0,\n        width: CONTEXT_MENU_WIDTH,\n        height: CONTEXT_MENU_HEIGHT,\n        offsetTop: 2,\n        offsetLeft: 0,\n        showTip: true\n      })\n    }\n  }\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-context-menu-pointer\"\n  class:jse-root={root}\n  class:jse-insert={insert}\n  class:jse-selected={selected}\n  title={CONTEXT_MENU_EXPLANATION}\n  on:click={handleClick}\n>\n  <Icon data={faCaretDown} />\n</button>\n\n<style src=\"./ContextMenuPointer.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { initial, isEqual } from 'lodash-es'\n  import {\n    createEditKeySelection,\n    createKeySelection,\n    createValueSelection,\n    isEditingSelection,\n    isKeySelection\n  } from '$lib/logic/selection.js'\n  import SearchResultHighlighter from './highlight/SearchResultHighlighter.svelte'\n  import EditableDiv from '../../controls/EditableDiv.svelte'\n  import { addNewLineSuffix } from '$lib/utils/domUtils.js'\n  import type { ExtendedSearchResultItem, JSONSelection, TreeModeContext } from '$lib/types.js'\n  import { UpdateSelectionAfterChange } from '$lib/types.js'\n  import { type JSONPath, type JSONPointer, parseJSONPointer } from 'immutable-json-patch'\n  import ContextMenuPointer from '../../../components/controls/contextmenu/ContextMenuPointer.svelte'\n\n  export let pointer: JSONPointer\n  export let key: string\n  export let selection: JSONSelection | undefined\n  export let searchResultItems: ExtendedSearchResultItem[] | undefined\n  export let onUpdateKey: (oldKey: string, newKey: string) => string\n\n  export let context: TreeModeContext\n\n  let path: JSONPath\n  $: path = parseJSONPointer(pointer)\n\n  $: isKeySelected = isKeySelection(selection) && isEqual(selection.path, path)\n  $: isEditingKey = isKeySelected && isEditingSelection(selection)\n\n  function handleKeyDoubleClick(\n    event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }\n  ) {\n    if (!isEditingKey && !context.readOnly) {\n      event.preventDefault()\n      context.onSelect(createEditKeySelection(path))\n    }\n  }\n\n  function handleChangeValue(newKey: string, updateSelection: UpdateSelectionAfterChange) {\n    const updatedKey = onUpdateKey(key, context.normalization.unescapeValue(newKey))\n    const updatedPath = initial(path).concat(updatedKey)\n\n    context.onSelect(\n      updateSelection === UpdateSelectionAfterChange.nextInside\n        ? createValueSelection(updatedPath)\n        : createKeySelection(updatedPath)\n    )\n\n    if (updateSelection !== UpdateSelectionAfterChange.self) {\n      context.focus()\n    }\n  }\n\n  function handleCancelChange() {\n    context.onSelect(createKeySelection(path))\n    context.focus()\n  }\n</script>\n\n{#if !context.readOnly && isEditingKey}\n  <EditableDiv\n    value={context.normalization.escapeValue(key)}\n    initialValue={isEditingSelection(selection) ? selection.initialValue : undefined}\n    label=\"Edit key\"\n    shortText\n    onChange={handleChangeValue}\n    onCancel={handleCancelChange}\n    onFind={context.onFind}\n  />\n{:else}\n  <div\n    role=\"none\"\n    data-type=\"selectable-key\"\n    class=\"jse-key\"\n    class:jse-empty={key === ''}\n    on:dblclick={handleKeyDoubleClick}\n  >\n    {#if searchResultItems}\n      <SearchResultHighlighter text={context.normalization.escapeValue(key)} {searchResultItems} />\n    {:else}\n      {addNewLineSuffix(context.normalization.escapeValue(key))}\n    {/if}\n  </div>\n{/if}\n{#if !context.readOnly && isKeySelected && !isEditingKey}\n  <ContextMenuPointer selected={true} onContextMenu={context.onContextMenu} />\n{/if}\n\n<style src=\"./JSONKey.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONEditorContext, JSONSelection, SearchResultItem } from '$lib/types.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { isEditingSelection, isValueSelection } from '$lib/logic/selection.js'\n  import { isSvelteActionRenderer } from '$lib/typeguards.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let context: JSONEditorContext\n  export let enforceString: boolean\n  export let selection: JSONSelection | undefined\n  export let searchResultItems: SearchResultItem[] | undefined\n\n  $: isEditing = isValueSelection(selection) && isEditingSelection(selection)\n\n  $: renderers = context.onRenderValue({\n    path,\n    value,\n    mode: context.mode,\n    readOnly: context.readOnly,\n    enforceString,\n    isEditing,\n    parser: context.parser,\n    normalization: context.normalization,\n    selection,\n    searchResultItems,\n    onPatch: context.onPatch,\n    onPasteJson: context.onPasteJson,\n    onSelect: context.onSelect,\n    onFind: context.onFind,\n    findNextInside: context.findNextInside,\n    focus: context.focus\n  })\n</script>\n\n{#each renderers as renderer}\n  {#if isSvelteActionRenderer(renderer)}\n    {@const action = renderer.action}\n    {#key renderer.action}\n      <div\n        role=\"button\"\n        tabindex=\"-1\"\n        class=\"jse-value\"\n        data-type=\"selectable-value\"\n        use:action={renderer.props}\n      />\n    {/key}\n  {:else}\n    {#key renderer.component}\n      <svelte:component this={renderer.component} {...renderer.props} />\n    {/key}\n  {/if}\n{/each}\n","// used by JSONNode during dragging\nimport type { JSONPath } from 'immutable-json-patch'\n\nexport const singleton: Singleton = {\n  selecting: false,\n  selectionAnchor: undefined, // Path\n  selectionAnchorType: undefined, // Selection type\n  selectionFocus: undefined, // Path\n\n  dragging: false\n}\n\ninterface Singleton {\n  selecting: boolean\n  selectionAnchor: JSONPath | undefined\n  selectionAnchorType: string | undefined\n  selectionFocus: JSONPath | undefined\n\n  dragging: boolean\n}\n","import { createMultiSelection, getEndPath, getStartPath } from './selection.js'\nimport { initial, isEqual } from 'lodash-es'\nimport type { JSONPatchDocument } from 'immutable-json-patch'\nimport { getIn } from 'immutable-json-patch'\nimport { moveInsideParent } from './operations.js'\nimport type {\n  DragInsideAction,\n  DragInsideProps,\n  JSONSelection,\n  MultiSelection,\n  RenderedItem\n} from '$lib/types'\n\nexport interface MoveSelectionProps {\n  json: unknown\n  selection: JSONSelection | undefined\n  deltaY: number\n  items: RenderedItem[]\n}\n\nexport interface MoveSelectionResult {\n  operations: JSONPatchDocument | undefined\n  updatedSelection: JSONSelection | undefined\n  offset: number\n}\n\nexport function onMoveSelection({\n  json,\n  selection,\n  deltaY,\n  items\n}: MoveSelectionProps): MoveSelectionResult {\n  if (!selection) {\n    return {\n      operations: undefined,\n      updatedSelection: undefined,\n      offset: 0\n    }\n  }\n\n  const dragInsideAction =\n    deltaY < 0\n      ? findSwapPathUp({ json, selection, deltaY, items })\n      : findSwapPathDown({ json, selection, deltaY, items })\n\n  if (!dragInsideAction || dragInsideAction.offset === 0) {\n    return {\n      operations: undefined,\n      updatedSelection: undefined,\n      offset: 0\n    }\n  }\n\n  const operations = moveInsideParent(json, selection, dragInsideAction)\n\n  const path = initial(getStartPath(json, selection))\n  const value = getIn(json, path)\n  if (Array.isArray(value)) {\n    const updatedSelection = createUpdatedArraySelection({\n      items,\n      json,\n      selection,\n      offset: dragInsideAction.offset\n    })\n\n    return {\n      operations,\n      updatedSelection,\n      offset: dragInsideAction.offset\n    }\n  } else {\n    // object\n    return {\n      operations,\n      updatedSelection: undefined,\n      offset: dragInsideAction.offset\n    }\n  }\n}\n\nfunction findSwapPathUp({\n  json,\n  items,\n  selection,\n  deltaY\n}: DragInsideProps): DragInsideAction | undefined {\n  const initialPath = getStartPath(json, selection)\n  const initialIndex = items.findIndex((item) => isEqual(item.path, initialPath))\n\n  const prevHeight = () => items[index - 1]?.height\n\n  let index = initialIndex\n  let cumulativeHeight = 0\n\n  while (prevHeight() !== undefined && Math.abs(deltaY) > cumulativeHeight + prevHeight() / 2) {\n    cumulativeHeight += prevHeight()\n    index -= 1\n  }\n\n  const beforePath = items[index].path\n  const offset = index - initialIndex\n\n  return index !== initialIndex && items[index] !== undefined ? { beforePath, offset } : undefined\n}\n\nfunction findSwapPathDown({\n  json,\n  items,\n  selection,\n  deltaY\n}: DragInsideProps): DragInsideAction | undefined {\n  const initialPath = getEndPath(json, selection)\n  const initialIndex = items.findIndex((item) => isEqual(item.path, initialPath))\n\n  let cumulativeHeight = 0\n  let index = initialIndex\n\n  const nextHeight = () => items[index + 1]?.height\n\n  while (nextHeight() !== undefined && Math.abs(deltaY) > cumulativeHeight + nextHeight() / 2) {\n    cumulativeHeight += nextHeight()\n    index += 1\n  }\n\n  const parentPath = initial(initialPath)\n  const parent = getIn(json, parentPath)\n  const isArray = Array.isArray(parent)\n  const beforeIndex = isArray ? index : index + 1\n  const beforePath = items[beforeIndex]?.path\n  const offset = index - initialIndex\n\n  return beforePath ? { beforePath, offset } : { append: true, offset }\n}\n\ninterface UpdatedArraySelectionProps {\n  items: RenderedItem[]\n  json: unknown\n  selection: JSONSelection\n  offset: number\n}\n\nfunction createUpdatedArraySelection({\n  items,\n  json,\n  selection,\n  offset\n}: UpdatedArraySelectionProps): MultiSelection {\n  const startPath = getStartPath(json, selection)\n  const endPath = getEndPath(json, selection)\n\n  const startIndex = items.findIndex((item) => isEqual(item.path, startPath))\n  const endIndex = items.findIndex((item) => isEqual(item.path, endPath))\n\n  const anchorPath = items[startIndex + offset]?.path\n  const focusPath = items[endIndex + offset]?.path\n\n  return createMultiSelection(anchorPath, focusPath)\n}\n","<script lang=\"ts\">\n  import { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n  import Icon from 'svelte-awesome'\n  import { getContext } from 'svelte'\n  import { tooltip } from '../../controls/tooltip/tooltip.js'\n  import type { AbsolutePopupContext, NestedValidationError, ValidationError } from '$lib/types.js'\n  import { isNestedValidationError } from '$lib/typeguards.js'\n\n  const absolutePopupContext = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let validationError: NestedValidationError | ValidationError\n  export let onExpand: (event: MouseEvent) => void\n\n  $: text =\n    isNestedValidationError(validationError) && validationError.isChildError\n      ? 'Contains invalid data'\n      : validationError.message\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-validation-{validationError.severity}\"\n  on:click={onExpand}\n  use:tooltip={{ text, ...absolutePopupContext }}\n>\n  <Icon data={faExclamationTriangle} />\n</button>\n\n<style src=\"./ValidationErrorIcon.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons'\n  import type { JSONPath, JSONPointer } from 'immutable-json-patch'\n  import { appendToJSONPointer, parseJSONPointer } from 'immutable-json-patch'\n  import { initial, isEqual, last, range } from 'lodash-es'\n  import Icon from 'svelte-awesome'\n  import {\n    DEFAULT_VISIBLE_SECTIONS,\n    HOVER_COLLECTION,\n    HOVER_INSERT_AFTER,\n    HOVER_INSERT_INSIDE,\n    INSERT_EXPLANATION\n  } from '$lib/constants.js'\n  import { getEnforceString, getVisibleCaretPositions } from '$lib/logic/documentState.js'\n  import { rename } from '$lib/logic/operations.js'\n  import {\n    createAfterSelection,\n    createInsideSelection,\n    createMultiSelection,\n    fromCaretPosition,\n    fromSelectionType,\n    getAnchorPath,\n    getEndPath,\n    getFocusPath,\n    getSelectionPaths,\n    getStartPath,\n    isAfterSelection,\n    isEditingSelection,\n    isInsideSelection,\n    isKeySelection,\n    isMultiSelection,\n    isValueSelection,\n    pathInSelection,\n    selectionIfOverlapping\n  } from '$lib/logic/selection.js'\n  import {\n    getDataPathFromTarget,\n    getSelectionTypeFromTarget,\n    isChildOfAttribute,\n    isChildOfNodeName,\n    isContentEditableDiv\n  } from '$lib/utils/domUtils.js'\n  import CollapsedItems from './CollapsedItems.svelte'\n  import ContextMenuPointer from '../../../components/controls/contextmenu/ContextMenuPointer.svelte'\n  import JSONKey from './JSONKey.svelte'\n  import JSONValue from './JSONValue.svelte'\n  import { singleton } from './singleton.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { onMoveSelection } from '$lib/logic/dragging.js'\n  import { forEachIndex, moveItems } from '$lib/utils/arrayUtils.js'\n  import type {\n    AbsolutePopupOptions,\n    CaretPosition,\n    DocumentState,\n    DraggingState,\n    JSONSelection,\n    NestedValidationError,\n    SearchResults,\n    ValidationErrors,\n    RenderedItem,\n    TreeModeContext,\n    VisibleSection\n  } from '$lib/types'\n  import { SelectionType } from '$lib/types.js'\n  import {\n    isArrayRecursiveState,\n    isExpandableState,\n    isObjectRecursiveState\n  } from '$lib/typeguards.js'\n  import { filterKeySearchResults, filterValueSearchResults } from '$lib/logic/search.js'\n  import ValidationErrorIcon from './ValidationErrorIcon.svelte'\n  import { isObject } from '$lib/utils/typeUtils.js'\n  import { classnames } from '$lib/utils/cssUtils.js'\n  import { isCtrlKeyDown } from 'svelte-jsoneditor/utils/keyBindings'\n\n  // We pass `pointer` instead of `path` because pointer (a string) is immutable.\n  // Without it, *all* nodes would re-render on *every* change in JSON or DocumentState,\n  // because the path changes every time by re-creating it.\n  export let pointer: JSONPointer\n  export let value: unknown\n  export let state: DocumentState | undefined\n  export let validationErrors: ValidationErrors | undefined\n  export let searchResults: SearchResults | undefined\n  export let selection: JSONSelection | undefined\n  export let context: TreeModeContext\n  export let onDragSelectionStart: (\n    event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }\n  ) => void\n\n  const debug = createDebug('jsoneditor:JSONNode')\n\n  let hover: string | undefined = undefined\n  let hoverTimer: number | undefined = undefined\n  let dragging: DraggingState | undefined = undefined\n\n  let path: JSONPath\n  $: path = parseJSONPointer(pointer)\n  $: dataPath = encodeURIComponent(pointer) // This is the same as encodeDataPath(path) but faster\n\n  let expanded: boolean\n  $: expanded = isExpandableState(state) ? state.expanded : false\n\n  let enforceString: boolean\n  $: enforceString = getEnforceString(value, state, [])\n\n  let visibleSections: VisibleSection[] | undefined\n  $: visibleSections = isArrayRecursiveState(state) ? state.visibleSections : undefined\n\n  let validationError: NestedValidationError | undefined\n  $: validationError = validationErrors?.validationError\n\n  let isNodeSelected: boolean\n  $: isNodeSelected = pathInSelection(context.getJson(), selection, path)\n\n  $: root = path.length === 0\n\n  /**\n   * Get sorted keys, applying dragging order\n   */\n  function getKeys(object: Record<string, unknown>, dragging: DraggingState | undefined): string[] {\n    const keys = Object.keys(object)\n\n    // reorder the keys whilst dragging\n    if (dragging && dragging.offset !== 0) {\n      return moveItems(\n        keys,\n        dragging.selectionStartIndex,\n        dragging.selectionItemsCount,\n        dragging.offset\n      )\n    }\n\n    return keys\n  }\n\n  interface ItemIndex {\n    index: number\n    gutterIndex: number\n  }\n\n  function getItems(\n    array: Array<unknown>,\n    visibleSection: VisibleSection,\n    dragging: DraggingState | undefined\n  ): ItemIndex[] {\n    const start = visibleSection.start\n    const end = Math.min(visibleSection.end, array.length)\n    const indices = range(start, end)\n\n    // reorder the items whilst dragging\n    if (dragging && dragging.offset !== 0) {\n      return moveItems(\n        indices,\n        dragging.selectionStartIndex,\n        dragging.selectionItemsCount,\n        dragging.offset\n      ).map((index, gutterIndex) => ({ index, gutterIndex }))\n    }\n\n    return indices.map((index) => ({ index, gutterIndex: index }))\n  }\n\n  function toggleExpand(event: MouseEvent) {\n    event.stopPropagation()\n\n    const recursive = isCtrlKeyDown(event)\n    context.onExpand(path, !expanded, recursive)\n  }\n\n  function handleExpand(event: MouseEvent) {\n    event.stopPropagation()\n\n    context.onExpand(path, true)\n  }\n\n  function handleUpdateKey(oldKey: string, newKey: string): string {\n    const operations = rename(path, Object.keys(value as Record<string, unknown>), oldKey, newKey)\n    context.onPatch(operations)\n\n    // It is possible that the applied key differs from newKey,\n    // to prevent duplicate keys. Here we figure out the actually applied key\n    return last(parseJSONPointer(operations[0].path)) as string\n  }\n\n  function handleMouseDown(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    // only handle when the left or right mouse button is pressed, not the middle mouse button (scroll wheel)\n    if (event.buttons !== 1 && event.buttons !== 2) {\n      return\n    }\n\n    // check if the mouse down is not happening in the key or value input fields or on a button\n    if (\n      isContentEditableDiv(event.target as HTMLElement) ||\n      (event.buttons === 1 && isChildOfNodeName(event.target as Element, 'BUTTON')) // left mouse on a button\n    ) {\n      return\n    }\n\n    event.stopPropagation()\n    event.preventDefault()\n\n    // due to event.stopPropagation here and there, the focus tracker does not receive this mouse event.\n    // make sure the editor has focus\n    context.focus()\n\n    // we attach the mousemove and mouseup event listeners to the global document,\n    // so we will not miss if the mouse events happen outside the editor\n    document.addEventListener('mousemove', handleMouseMoveGlobal, true)\n    document.addEventListener('mouseup', handleMouseUpGlobal)\n\n    const anchorType = getSelectionTypeFromTarget(event.target as Element)\n    const json = context.getJson()\n    const documentState = context.getDocumentState()\n\n    if (\n      selection &&\n      anchorType !== SelectionType.after &&\n      anchorType !== SelectionType.inside &&\n      (selection.type === anchorType || selection.type === SelectionType.multi) &&\n      pathInSelection(json, selection, path)\n    ) {\n      // when right-clicking inside the current selection, do nothing: context menu will open\n      // when left-clicking inside the current selection, do nothing: it can be the start of dragging\n      if (event.button === 0) {\n        onDragSelectionStart(event)\n      }\n\n      return\n    }\n\n    // TODO: refactor dragging, there are now two separate mechanisms handling mouse movement: with dragging.* and with singleton.*\n    singleton.selecting = true\n    singleton.selectionAnchor = path\n    singleton.selectionAnchorType = anchorType\n    singleton.selectionFocus = path\n\n    if (event.shiftKey) {\n      // Shift+Click will select multiple entries\n      const fullSelection = context.getSelection()\n      if (fullSelection) {\n        context.onSelect(createMultiSelection(getAnchorPath(fullSelection), path))\n      }\n    } else {\n      if (anchorType === SelectionType.multi) {\n        if (root && (event.target as Element).hasAttribute('data-path')) {\n          const lastCaretPosition = last(\n            getVisibleCaretPositions(value, documentState)\n          ) as CaretPosition\n          context.onSelect(fromCaretPosition(lastCaretPosition))\n        } else {\n          context.onSelect(createMultiSelection(path, path))\n        }\n      } else if (json !== undefined) {\n        context.onSelect(fromSelectionType(anchorType, path))\n      }\n    }\n  }\n\n  function handleMouseMove(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    if (singleton.selecting) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (singleton.selectionFocus === undefined) {\n        // First move event, no selection yet.\n        // Clear the default selection of the browser\n        if (window.getSelection) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          window.getSelection().empty()\n        }\n      }\n\n      const selectionType = getSelectionTypeFromTarget(event.target as Element)\n\n      if (\n        !isEqual(path, singleton.selectionFocus) ||\n        selectionType !== singleton.selectionAnchorType\n      ) {\n        singleton.selectionFocus = path\n        singleton.selectionAnchorType = selectionType // TODO: this is a bit ugly\n\n        context.onSelect(\n          createMultiSelection(\n            singleton.selectionAnchor || singleton.selectionFocus,\n            singleton.selectionFocus\n          )\n        )\n      }\n    }\n  }\n\n  function handleMouseMoveGlobal(event: MouseEvent) {\n    context.onDrag(event)\n  }\n\n  function handleMouseUpGlobal(event: Event) {\n    if (singleton.selecting) {\n      singleton.selecting = false\n\n      event.stopPropagation()\n    }\n\n    context.onDragEnd()\n\n    document.removeEventListener('mousemove', handleMouseMoveGlobal, true)\n    document.removeEventListener('mouseup', handleMouseUpGlobal)\n  }\n\n  function findContentTop() {\n    return context.findElement([])?.getBoundingClientRect()?.top || 0\n  }\n\n  function calculateDeltaY(dragging: DraggingState, event: MouseEvent) {\n    // calculate the contentOffset, this changes when scrolling\n    const contentTop = findContentTop()\n    const contentOffset = contentTop - dragging.initialContentTop\n\n    // calculate the vertical mouse movement\n    const clientOffset = event.clientY - dragging.initialClientY\n\n    return clientOffset - contentOffset\n  }\n\n  function handleDragSelectionStart(\n    event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }\n  ) {\n    if (context.readOnly || !selection) {\n      return\n    }\n\n    const selectionParentPath = initial(getFocusPath(selection))\n    if (!isEqual(path, selectionParentPath)) {\n      // pass to parent\n      onDragSelectionStart(event)\n\n      return\n    }\n\n    // note that the returned items will be of one section only,\n    // and when the selection is spread over multiple sections,\n    // no items will be returned: this is not (yet) supported\n    const items = getVisibleItemsWithHeights(selection, visibleSections || DEFAULT_VISIBLE_SECTIONS)\n\n    debug('dragSelectionStart', { selection, items })\n\n    if (!items) {\n      debug('Cannot drag the current selection (probably spread over multiple sections)')\n      return\n    }\n\n    const json = context.getJson()\n    if (json === undefined) {\n      return\n    }\n    const initialPath = getStartPath(json, selection)\n    const selectionStartIndex = items.findIndex((item) => isEqual(item.path, initialPath))\n    const { offset } = onMoveSelection({\n      json,\n      selection: context.getSelection(),\n      deltaY: 0,\n      items\n    })\n\n    dragging = {\n      initialTarget: event.target as Element,\n      initialClientY: event.clientY,\n      initialContentTop: findContentTop(),\n      selectionStartIndex,\n      selectionItemsCount: getSelectionPaths(json, selection).length,\n      items,\n      offset,\n      didMoveItems: false // whether items have been moved during dragging or not\n    }\n    singleton.dragging = true\n\n    document.addEventListener('mousemove', handleDragSelection, true)\n    document.addEventListener('mouseup', handleDragSelectionEnd)\n  }\n\n  function handleDragSelection(event: MouseEvent) {\n    if (dragging) {\n      const json = context.getJson()\n      if (json === undefined) {\n        return\n      }\n\n      const deltaY = calculateDeltaY(dragging, event)\n      const { offset } = onMoveSelection({\n        json,\n        selection: context.getSelection(),\n        deltaY,\n        items: dragging.items\n      })\n\n      if (offset !== dragging.offset) {\n        debug('drag selection', offset, deltaY)\n\n        dragging = {\n          ...dragging,\n          offset,\n          didMoveItems: true\n        }\n      }\n    }\n  }\n\n  function handleDragSelectionEnd(event: MouseEvent) {\n    if (dragging) {\n      const json = context.getJson()\n      if (json === undefined) {\n        return\n      }\n      const deltaY = calculateDeltaY(dragging, event)\n      const { operations, updatedSelection } = onMoveSelection({\n        json,\n        selection: context.getSelection(),\n        deltaY,\n        items: dragging.items\n      })\n\n      if (operations) {\n        context.onPatch(operations, (_, patchedState) => ({\n          state: patchedState,\n          selection: updatedSelection ?? selection\n        }))\n      } else {\n        // the user did click inside the selection and no contents have been dragged,\n        // select the clicked item\n        if (event.target === dragging.initialTarget && !dragging.didMoveItems) {\n          const selectionType = getSelectionTypeFromTarget(event.target as Element)\n          const path = getDataPathFromTarget(event.target as Element)\n          if (path) {\n            context.onSelect(fromSelectionType(selectionType, path))\n          }\n        }\n      }\n\n      dragging = undefined\n      singleton.dragging = false\n\n      document.removeEventListener('mousemove', handleDragSelection, true)\n      document.removeEventListener('mouseup', handleDragSelectionEnd)\n    }\n  }\n\n  /**\n   * Get a list with all visible items and their rendered heights inside\n   * this object or array\n   */\n  // TODO: extract and unit test getVisibleItemsWithHeights\n  function getVisibleItemsWithHeights(\n    selection: JSONSelection,\n    visibleSections: VisibleSection[]\n  ): RenderedItem[] | undefined {\n    const items: RenderedItem[] = []\n\n    function addHeight(prop: string) {\n      const itemPath = path.concat(prop)\n      const element = context.findElement(itemPath)\n      if (element !== undefined) {\n        items.push({\n          path: itemPath,\n          height: element.clientHeight\n        })\n      }\n    }\n\n    if (Array.isArray(value)) {\n      const json = context.getJson()\n      if (json === undefined) {\n        return undefined\n      }\n      const startPath = getStartPath(json, selection)\n      const endPath = getEndPath(json, selection)\n      const startIndex = parseInt(last(startPath) as string, 10)\n      const endIndex = parseInt(last(endPath) as string, 10)\n\n      // find the section where the selection is\n      // if the selection is spread over multiple visible sections,\n      // we will not return any items, so dragging will not work there.\n      // We do this to keep things simple for now.\n      const currentSection = visibleSections.find((visibleSection) => {\n        return startIndex >= visibleSection.start && endIndex <= visibleSection.end\n      })\n\n      if (!currentSection) {\n        return undefined\n      }\n\n      const { start, end } = currentSection\n      forEachIndex(start, Math.min(value.length, end), (index) => addHeight(String(index)))\n    } else {\n      // value is Object\n      Object.keys(value as Record<string, unknown>).forEach(addHeight)\n    }\n\n    return items\n  }\n\n  function handleMouseOver(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    if (singleton.selecting || singleton.dragging) {\n      return\n    }\n\n    event.stopPropagation()\n\n    if (isChildOfAttribute(event.target as Element, 'data-type', 'selectable-value')) {\n      hover = HOVER_COLLECTION\n    } else if (isChildOfAttribute(event.target as Element, 'data-type', 'selectable-key')) {\n      hover = undefined\n    } else if (\n      isChildOfAttribute(event.target as Element, 'data-type', 'insert-selection-area-inside')\n    ) {\n      hover = HOVER_INSERT_INSIDE\n    } else if (\n      isChildOfAttribute(event.target as Element, 'data-type', 'insert-selection-area-after')\n    ) {\n      hover = HOVER_INSERT_AFTER\n    }\n\n    clearTimeout(hoverTimer)\n  }\n\n  function handleMouseOut(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    event.stopPropagation()\n\n    // to prevent \"flickering\" in the hovering state when hovering on the edge\n    // of the insert area context menu button: it's visibility toggles when\n    // `hover` toggles, which will alternating mouseout and mouseover events\n    hoverTimer = window.setTimeout(() => (hover = undefined))\n  }\n\n  function handleInsertInside(event: MouseEvent) {\n    if (!event.shiftKey) {\n      event.stopPropagation()\n      event.preventDefault()\n\n      context.onSelect(createInsideSelection(path))\n    }\n  }\n\n  function handleInsertAfter(event: MouseEvent) {\n    if (!event.shiftKey) {\n      event.stopPropagation()\n      event.preventDefault()\n\n      context.onSelect(createAfterSelection(path))\n    }\n  }\n\n  function handleInsertInsideOpenContextMenu(contextMenuProps: AbsolutePopupOptions) {\n    context.onSelect(createInsideSelection(path))\n    context.onContextMenu(contextMenuProps)\n  }\n\n  function handleInsertAfterOpenContextMenu(contextMenuProps: AbsolutePopupOptions) {\n    context.onSelect(createAfterSelection(path))\n    context.onContextMenu(contextMenuProps)\n  }\n</script>\n\n<div\n  role=\"treeitem\"\n  tabindex=\"-1\"\n  class={classnames(\n    'jse-json-node',\n    { 'jse-expanded': expanded },\n    context.onClassName(path, value)\n  )}\n  data-path={dataPath}\n  aria-selected={isNodeSelected}\n  style:--level={path.length}\n  class:jse-root={root}\n  class:jse-selected={isNodeSelected && isMultiSelection(selection)}\n  class:jse-selected-value={isNodeSelected && isValueSelection(selection)}\n  class:jse-readonly={context.readOnly}\n  class:jse-hovered={hover === HOVER_COLLECTION}\n  on:mousedown={handleMouseDown}\n  on:mousemove={handleMouseMove}\n  on:mouseover={handleMouseOver}\n  on:mouseout={handleMouseOut}\n  on:focus={undefined}\n  on:blur={undefined}\n>\n  {#if Array.isArray(value)}\n    <div class=\"jse-header-outer\">\n      <div class=\"jse-header\">\n        <button\n          type=\"button\"\n          class=\"jse-expand\"\n          on:click={toggleExpand}\n          title=\"Expand or collapse this array (Ctrl+Click to expand/collapse recursively)\"\n        >\n          {#if expanded}\n            <Icon data={faCaretDown} />\n          {:else}\n            <Icon data={faCaretRight} />\n          {/if}\n        </button>\n        <slot name=\"identifier\" />\n        {#if !root}\n          <div class=\"jse-separator\">:</div>\n        {/if}\n        <div class=\"jse-meta\">\n          <div class=\"jse-meta-inner\" data-type=\"selectable-value\">\n            {#if expanded}\n              <div class=\"jse-bracket\">[</div>\n              <span class=\"jse-tag jse-expanded\">\n                {value.length}\n                {value.length === 1 ? 'item' : 'items'}\n              </span>\n              &nbsp;\n            {:else}\n              <div class=\"jse-bracket\">[</div>\n              <button type=\"button\" class=\"jse-tag\" on:click={handleExpand}>\n                {value.length}\n                {value.length === 1 ? 'item' : 'items'}\n              </button>\n              <div class=\"jse-bracket\">]</div>\n            {/if}\n          </div>\n        </div>\n        {#if !context.readOnly && isNodeSelected && selection && (isValueSelection(selection) || isMultiSelection(selection)) && !isEditingSelection(selection) && isEqual(getFocusPath(selection), path)}\n          <div class=\"jse-context-menu-pointer-anchor\">\n            <ContextMenuPointer {root} selected={true} onContextMenu={context.onContextMenu} />\n          </div>\n        {/if}\n      </div>\n      {#if validationError && (!expanded || !validationError.isChildError)}\n        <ValidationErrorIcon {validationError} onExpand={handleExpand} />\n      {/if}\n      {#if expanded}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-inside\"\n          data-type=\"insert-selection-area-inside\"\n          on:click={handleInsertInside}\n        />\n      {:else}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-after\"\n          data-type=\"insert-selection-area-after\"\n          on:click={handleInsertAfter}\n        />\n      {/if}\n    </div>\n    {#if expanded}\n      <div class=\"jse-items\">\n        {#if !context.readOnly && (hover === HOVER_INSERT_INSIDE || (isNodeSelected && isInsideSelection(selection)))}\n          <div\n            class=\"jse-insert-area jse-inside\"\n            class:jse-hovered={hover === HOVER_INSERT_INSIDE}\n            class:jse-selected={isNodeSelected && isInsideSelection(selection)}\n            data-type=\"insert-selection-area-inside\"\n            style:--level={path.length + 1}\n            title={INSERT_EXPLANATION}\n          >\n            <ContextMenuPointer\n              insert={true}\n              selected={isNodeSelected && isInsideSelection(selection)}\n              onContextMenu={handleInsertInsideOpenContextMenu}\n            />\n          </div>\n        {/if}\n        {#each visibleSections || DEFAULT_VISIBLE_SECTIONS as visibleSection, sectionIndex (sectionIndex)}\n          {#each getItems(value, visibleSection, dragging) as item (item.index)}\n            {@const nestedValidationErrors = isArrayRecursiveState(validationErrors)\n              ? validationErrors.items[item.index]\n              : undefined}\n\n            {@const nestedSelection = selectionIfOverlapping(\n              context.getJson(),\n              selection,\n              path.concat(String(item.index))\n            )}\n\n            <svelte:self\n              value={value[item.index]}\n              pointer={appendToJSONPointer(pointer, item.index)}\n              state={isArrayRecursiveState(state) ? state.items[item.index] : undefined}\n              validationErrors={nestedValidationErrors}\n              searchResults={isArrayRecursiveState(searchResults)\n                ? searchResults.items[item.index]\n                : undefined}\n              selection={nestedSelection}\n              {context}\n              onDragSelectionStart={handleDragSelectionStart}\n            >\n              <div slot=\"identifier\" class=\"jse-identifier\">\n                <div class=\"jse-index\">{item.gutterIndex}</div>\n              </div>\n            </svelte:self>\n          {/each}\n          {#if visibleSection.end < value.length}\n            <CollapsedItems\n              visibleSections={visibleSections || DEFAULT_VISIBLE_SECTIONS}\n              {sectionIndex}\n              total={value.length}\n              {path}\n              onExpandSection={context.onExpandSection}\n              {selection}\n              {context}\n            />\n          {/if}\n        {/each}\n      </div>\n      <div class=\"jse-footer-outer\">\n        <div data-type=\"selectable-value\" class=\"jse-footer\">\n          <span class=\"jse-bracket\">]</span>\n        </div>\n        {#if !root}\n          <div\n            role=\"none\"\n            class=\"jse-insert-selection-area jse-after\"\n            data-type=\"insert-selection-area-after\"\n            on:click={handleInsertAfter}\n          />\n        {/if}\n      </div>\n    {/if}\n  {:else if isObject(value)}\n    <div class=\"jse-header-outer\">\n      <div class=\"jse-header\">\n        <button\n          type=\"button\"\n          class=\"jse-expand\"\n          on:click={toggleExpand}\n          title=\"Expand or collapse this object (Ctrl+Click to expand/collapse recursively)\"\n        >\n          {#if expanded}\n            <Icon data={faCaretDown} />\n          {:else}\n            <Icon data={faCaretRight} />\n          {/if}\n        </button>\n        <slot name=\"identifier\" />\n        {#if !root}\n          <div class=\"jse-separator\">:</div>\n        {/if}\n        <div class=\"jse-meta\" data-type=\"selectable-value\">\n          <div class=\"jse-meta-inner\">\n            {#if expanded}\n              <div class=\"jse-bracket jse-expanded\">&lbrace;</div>\n            {:else}\n              <div class=\"jse-bracket\">&lbrace;</div>\n              <button type=\"button\" class=\"jse-tag\" on:click={handleExpand}>\n                {Object.keys(value).length}\n                {Object.keys(value).length === 1 ? 'prop' : 'props'}\n              </button>\n              <div class=\"jse-bracket\">&rbrace;</div>\n            {/if}\n          </div>\n        </div>\n        {#if !context.readOnly && isNodeSelected && selection && (isValueSelection(selection) || isMultiSelection(selection)) && !isEditingSelection(selection) && isEqual(getFocusPath(selection), path)}\n          <div class=\"jse-context-menu-pointer-anchor\">\n            <ContextMenuPointer {root} selected={true} onContextMenu={context.onContextMenu} />\n          </div>\n        {/if}\n      </div>\n      {#if validationError && (!expanded || !validationError.isChildError)}\n        <ValidationErrorIcon {validationError} onExpand={handleExpand} />\n      {/if}\n      {#if expanded}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-inside\"\n          data-type=\"insert-selection-area-inside\"\n          on:click={handleInsertInside}\n        />\n      {:else if !root}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-after\"\n          data-type=\"insert-selection-area-after\"\n          on:click={handleInsertAfter}\n        />\n      {/if}\n    </div>\n    {#if expanded}\n      <div class=\"jse-props\">\n        {#if !context.readOnly && (hover === HOVER_INSERT_INSIDE || (isNodeSelected && isInsideSelection(selection)))}\n          <div\n            class=\"jse-insert-area jse-inside\"\n            class:jse-hovered={hover === HOVER_INSERT_INSIDE}\n            class:jse-selected={isNodeSelected && isInsideSelection(selection)}\n            data-type=\"insert-selection-area-inside\"\n            style:--level={path.length + 1}\n            title={INSERT_EXPLANATION}\n          >\n            <ContextMenuPointer\n              insert={true}\n              selected={isNodeSelected && isInsideSelection(selection)}\n              onContextMenu={handleInsertInsideOpenContextMenu}\n            />\n          </div>\n        {/if}\n        {#each getKeys(value, dragging) as key}\n          {@const propPointer = appendToJSONPointer(pointer, key)}\n\n          {@const nestedSearchResults = isObjectRecursiveState(searchResults)\n            ? searchResults.properties[key]\n            : undefined}\n\n          {@const nestedValidationErrors = isObjectRecursiveState(validationErrors)\n            ? validationErrors.properties[key]\n            : undefined}\n\n          {@const nestedPath = path.concat(key)}\n\n          {@const nestedSelection = selectionIfOverlapping(\n            context.getJson(),\n            selection,\n            nestedPath\n          )}\n\n          <svelte:self\n            value={value[key]}\n            pointer={propPointer}\n            state={isObjectRecursiveState(state) ? state.properties[key] : undefined}\n            validationErrors={nestedValidationErrors}\n            searchResults={nestedSearchResults}\n            selection={nestedSelection}\n            {context}\n            onDragSelectionStart={handleDragSelectionStart}\n          >\n            <div\n              slot=\"identifier\"\n              class=\"jse-key-outer\"\n              class:jse-selected-key={isKeySelection(nestedSelection) &&\n                isEqual(nestedSelection.path, nestedPath)}\n            >\n              <JSONKey\n                pointer={propPointer}\n                {key}\n                selection={nestedSelection}\n                searchResultItems={filterKeySearchResults(nestedSearchResults)}\n                {context}\n                onUpdateKey={handleUpdateKey}\n              />\n            </div>\n          </svelte:self>\n        {/each}\n      </div>\n      <div class=\"jse-footer-outer\">\n        <div data-type=\"selectable-value\" class=\"jse-footer\">\n          <div class=\"jse-bracket\">&rbrace;</div>\n        </div>\n        {#if !root}\n          <div\n            role=\"none\"\n            class=\"jse-insert-selection-area jse-after\"\n            data-type=\"insert-selection-area-after\"\n            on:click={handleInsertAfter}\n          />\n        {/if}\n      </div>\n    {/if}\n  {:else}\n    <div class=\"jse-contents-outer\">\n      <div class=\"jse-contents\">\n        <slot name=\"identifier\" />\n        {#if !root}\n          <div class=\"jse-separator\">:</div>\n        {/if}\n        <div class=\"jse-value-outer\">\n          <JSONValue\n            {path}\n            {value}\n            {enforceString}\n            selection={isNodeSelected ? selection : undefined}\n            searchResultItems={filterValueSearchResults(searchResults)}\n            {context}\n          />\n        </div>\n        {#if !context.readOnly && isNodeSelected && selection && (isValueSelection(selection) || isMultiSelection(selection)) && !isEditingSelection(selection) && isEqual(getFocusPath(selection), path)}\n          <div class=\"jse-context-menu-pointer-anchor\">\n            <ContextMenuPointer {root} selected={true} onContextMenu={context.onContextMenu} />\n          </div>\n        {/if}\n      </div>\n      {#if validationError}\n        <ValidationErrorIcon {validationError} onExpand={handleExpand} />\n      {/if}\n      {#if !root}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-after\"\n          data-type=\"insert-selection-area-after\"\n          on:click={handleInsertAfter}\n        />\n      {/if}\n    </div>\n  {/if}\n  {#if !context.readOnly && (hover === HOVER_INSERT_AFTER || (isNodeSelected && isAfterSelection(selection)))}\n    <div\n      class=\"jse-insert-area jse-after\"\n      class:jse-hovered={hover === HOVER_INSERT_AFTER}\n      class:jse-selected={isNodeSelected && isAfterSelection(selection)}\n      data-type=\"insert-selection-area-after\"\n      title={INSERT_EXPLANATION}\n    >\n      <ContextMenuPointer\n        insert={true}\n        selected={isNodeSelected && isAfterSelection(selection)}\n        onContextMenu={handleInsertAfterOpenContextMenu}\n      />\n    </div>\n  {/if}\n</div>\n\n<style src=\"./JSONNode.scss\"></style>\n","import type { IconDefinition } from '@fortawesome/free-solid-svg-icons'\nimport type { IconName } from '@fortawesome/fontawesome-common-types'\n\nexport const faJSONEditorExpand: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-expand' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'M 0,448 V 512 h 512 v -64 z ' +\n      'M 0,0 V 64 H 512 V 0 Z ' +\n      'M 256,96 128,224 h 256 z ' +\n      'M 256,416 384,288 H 128 Z'\n  ]\n}\n\nexport const faJSONEditorCollapse: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-collapse' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'm 0,224 v 64 h 512 v -64 z ' + 'M 256,192 384,64 H 128 Z ' + 'M 256,320 128,448 h 256 z'\n  ]\n}\n\nexport const faJSONEditorFormat: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-format' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'M 0,32 v 64 h 416 v -64 z ' +\n      'M 160,160 v 64 h 352 v -64 z ' +\n      'M 160,288 v 64 h 288 v -64 z ' +\n      'M 0,416 v 64 h 320 v -64 z'\n  ]\n}\n\nexport const faJSONEditorCompact: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-compact' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'M 0,32 v 64 h 512 v -64 z ' + 'M 0,160 v 64 h 512 v -64 z ' + 'M 0,288 v 64 h 352 v -64 z'\n  ]\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faCopy,\n    faEllipsisV,\n    faFilter,\n    faRedo,\n    faSearch,\n    faSortAmountDownAlt,\n    faUndo\n  } from '@fortawesome/free-solid-svg-icons'\n  import { CONTEXT_MENU_EXPLANATION } from '$lib/constants.js'\n  import { faJSONEditorCollapse, faJSONEditorExpand } from '$lib/img/customFontawesomeIcons.js'\n  import { isObjectOrArray } from '$lib/utils/typeUtils.js'\n  import Menu from '../../../controls/Menu.svelte'\n  import type { JSONSelection, MenuItem, OnRenderMenuInternal } from '$lib/types'\n  import { isKeySelection, isMultiSelection, isValueSelection } from '$lib/logic/selection.js'\n  import type { HistoryState } from '$lib/logic/history.js'\n\n  export let json: unknown\n  export let selection: JSONSelection | undefined\n\n  export let readOnly: boolean\n  export let showSearch = false\n  export let historyState: HistoryState\n\n  export let onExpandAll: () => void\n  export let onCollapseAll: () => void\n  export let onUndo: () => void\n  export let onRedo: () => void\n  export let onSort: () => void\n  export let onTransform: () => void\n  export let onContextMenu: (event: MouseEvent) => void\n  export let onCopy: () => void\n  export let onRenderMenu: OnRenderMenuInternal\n\n  function handleToggleSearch() {\n    showSearch = !showSearch\n  }\n\n  $: hasJson = json !== undefined\n  $: hasSelectionContents =\n    hasJson &&\n    (isMultiSelection(selection) || isKeySelection(selection) || isValueSelection(selection))\n\n  let expandMenuItem: MenuItem\n  $: expandMenuItem = {\n    type: 'button',\n    icon: faJSONEditorExpand,\n    title: 'Expand all',\n    className: 'jse-expand-all',\n    onClick: onExpandAll,\n    disabled: !isObjectOrArray(json)\n  }\n\n  let collapseMenuItem: MenuItem\n  $: collapseMenuItem = {\n    type: 'button',\n    icon: faJSONEditorCollapse,\n    title: 'Collapse all',\n    className: 'jse-collapse-all',\n    onClick: onCollapseAll,\n    disabled: !isObjectOrArray(json)\n  }\n\n  let searchMenuItem: MenuItem\n  $: searchMenuItem = {\n    type: 'button',\n    icon: faSearch,\n    title: 'Search (Ctrl+F)',\n    className: 'jse-search',\n    onClick: handleToggleSearch,\n    disabled: json === undefined\n  }\n\n  let defaultItems: MenuItem[]\n  $: defaultItems = !readOnly\n    ? [\n        expandMenuItem,\n        collapseMenuItem,\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faSortAmountDownAlt,\n          title: 'Sort',\n          className: 'jse-sort',\n          onClick: onSort,\n          disabled: readOnly || json === undefined\n        },\n        {\n          type: 'button',\n          icon: faFilter,\n          title: 'Transform contents (filter, sort, project)',\n          className: 'jse-transform',\n          onClick: onTransform,\n          disabled: readOnly || json === undefined\n        },\n        searchMenuItem,\n        {\n          type: 'button',\n          icon: faEllipsisV,\n          title: CONTEXT_MENU_EXPLANATION,\n          className: 'jse-contextmenu',\n          onClick: onContextMenu\n        },\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faUndo,\n          title: 'Undo (Ctrl+Z)',\n          className: 'jse-undo',\n          onClick: onUndo,\n          disabled: !historyState.canUndo\n        },\n        {\n          type: 'button',\n          icon: faRedo,\n          title: 'Redo (Ctrl+Shift+Z)',\n          className: 'jse-redo',\n          onClick: onRedo,\n          disabled: !historyState.canRedo\n        },\n        {\n          type: 'space'\n        }\n      ]\n    : [\n        expandMenuItem,\n        collapseMenuItem,\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faCopy,\n          title: 'Copy (Ctrl+C)',\n          className: 'jse-copy',\n          onClick: onCopy,\n          disabled: !hasSelectionContents\n        },\n        {\n          type: 'separator'\n        },\n        searchMenuItem,\n        {\n          type: 'space'\n        }\n      ]\n\n  $: items = onRenderMenu(defaultItems) || defaultItems\n</script>\n\n<Menu {items} />\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  export let readOnly: boolean\n  export let onCreateArray: () => void\n  export let onCreateObject: () => void\n  export let onClick: () => void\n</script>\n\n<div class=\"jse-welcome\" on:click={() => onClick()} role=\"none\">\n  <div class=\"jse-space jse-before\" />\n  <div class=\"jse-contents\">\n    <div class=\"jse-welcome-title\">Empty document</div>\n    {#if !readOnly}\n      <div class=\"jse-welcome-info\">\n        You can paste clipboard data using <b>Ctrl+V</b>, or use the following options:\n      </div>\n      <button\n        title={\"Create an empty JSON object (press '{')\"}\n        on:click|stopPropagation={() => onCreateObject()}>Create object</button\n      >\n      <button\n        title={\"Create an empty JSON array (press '[')\"}\n        on:click|stopPropagation={() => onCreateArray()}>Create array</button\n      >\n    {/if}\n  </div>\n  <div class=\"jse-space jse-after\" />\n</div>\n\n<style src=\"./Welcome.scss\"></style>\n","import diffSequence from '../generated/diffSequence.js'\nimport type { JSONPatchDocument, JSONPatchOperation, JSONPath } from 'immutable-json-patch'\nimport {\n  compileJSONPointer,\n  getIn,\n  isJSONArray,\n  isJSONPatchCopy,\n  isJSONPatchMove,\n  parseFrom,\n  parsePath,\n  setIn\n} from 'immutable-json-patch'\nimport { first, initial, isEmpty, isEqual, last } from 'lodash-es'\nimport naturalCompare from 'natural-compare-lite'\nimport { int } from '../utils/numberUtils.js'\nimport { isObject } from '../utils/typeUtils.js'\n\nexport function caseInsensitiveNaturalCompare(a: unknown, b: unknown) {\n  const aLower = typeof a === 'string' ? a.toLowerCase() : a\n  const bLower = typeof b === 'string' ? b.toLowerCase() : b\n\n  return naturalCompare(aLower, bLower)\n}\n\n/**\n * Sort a JSON object or array\n * @param json           The the JSON containing the (optionally nested)\n *                       object to be sorted\n * @param [rootPath=[]]  Relative path when the array was located\n * @param [itemPath=[]]  Item path by which to sort items in case of an array\n * @param [direction=1]  Pass 1 to sort ascending, -1 to sort descending\n * @return               Returns a JSONPatch document with move operation\n *                       to get the array sorted.\n */\nexport function sortJson(\n  json: unknown,\n  rootPath: JSONPath = [],\n  itemPath: JSONPath = [],\n  direction: 1 | -1 = 1\n): JSONPatchDocument {\n  if (isJSONArray(getIn(json, rootPath))) {\n    if (itemPath === undefined) {\n      throw new Error('Cannot sort: no property selected by which to sort the array')\n    }\n\n    return sortArray(json, rootPath, itemPath, direction)\n  }\n\n  if (isObject(json)) {\n    return sortObjectKeys(json, rootPath, direction)\n  }\n\n  throw new Error('Cannot sort: no array or object')\n}\n\n/**\n * Sort the keys of an object\n * @param json           The the JSON containing the (optionally nested)\n *                       object to be sorted\n * @param [rootPath=[]]  Relative path when the array was located\n * @param [direction=1]  Pass 1 to sort ascending, -1 to sort descending\n * @return               Returns a JSONPatch document with move operation\n *                       to get the array sorted.\n */\nexport function sortObjectKeys(\n  json: unknown,\n  rootPath: JSONPath = [],\n  direction: 1 | -1 = 1\n): JSONPatchDocument {\n  const object = getIn(json, rootPath)\n  const keys = Object.keys(object as unknown as Record<string, unknown>)\n  const sortedKeys = keys.slice()\n\n  sortedKeys.sort((keyA, keyB) => {\n    return direction * caseInsensitiveNaturalCompare(keyA, keyB)\n  })\n\n  // TODO: can we make this more efficient? check if the first couple of keys are already in order and if so ignore them\n  const operations: JSONPatchDocument = []\n  for (let i = 0; i < sortedKeys.length; i++) {\n    const key = sortedKeys[i]\n    const path = compileJSONPointer(rootPath.concat(key))\n    operations.push({\n      op: 'move',\n      from: path,\n      path\n    })\n  }\n\n  return operations\n}\n\n/**\n * Sort the items of an array\n * @param json               The document containing (optionally nested)\n *                           the array to be sorted.\n * @param [rootPath=[]]      Relative path when the array was located\n * @param [propertyPath=[]]  Nested path to the property on which to sort the contents\n * @param [direction=1]      Pass 1 to sort ascending, -1 to sort descending\n * @return                   Returns a JSONPatch document with move operation\n *                           to get the array sorted.\n */\nexport function sortArray(\n  json: unknown,\n  rootPath: JSONPath = [],\n  propertyPath: JSONPath = [],\n  direction: 1 | -1 = 1\n): JSONPatchDocument {\n  const comparator = createObjectComparator(propertyPath, direction)\n\n  // TODO: make the mechanism to sort configurable? Like use sortOperationsMove and sortOperationsMoveAdvanced\n  const array = getIn(json, rootPath) as Array<unknown>\n  return [\n    {\n      op: 'replace',\n      path: compileJSONPointer(rootPath),\n      value: array.slice(0).sort(comparator)\n    }\n  ]\n}\n\n/**\n * Create a comparator function to compare nested properties in an array\n */\nfunction createObjectComparator(propertyPath: JSONPath, direction: 1 | -1) {\n  return function comparator(a: unknown, b: unknown) {\n    const valueA = getIn(a, propertyPath)\n    const valueB = getIn(b, propertyPath)\n\n    if (valueA === undefined) {\n      return direction\n    }\n    if (valueB === undefined) {\n      return -direction\n    }\n\n    if (typeof valueA !== 'string' && typeof valueB !== 'string') {\n      // both values are a number, boolean, or null -> use simple, fast sorting\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return valueA > valueB ? direction : valueA < valueB ? -direction : 0\n    }\n\n    return direction * caseInsensitiveNaturalCompare(valueA, valueB)\n  }\n}\n\n/**\n * Create a list with JSON Patch move operations\n * needed to sort the array contents.\n */\nexport function sortOperationsMove<T>(\n  array: T[],\n  comparator: (a: T, b: T) => number\n): JSONPatchOperation[] {\n  const operations: JSONPatchOperation[] = []\n  const sorted = []\n\n  // TODO: rewrite the function to pass a callback instead of returning an array?\n  for (let i = 0; i < array.length; i++) {\n    // TODO: can we simplify the following code?\n    const item = array[i]\n    if (i > 0 && comparator(sorted[i - 1], item) > 0) {\n      let j = i - 1\n      while (j > 0 && comparator(sorted[j - 1], item) > 0) {\n        j--\n      }\n\n      operations.push({\n        op: 'move',\n        from: '/' + i,\n        path: '/' + j\n      })\n\n      sorted.splice(j, 0, item)\n    } else {\n      sorted.push(item)\n    }\n  }\n\n  return operations\n}\n\n/**\n * Create an array containing all move operations\n * needed to sort the array contents.\n */\nexport function sortOperationsMoveAdvanced<T>(\n  array: T[],\n  comparator: (a: T, b: T) => number\n): JSONPatchOperation[] {\n  const moves: { from: number; to: number }[] = []\n\n  const sortedIndices = array\n    .map((item, index) => ({ item, index }))\n    .sort((a, b) => comparator(a.item, b.item))\n    .map((entry) => entry.index)\n\n  let bIndex = 0\n\n  function foundSubsequence(nCommon: number, aCommon: number, bCommon: number) {\n    for (let b = bIndex; b < bCommon; b++) {\n      moves.push({\n        from: sortedIndices[b],\n        to: aCommon\n      })\n    }\n\n    bIndex = bCommon + nCommon\n  }\n\n  const size = array.length\n\n  function isCommon(aIndex: number, bIndex: number) {\n    return aIndex === sortedIndices[bIndex]\n  }\n\n  diffSequence(size, size, isCommon, foundSubsequence)\n  foundSubsequence(0, size, size)\n\n  // every move will change the actual indices, so we've to adjust for that\n  // in all moves that still have to be executed\n  for (let i = 0; i < moves.length; i++) {\n    if (moves[i].to > moves[i].from) {\n      moves[i].to--\n    }\n\n    const { from, to } = moves[i]\n\n    for (let j = i + 1; j < moves.length; j++) {\n      const other = moves[j]\n      if (other.from >= from) {\n        other.from--\n      }\n      if (other.to >= from) {\n        other.to--\n      }\n      if (other.from >= to) {\n        other.from++\n      }\n      if (other.to >= to) {\n        other.to++\n      }\n    }\n  }\n\n  return moves.map(({ from, to }) => {\n    return {\n      op: 'move',\n      from: '/' + from,\n      path: '/' + to\n    }\n  })\n}\n\n/**\n * Fast solution to apply many JSON patch move operations inside a single array,\n * like applying all moves needed to sort an array.\n *\n * Throws an error when not all operations are move operation inside the same\n * array.\n */\n// TODO: write unit tests\nexport function fastPatchSort(json: unknown, operations: JSONPatchDocument): unknown {\n  if (isEmpty(operations)) {\n    // nothing to do :)\n    return json\n  }\n\n  // validate whether all operations are \"move\" operations\n  const invalidOp = operations.find((operation) => {\n    return operation.op !== 'move'\n  })\n  if (invalidOp) {\n    throw new Error(\n      'Cannot apply fastPatchSort: not a \"move\" operation ' +\n        '(actual: ' +\n        JSON.stringify(invalidOp) +\n        ')'\n    )\n  }\n\n  // parse all paths\n  const parsedOperations: Array<{ from: JSONPath | undefined; path: JSONPath }> = operations.map(\n    (operation) => ({\n      from:\n        isJSONPatchCopy(operation) || isJSONPatchMove(operation)\n          ? parseFrom(operation.from)\n          : undefined,\n      path: parsePath(json, operation.path)\n    })\n  )\n\n  // validate whether the move actions take place in an array\n  const arrayPath = initial(first(parsedOperations)?.path)\n  const array = getIn(json, arrayPath)\n  if (!Array.isArray(array)) {\n    throw new Error(\n      'Cannot apply fastPatchSort: not an Array ' + '(path: ' + JSON.stringify(arrayPath) + ')'\n    )\n  }\n\n  // validate whether all paths are in the same array\n  const invalidPath = parsedOperations.find((parsedOperation) => {\n    return (\n      !isEqual(arrayPath, initial(parsedOperation.path)) ||\n      !isEqual(arrayPath, initial(parsedOperation.from))\n    )\n  })\n  if (invalidPath) {\n    throw new Error(\n      'Cannot apply fastPatchSort: not all move operations are in the same array ' +\n        '(expected: ' +\n        JSON.stringify(arrayPath) +\n        ', actual: ' +\n        JSON.stringify(invalidPath) +\n        ')'\n    )\n  }\n\n  // apply the actual operations on the same array. Only copy the only array once\n  const updatedArray = array.slice(0)\n  parsedOperations.forEach((parsedOperation) => {\n    const toIndex = int(last(parsedOperation.path) || '-1')\n    const fromIndex = int(last(parsedOperation.from) || '-1')\n\n    const value = updatedArray.splice(fromIndex, 1)[0]\n    updatedArray.splice(toIndex, 0, value)\n  })\n\n  return setIn(json, arrayPath, updatedArray)\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { limit } from '$lib/utils/arrayUtils.js'\n  import { truncate } from '$lib/utils/stringUtils.js'\n\n  export let items: (string | number)[]\n  export let selectedItem: string | number\n  export let onSelect: (item: string | number) => void\n\n  const MAX_ITEMS = 100\n  const MAX_ITEM_CHARACTERS = 30\n</script>\n\n<div class=\"jse-navigation-bar-dropdown\">\n  {#each limit(items, MAX_ITEMS) as item (item)}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-dropdown-item\"\n      class:jse-selected={item === selectedItem}\n      on:click|stopPropagation={() => onSelect(item)}\n      title={item.toString()}\n    >\n      {truncate(item.toString(), MAX_ITEM_CHARACTERS)}\n    </button>\n  {/each}\n  {#if items.length > MAX_ITEMS}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-dropdown-item\"\n      title=\"Limited to {MAX_ITEMS} items\"\n    >\n      ...\n    </button>\n  {/if}\n</div>\n\n<style src=\"./NavigationBarDropdown.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faAngleRight } from '@fortawesome/free-solid-svg-icons'\n  import NavigationBarDropdown from '../../../components/controls/navigationBar/NavigationBarDropdown.svelte'\n  import { getContext } from 'svelte'\n  import type { JSONPath } from 'immutable-json-patch'\n  import type { AbsolutePopupContext } from '$lib/types'\n\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let path: JSONPath\n  export let index: number\n  export let onSelect: (path: JSONPath) => void\n  export let getItems: (path: JSONPath) => string[]\n\n  let refNavigationBarItem: Element | undefined\n  let open = false\n  let popupId: number | undefined\n\n  $: itemPath = path.slice(0, index)\n  $: selectedItem = path[index]\n\n  function handleSelectItem(item: string) {\n    closeAbsolutePopup(popupId)\n    onSelect(itemPath.concat(item))\n  }\n\n  function openDropdown() {\n    if (refNavigationBarItem) {\n      open = true\n\n      const props = {\n        items: getItems(itemPath),\n        selectedItem,\n        onSelect: handleSelectItem\n      }\n\n      popupId = openAbsolutePopup(NavigationBarDropdown, props, {\n        anchor: refNavigationBarItem,\n        closeOnOuterClick: true,\n        onClose: () => {\n          open = false\n        }\n      })\n    }\n  }\n</script>\n\n<div class=\"jse-navigation-bar-item\" bind:this={refNavigationBarItem}>\n  <button\n    type=\"button\"\n    class=\"jse-navigation-bar-button jse-navigation-bar-arrow\"\n    class:jse-open={open}\n    on:click={openDropdown}\n  >\n    <Icon data={faAngleRight} />\n  </button>\n  {#if selectedItem !== undefined}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-button\"\n      on:click={() => handleSelectItem(selectedItem)}\n    >\n      {selectedItem}\n    </button>\n  {/if}\n</div>\n\n<style src=\"./NavigationBarItem.scss\"></style>\n","export default function copyToClipBoard(text: string): Promise<void> {\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text)\n  }\n  // Compatible with old browsers such as Chrome <=65, Edge <=18 & IE\n  // Compatible with HTTP\n  else if (document.queryCommandSupported?.('copy')) {\n    const textarea = document.createElement('textarea')\n    textarea.value = text\n\n    textarea.style.position = 'fixed' // Avoid scrolling to bottom\n    textarea.style.opacity = '0'\n\n    document.body.appendChild(textarea)\n    textarea.select()\n\n    // Security exception may be thrown by some browsers\n    try {\n      document.execCommand('copy')\n    } catch (e) {\n      console.error(e)\n    } finally {\n      document.body.removeChild(textarea)\n    }\n\n    return Promise.resolve()\n  } else {\n    console.error('Copy failed.')\n\n    return Promise.resolve()\n  }\n}\n","<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { getContext, onDestroy, onMount } from 'svelte'\n  import copyToClipBoard from '$lib/utils/copyToClipboard.js'\n  import { faCopy, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n  import Icon from 'svelte-awesome'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { tooltip } from '../../controls/tooltip/tooltip.js'\n  import type { AbsolutePopupContext, JSONPathParser, OnError } from '$lib/types.js'\n\n  const absolutePopupContext = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let path: JSONPath\n  export let pathParser: JSONPathParser\n  export let onChange: (updatedPath: JSONPath) => void\n  export let onClose: () => void\n  export let onError: OnError\n  export let pathExists: (path: JSONPath) => boolean\n\n  let inputRef: HTMLInputElement\n  let inputPath: string\n  let validationActive = false\n  $: inputPath = pathParser.stringify(path)\n  $: inputValidationError = validationActive ? parseAndValidate(inputPath).error : undefined\n\n  let copiedTimer: number | undefined = undefined\n  let copied = false\n  const copiedDelay = 1000 // ms\n\n  onMount(() => {\n    focus()\n  })\n\n  onDestroy(() => {\n    clearTimeout(copiedTimer)\n  })\n\n  function focus() {\n    inputRef.focus()\n  }\n\n  function parseAndValidate(pathStr: string): {\n    path: JSONPath | undefined\n    error: Error | undefined\n  } {\n    try {\n      const path = pathParser.parse(pathStr)\n      validatePathExists(path)\n      return {\n        path,\n        error: undefined\n      }\n    } catch (error) {\n      return {\n        path: undefined,\n        error: error as Error\n      }\n    }\n  }\n\n  function validatePathExists(path: JSONPath) {\n    if (!pathExists(path)) {\n      throw new Error('Path does not exist in current document')\n    }\n  }\n\n  function handleInput(event: Event & { currentTarget: EventTarget & HTMLInputElement }) {\n    inputPath = event.currentTarget.value\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n\n    if (combo === 'Escape') {\n      onClose()\n    }\n\n    if (combo === 'Enter') {\n      validationActive = true\n      const result = parseAndValidate(inputPath)\n      if (result.path !== undefined) {\n        onChange(result.path)\n      } else {\n        onError(result.error as Error)\n      }\n    }\n  }\n\n  function handleCopy() {\n    copyToClipBoard(inputPath)\n    copied = true\n    copiedTimer = window.setTimeout(() => (copied = false), copiedDelay)\n    focus()\n  }\n</script>\n\n<div class=\"jse-navigation-bar-path-editor\" class:error={inputValidationError}>\n  <input\n    type=\"text\"\n    class=\"jse-navigation-bar-text\"\n    value={inputPath}\n    bind:this={inputRef}\n    on:keydown|stopPropagation={handleKeyDown}\n    on:input={handleInput}\n  />\n  {#if inputValidationError}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-validation-error\"\n      use:tooltip={{\n        text: String(inputValidationError || ''),\n        ...absolutePopupContext\n      }}\n    >\n      <Icon data={faExclamationTriangle} />\n    </button>\n  {/if}\n  {#if copied}\n    <div class=\"jse-copied-text\">Copied!</div>\n  {/if}\n  <button\n    type=\"button\"\n    class=\"jse-navigation-bar-copy\"\n    class:copied\n    title=\"Copy selected path to the clipboard\"\n    on:click={handleCopy}\n  >\n    <Icon data={faCopy} />\n  </button>\n</div>\n\n<style src=\"./NavigationBarPathEditor.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { existsIn, getIn } from 'immutable-json-patch'\n  import { range } from 'lodash-es'\n  import { isObject, isObjectOrArray } from '$lib/utils/typeUtils.js'\n  import { createMultiSelection, getFocusPath } from '$lib/logic/selection.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { caseInsensitiveNaturalCompare } from '$lib/logic/sort.js'\n  import type { JSONPathParser, JSONSelection, OnError, OnJSONSelect } from '$lib/types.js'\n  import Icon from 'svelte-awesome'\n  import { faClose, faEdit } from '@fortawesome/free-solid-svg-icons'\n  import NavigationBarItem from './NavigationBarItem.svelte'\n  import NavigationBarPathEditor from './NavigationBarPathEditor.svelte'\n\n  const debug = createDebug('jsoneditor:NavigationBar')\n\n  export let json: unknown\n  export let selection: JSONSelection | undefined\n  export let onSelect: OnJSONSelect\n  export let onError: OnError\n  export let pathParser: JSONPathParser\n\n  let refNavigationBar: Element | undefined\n  let editing = false\n\n  $: path = selection ? getFocusPath(selection) : []\n  $: hasNextItem = isObjectOrArray(getIn(json, path))\n\n  // we have an unused parameter path to trigger scrollToLastItem when path changes,\n  // see $: scrollToLastItem(path)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function scrollToLastItem(path: JSONPath) {\n    setTimeout(() => {\n      if (refNavigationBar && refNavigationBar.scrollTo) {\n        const left = refNavigationBar.scrollWidth - refNavigationBar.clientWidth\n        if (left > 0) {\n          debug('scrollTo ', left)\n          refNavigationBar.scrollTo({ left, behavior: 'smooth' })\n        }\n      }\n    })\n  }\n\n  // trigger scrollToLastItem when path changes\n  $: scrollToLastItem(path)\n\n  function getItems(path: JSONPath): string[] {\n    debug('get items for path', path)\n\n    const node = getIn(json, path)\n    if (Array.isArray(node)) {\n      return range(0, node.length).map(String)\n    } else if (isObject(node)) {\n      const keys = Object.keys(node)\n\n      const sortedKeys = keys.slice(0)\n      sortedKeys.sort(caseInsensitiveNaturalCompare)\n\n      return sortedKeys\n    } else {\n      // never happens but just for robustness...\n      return []\n    }\n  }\n\n  function pathExists(path: JSONPath): boolean {\n    return existsIn(json, path)\n  }\n\n  function handleSelect(path: JSONPath) {\n    debug('select path', JSON.stringify(path))\n\n    onSelect(createMultiSelection(path, path))\n  }\n\n  function toggleEditing() {\n    editing = !editing\n  }\n\n  function handleCloseEditor() {\n    editing = false\n  }\n\n  function handleChangePath(path: JSONPath) {\n    handleCloseEditor()\n    handleSelect(path)\n  }\n</script>\n\n<div class=\"jse-navigation-bar\" bind:this={refNavigationBar}>\n  {#if !editing}\n    <!-- eslint-disable-next-line @typescript-eslint/no-unused-vars -->\n    {#each path as item, index (index)}\n      <NavigationBarItem {getItems} {path} {index} onSelect={handleSelect} />\n    {/each}\n    {#if hasNextItem}\n      <NavigationBarItem {getItems} {path} index={path.length} onSelect={handleSelect} />\n    {/if}\n  {:else}\n    <NavigationBarPathEditor\n      {path}\n      onClose={handleCloseEditor}\n      onChange={handleChangePath}\n      {onError}\n      {pathExists}\n      {pathParser}\n    />\n  {/if}\n\n  <button\n    type=\"button\"\n    class=\"jse-navigation-bar-edit\"\n    class:flex={!editing}\n    class:editing\n    title={editing ? 'Cancel editing the selected path' : 'Edit the selected path'}\n    on:click={toggleEditing}\n  >\n    <span class=\"jse-navigation-bar-space\">\n      <!-- ensure the right height (arrows have less height than the text) -->\n      {!isObjectOrArray(json) && !editing ? 'Navigation bar' : '\\u00A0'}\n    </span>\n\n    <Icon data={editing ? faClose : faEdit} />\n  </button>\n</div>\n\n<style src=\"./NavigationBar.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { debounce } from 'lodash-es'\n  import Icon from 'svelte-awesome'\n  import {\n    faCaretDown,\n    faCaretRight,\n    faChevronDown,\n    faChevronUp,\n    faCircleNotch,\n    faSearch,\n    faTimes\n  } from '@fortawesome/free-solid-svg-icons'\n  import { DEBOUNCE_DELAY, MAX_SEARCH_RESULTS } from '$lib/constants.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type { DocumentState, JSONParser, OnPatch, SearchResultDetails } from '$lib/types.js'\n  import {\n    createSearchAndReplaceAllOperations,\n    createSearchAndReplaceOperations,\n    search,\n    searchNext,\n    searchPrevious,\n    updateSearchResult\n  } from '$lib/logic/search.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { tick } from 'svelte'\n\n  const debug = createDebug('jsoneditor:SearchBox')\n\n  export let json: unknown\n  export let documentState: DocumentState | undefined\n  export let parser: JSONParser\n  export let showSearch: boolean\n  export let showReplace: boolean\n  export let readOnly: boolean\n  export let columns: JSONPath[] | undefined\n  export let onSearch: (result: SearchResultDetails | undefined) => void\n  export let onFocus: (path: JSONPath) => Promise<void>\n  export let onPatch: OnPatch\n  export let onClose: () => void\n\n  let text = ''\n  let appliedText = ''\n  let replaceText = ''\n  let searching = false\n  let searchResult: SearchResultDetails | undefined\n\n  $: resultCount = searchResult?.items?.length || 0\n  $: activeIndex = searchResult?.activeIndex || 0\n  $: formattedResultCount =\n    resultCount >= MAX_SEARCH_RESULTS ? `${MAX_SEARCH_RESULTS - 1}+` : String(resultCount)\n\n  $: onSearch(searchResult)\n\n  $: applyChangedShowSearch(showSearch)\n\n  const applyChangedSearchTextDebounced = debounce(applyChangedSearchText, DEBOUNCE_DELAY)\n  $: applyChangedSearchTextDebounced(text)\n\n  const applyChangedJsonDebounced = debounce(applyChangedJson, DEBOUNCE_DELAY)\n  $: applyChangedJsonDebounced(json)\n\n  function toggleShowReplace() {\n    showReplace = !showReplace && !readOnly\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    // key events must not be handled by the generic keydown handler of the\n    // whole JSONEditor.\n    event.stopPropagation()\n    const combo = keyComboFromEvent(event)\n\n    if (combo === 'Enter') {\n      event.preventDefault()\n\n      const pendingChanges = text !== appliedText\n      if (pendingChanges) {\n        applyChangedSearchTextDebounced.flush()\n      } else {\n        handleNext()\n      }\n    }\n\n    if (combo === 'Shift+Enter') {\n      event.preventDefault()\n      handlePrevious()\n    }\n\n    if (combo === 'Ctrl+Enter') {\n      event.preventDefault()\n\n      if (showReplace) {\n        handleReplace()\n      } else {\n        handleNext()\n        // TODO: move focus to the active element so you can start editing?\n      }\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      toggleShowReplace()\n    }\n\n    if (combo === 'Escape') {\n      event.preventDefault()\n\n      handleClose()\n    }\n  }\n\n  function handleReplaceKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n\n    if (combo === 'Enter') {\n      event.preventDefault()\n      event.stopPropagation()\n\n      handleReplace()\n    }\n  }\n\n  async function handlePaste() {\n    await tick()\n    setTimeout(() => applyChangedSearchTextDebounced.flush())\n  }\n\n  async function handleReplace() {\n    if (readOnly) {\n      return\n    }\n\n    const activeItem = searchResult?.activeItem\n    debug('handleReplace', { replaceText, activeItem })\n\n    if (!searchResult || !activeItem || json === undefined) {\n      return\n    }\n\n    // move to the next search result *before* applying the replacement\n    searchResult = {\n      ...searchNext(searchResult),\n      activeIndex // trick to prevent shortly flickering of index from 1 to 2 and then to 1 again after the next search\n    }\n\n    const { operations, newSelection } = createSearchAndReplaceOperations(\n      json,\n      documentState,\n      replaceText,\n      activeItem,\n      parser\n    )\n\n    onPatch(operations, (_, patchedState) => ({\n      state: patchedState,\n      selection: newSelection\n    }))\n\n    // immediately trigger updating the search results\n    await tick()\n    await applyChangedJsonDebounced.flush()\n\n    // focus to the next search result\n    await handleFocus()\n  }\n\n  async function handleReplaceAll() {\n    if (readOnly) {\n      return\n    }\n\n    debug('handleReplaceAll', { text, replaceText })\n\n    const { operations, newSelection } = createSearchAndReplaceAllOperations(\n      json,\n      documentState,\n      text,\n      replaceText,\n      parser\n    )\n\n    onPatch(operations, (_, patchedState) => ({\n      state: patchedState,\n      selection: newSelection\n    }))\n\n    await handleFocus()\n  }\n\n  function initSearchInput(element: HTMLInputElement) {\n    element.select()\n  }\n\n  async function handleNext() {\n    searchResult = searchResult ? searchNext(searchResult) : undefined\n\n    await handleFocus()\n  }\n\n  async function handlePrevious() {\n    searchResult = searchResult ? searchPrevious(searchResult) : undefined\n\n    await handleFocus()\n  }\n\n  async function handleFocus() {\n    debug('handleFocus', searchResult)\n\n    const activeItem = searchResult?.activeItem\n    if (activeItem && json !== undefined) {\n      await onFocus(activeItem.path)\n    }\n  }\n\n  async function applyChangedShowSearch(showSearch: boolean) {\n    await applySearch(showSearch, text, json)\n  }\n\n  async function applyChangedSearchText(text: string) {\n    await applySearch(showSearch, text, json)\n    await handleFocus()\n  }\n\n  async function applyChangedJson(json: unknown) {\n    await applySearch(showSearch, text, json)\n  }\n\n  // we pass searchText and json as argument to trigger search when these variables change,\n  // via various listeners like applyChangedSearchText\n  async function applySearch(showSearch: boolean, text: string, json: unknown): Promise<void> {\n    if (!showSearch) {\n      if (searchResult) {\n        searchResult = undefined\n      }\n\n      return Promise.resolve()\n    }\n\n    debug('applySearch', { showSearch, text })\n\n    if (text === '') {\n      debug('clearing search result')\n\n      if (searchResult !== undefined) {\n        searchResult = undefined\n      }\n\n      return Promise.resolve()\n    }\n\n    appliedText = text\n    searching = true\n\n    return new Promise<void>((resolve) => {\n      setTimeout(() => {\n        // wait until the search icon has been rendered\n        const newResultItems = search(text, json, { maxResults: MAX_SEARCH_RESULTS, columns })\n        searchResult = updateSearchResult(newResultItems, searchResult)\n\n        searching = false\n        resolve()\n      })\n    })\n  }\n\n  function handleClose() {\n    debug('handleClose')\n    applyChangedSearchTextDebounced.cancel()\n    applyChangedJsonDebounced.cancel()\n    applySearch(false, text, json) // will clear the search results\n    onClose()\n  }\n</script>\n\n{#if showSearch}\n  <div class=\"jse-search-box\">\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <form class=\"jse-search-form\" on:keydown={handleKeyDown}>\n      {#if !readOnly}\n        <button\n          type=\"button\"\n          class=\"jse-replace-toggle\"\n          title=\"Toggle visibility of replace options (Ctrl+H)\"\n          on:click={toggleShowReplace}\n        >\n          <Icon data={showReplace ? faCaretDown : faCaretRight} />\n        </button>\n      {/if}\n      <div class=\"jse-search-contents\">\n        <div class=\"jse-search-section\">\n          <div class=\"jse-search-icon\">\n            {#if searching}\n              <Icon data={faCircleNotch} spin />\n            {:else}\n              <Icon data={faSearch} />\n            {/if}\n          </div>\n          <label class=\"jse-search-input-label\" about=\"jse-search input\">\n            <input\n              class=\"jse-search-input\"\n              title=\"Enter text to search\"\n              type=\"text\"\n              placeholder=\"Find\"\n              bind:value={text}\n              use:initSearchInput\n              on:paste={handlePaste}\n            />\n          </label>\n          <div class=\"jse-search-count\" class:jse-visible={text !== ''}>\n            {activeIndex !== -1 && activeIndex < resultCount\n              ? `${activeIndex + 1}/`\n              : ''}{formattedResultCount}\n          </div>\n          <button\n            type=\"button\"\n            class=\"jse-search-next\"\n            title=\"Go to next search result (Enter)\"\n            on:click={handleNext}\n          >\n            <Icon data={faChevronDown} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"jse-search-previous\"\n            title=\"Go to previous search result (Shift+Enter)\"\n            on:click={handlePrevious}\n          >\n            <Icon data={faChevronUp} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"jse-search-clear\"\n            title=\"Close search box (Esc)\"\n            on:click={handleClose}\n          >\n            <Icon data={faTimes} />\n          </button>\n        </div>\n        {#if showReplace && !readOnly}\n          <div class=\"jse-replace-section\">\n            <input\n              class=\"jse-replace-input\"\n              title=\"Enter replacement text\"\n              type=\"text\"\n              placeholder=\"Replace\"\n              bind:value={replaceText}\n              on:keydown={handleReplaceKeyDown}\n            />\n            <button\n              type=\"button\"\n              title=\"Replace current occurrence (Ctrl+Enter)\"\n              on:click={handleReplace}>Replace</button\n            >\n            <button type=\"button\" title=\"Replace all occurrences\" on:click={handleReplaceAll}\n              >All</button\n            >\n          </div>\n        {/if}\n      </div>\n    </form>\n  </div>\n{/if}\n\n<style src=\"./SearchBox.scss\"></style>\n","import type { JSONPatchOperation, JSONPath } from 'immutable-json-patch'\nimport {\n  compileJSONPointer,\n  isJSONArray,\n  isJSONObject,\n  parseJSONPointer\n} from 'immutable-json-patch'\nimport { groupBy, isEmpty, isEqual, mapValues, partition } from 'lodash-es'\nimport type { JSONSelection, SortedColumn, TableCellIndex, ValidationError } from '$lib/types.js'\nimport { ValidationSeverity } from '$lib/types.js'\nimport { createValueSelection, getFocusPath, pathStartsWith } from './selection.js'\nimport { containsNumber } from '../utils/numberUtils.js'\nimport type { Dictionary } from 'lodash'\nimport { stringifyJSONPath } from '$lib/utils/pathUtils.js'\nimport { forEachSample } from '$lib/utils/arrayUtils.js'\nimport { isObject } from '$lib/utils/typeUtils.js'\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\ntype NestedObject = Record<string, NestedObject>\n\nconst endOfPath = Symbol('path')\n\nexport function getColumns(\n  array: Array<unknown>,\n  flatten: boolean,\n  maxSampleCount = Infinity\n): JSONPath[] {\n  const merged: NestedObject = {}\n\n  if (Array.isArray(array)) {\n    // We read samples spread through the whole array, from begin to end.\n    // When the array is sorted, and a specific field is present only at the last\n    // couple of items of the array or in the middle, we want to pick that up too.\n    forEachSample(array, maxSampleCount, (item) => {\n      if (isObject(item)) {\n        _recurseObject(item, merged, flatten)\n      } else {\n        merged[endOfPath] = true\n      }\n    })\n  }\n\n  const paths: JSONPath[] = []\n  if (endOfPath in merged) {\n    paths.push([])\n  }\n  _collectPaths(merged, [], paths, flatten)\n\n  return paths\n}\n\n// internal function for getColumns\n// mutates the argument merged\nfunction _recurseObject(object: NestedObject, merged: NestedObject, flatten: boolean): void {\n  for (const key in object) {\n    const value = object[key]\n    const valueMerged = merged[key] || (merged[key] = {})\n\n    if (isObject(value) && flatten) {\n      _recurseObject(value, valueMerged, flatten)\n    } else {\n      if (valueMerged[endOfPath] === undefined) {\n        valueMerged[endOfPath] = true\n      }\n    }\n  }\n}\n\n// internal function for getColumns\n// mutates the argument paths\nfunction _collectPaths(\n  object: NestedObject,\n  parentPath: JSONPath,\n  paths: JSONPath[],\n  flatten: boolean\n): void {\n  for (const key in object) {\n    const path = parentPath.concat(key)\n    const value = object[key]\n\n    if (value && value[endOfPath] === true) {\n      paths.push(path)\n    }\n\n    if (isJSONObject(value) && flatten) {\n      _collectPaths(value, path, paths, flatten)\n    }\n  }\n}\n\nexport function maintainColumnOrder(\n  newColumns: JSONPath[],\n  previousColumns: JSONPath[]\n): JSONPath[] {\n  const orderedColumns = new Set(previousColumns.map(compileJSONPointer))\n  const newColumnsSet = new Set(newColumns.map(compileJSONPointer))\n\n  // delete the columns that are gone now\n  for (const column of orderedColumns) {\n    if (!newColumnsSet.has(column)) {\n      orderedColumns.delete(column)\n    }\n  }\n\n  // append the new columns to the end\n  for (const column of newColumnsSet) {\n    if (!orderedColumns.has(column)) {\n      orderedColumns.add(column)\n    }\n  }\n\n  return [...orderedColumns].map(parseJSONPointer)\n}\n\nexport function getShallowKeys(value: unknown): JSONPath[] {\n  return isJSONObject(value) ? Object.keys(value).map((key) => [key]) : [[]]\n}\n\nexport function getRecursiveKeys(value: unknown): JSONPath[] {\n  const paths: JSONPath[] = []\n\n  function recurse(value: unknown, path: JSONPath) {\n    if (isJSONObject(value)) {\n      Object.keys(value).forEach((key) => {\n        recurse(value[key], path.concat(key))\n      })\n    } else {\n      // array or primitive value like string or number\n      paths.push(path)\n    }\n  }\n\n  recurse(value, [])\n\n  return paths\n}\n\nexport interface VisibleSection {\n  startIndex: number\n  endIndex: number\n  startHeight: number\n  visibleHeight: number\n  endHeight: number\n  averageItemHeight: number\n  visibleItems: Array<unknown>\n}\n\n// TODO: write unit tests\nexport function calculateVisibleSection(\n  scrollTop: number,\n  viewPortHeight: number,\n  json: unknown | undefined,\n  itemHeights: Record<number, number>,\n  defaultItemHeight: number,\n  searchBoxOffset: number,\n  margin = 80\n): VisibleSection {\n  const itemCount = isJSONArray(json) ? json.length : 0\n  const averageItemHeight = calculateAverageItemHeight(itemHeights, defaultItemHeight)\n  const viewPortTop = scrollTop - margin\n  const viewPortBottom = viewPortHeight + 2 * margin\n\n  const getItemHeight = (index: number) => itemHeights[index] || defaultItemHeight\n\n  let startIndex = 0\n  let startHeight = searchBoxOffset\n  while (startHeight < viewPortTop && startIndex < itemCount) {\n    startHeight += getItemHeight(startIndex)\n    startIndex++\n  }\n  if (startIndex > 0) {\n    // go one item back, else there is white space at the top for up to 1 missing item\n    startIndex--\n    startHeight -= getItemHeight(startIndex)\n  }\n\n  let endIndex = startIndex\n  let visibleHeight = 0\n  while (visibleHeight < viewPortBottom && endIndex < itemCount) {\n    visibleHeight += getItemHeight(endIndex)\n    endIndex++\n  }\n\n  let endHeight = 0\n  for (let i = endIndex; i < itemCount; i++) {\n    endHeight += getItemHeight(i)\n  }\n\n  const visibleItems = isJSONArray(json) ? json.slice(startIndex, endIndex) : []\n\n  return {\n    startIndex,\n    endIndex,\n    startHeight,\n    endHeight,\n    averageItemHeight,\n    visibleHeight,\n    visibleItems\n  }\n}\n\n// TODO: cleanup if we will not use it in the end\n// TODO: write unit tests\nexport function calculateVisibleSectionApprox(\n  scrollTop: number,\n  viewPortHeight: number,\n  json: unknown | undefined,\n  defaultItemHeight: number\n): VisibleSection {\n  const itemCount = isJSONArray(json) ? json.length : 0\n  const averageItemHeight = defaultItemHeight\n\n  const viewPortTop = scrollTop\n  const startIndex = Math.floor(viewPortTop / defaultItemHeight)\n  const startHeight = startIndex * defaultItemHeight\n  const endIndex = Math.ceil((viewPortTop + viewPortHeight) / defaultItemHeight)\n  const visibleHeight = (endIndex - startIndex) * defaultItemHeight\n  const endHeight = (itemCount - endIndex) * defaultItemHeight\n\n  const visibleItems = isJSONArray(json) ? json.slice(startIndex, endIndex) : []\n\n  return {\n    startIndex,\n    endIndex,\n    startHeight,\n    endHeight,\n    averageItemHeight,\n    visibleHeight,\n    visibleItems\n  }\n}\n\n// TODO: write unit tests\nexport function calculateAbsolutePosition(\n  path: JSONPath,\n  columns: JSONPath[],\n  itemHeights: Record<number, number>,\n  defaultItemHeight: number\n): number {\n  const { rowIndex } = toTableCellPosition(path, columns)\n\n  let top = 0\n  for (let currentIndex = 0; currentIndex < rowIndex; currentIndex++) {\n    top += itemHeights[currentIndex] || defaultItemHeight\n  }\n\n  // TODO: also calculate left\n  return top\n}\n\nfunction calculateAverageItemHeight(\n  itemHeights: Record<number, number>,\n  defaultItemHeight: number\n): number {\n  const values = Object.values(itemHeights) // warning: itemHeights is mutated and not updated itself, we can't watch it!\n  if (isEmpty(values)) {\n    return defaultItemHeight\n  }\n\n  const add = (a: number, b: number) => a + b\n  const total = values.reduce(add)\n  return total / values.length\n}\n\nexport function selectPreviousRow(columns: JSONPath[], selection: JSONSelection): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (rowIndex > 0) {\n    const previousPosition = { rowIndex: rowIndex - 1, columnIndex }\n    const previousPath = fromTableCellPosition(previousPosition, columns)\n    return createValueSelection(previousPath)\n  }\n\n  return selection\n}\n\nexport function selectNextRow(\n  json: unknown,\n  columns: JSONPath[],\n  selection: JSONSelection\n): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (rowIndex < (json as Array<unknown>).length - 1) {\n    const nextPosition = { rowIndex: rowIndex + 1, columnIndex }\n    const nextPath = fromTableCellPosition(nextPosition, columns)\n    return createValueSelection(nextPath)\n  }\n\n  return selection\n}\n\nexport function selectPreviousColumn(columns: JSONPath[], selection: JSONSelection): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (columnIndex > 0) {\n    const previousPosition = { rowIndex, columnIndex: columnIndex - 1 }\n    const previousPath = fromTableCellPosition(previousPosition, columns)\n    return createValueSelection(previousPath)\n  }\n\n  return selection\n}\n\nexport function selectNextColumn(columns: JSONPath[], selection: JSONSelection): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (columnIndex < columns.length - 1) {\n    const nextPosition = { rowIndex, columnIndex: columnIndex + 1 }\n    const nextPath = fromTableCellPosition(nextPosition, columns)\n    return createValueSelection(nextPath)\n  }\n\n  return selection\n}\n\nexport function toTableCellPosition(path: JSONPath, columns: JSONPath[]): TableCellIndex {\n  const [index, ...column] = path\n\n  const rowIndex = parseInt(index, 10)\n\n  return {\n    rowIndex: !isNaN(rowIndex) ? rowIndex : -1,\n    columnIndex: columns.findIndex((c) => pathStartsWith(column, c))\n  }\n}\n\nexport function fromTableCellPosition(position: TableCellIndex, columns: JSONPath[]): JSONPath {\n  const { rowIndex, columnIndex } = position\n\n  return [String(rowIndex), ...columns[columnIndex]]\n}\n\nexport function stringifyTableCellPosition(position: TableCellIndex): string {\n  const { rowIndex, columnIndex } = position\n\n  return `${rowIndex}:${columnIndex}`\n}\n\ninterface GroupedValidationErrorsByRow {\n  row: ValidationError[]\n  columns: Dictionary<ValidationError[]>\n}\n\nexport interface GroupedValidationErrors {\n  root: ValidationError[]\n  rows: Dictionary<GroupedValidationErrorsByRow>\n}\n\n/**\n * Group validation errors for use in the Table view: per column, and a group for the row as a whole\n */\nexport function groupValidationErrors(\n  validationErrors: ValidationError[],\n  columns: JSONPath[]\n): GroupedValidationErrors {\n  const [arrayErrors, rootErrors] = partition(validationErrors, (validationError) =>\n    containsNumber(validationError.path[0])\n  )\n\n  const errorsByRow: Dictionary<ValidationError[]> = groupBy(arrayErrors, findRowIndex)\n\n  const groupedErrorsByRow = mapValues(errorsByRow, (errors) => {\n    const groupByRow: GroupedValidationErrorsByRow = {\n      row: [],\n      columns: {}\n    }\n\n    errors.forEach((error) => {\n      const columnIndex = findColumnIndex(error, columns)\n\n      if (columnIndex !== -1) {\n        if (groupByRow.columns[columnIndex] === undefined) {\n          groupByRow.columns[columnIndex] = []\n        }\n        groupByRow.columns[columnIndex].push(error)\n      } else {\n        groupByRow.row.push(error)\n      }\n    })\n\n    return groupByRow\n  })\n\n  return {\n    root: rootErrors,\n    rows: groupedErrorsByRow\n  }\n}\n\nexport function mergeValidationErrors(\n  path: JSONPath,\n  validationErrors: ValidationError[] | undefined\n): ValidationError | undefined {\n  if (!validationErrors || validationErrors.length === 0) {\n    return undefined\n  }\n\n  if (validationErrors.length === 1) {\n    return validationErrors[0]\n  }\n\n  return {\n    path,\n    message:\n      'Multiple validation issues: ' +\n      validationErrors\n        .map((error) => {\n          return stringifyJSONPath(error.path) + ' ' + error.message\n        })\n        .join(', '),\n    severity: ValidationSeverity.warning\n  }\n}\n\nfunction findRowIndex(error: ValidationError): number {\n  return parseInt(error.path[0], 10)\n}\n\nfunction findColumnIndex(error: ValidationError, columns: JSONPath[]): number {\n  const position = toTableCellPosition(error.path, columns)\n\n  if (position.columnIndex !== -1) {\n    return position.columnIndex\n  }\n\n  return -1\n}\n\n/**\n * Clear the sorted column from the documentState when it is affected by the operations\n */\nexport function clearSortedColumnWhenAffectedByOperations(\n  sortedColumn: SortedColumn | undefined,\n  operations: JSONPatchOperation[],\n  columms: JSONPath[]\n): SortedColumn | undefined {\n  const mustBeCleared = operations.some((operation) =>\n    operationAffectsSortedColumn(sortedColumn, operation, columms)\n  )\n\n  return mustBeCleared ? undefined : sortedColumn\n}\n\nexport function operationAffectsSortedColumn(\n  sortedColumn: SortedColumn | undefined,\n  operation: JSONPatchOperation,\n  columns: JSONPath[]\n): boolean {\n  if (!sortedColumn) {\n    return false\n  }\n\n  // an operation of replacing a value in a different column does not affect the currently sorted order\n  if (operation.op === 'replace') {\n    const path = parseJSONPointer(operation.path)\n    const { rowIndex, columnIndex } = toTableCellPosition(path, columns)\n    const selectedColumnIndex = columns.findIndex((column) => isEqual(column, sortedColumn.path))\n\n    if (rowIndex !== -1 && columnIndex !== -1 && columnIndex !== selectedColumnIndex) {\n      return false\n    }\n  }\n\n  // TODO: there are more cases where we can known an operation does not affect the sorted order, improve this\n  //  For example adding a nested value in a different column, or removing a full row.\n\n  return true\n}\n\n/**\n * Find nested arrays inside a JSON object\n */\nexport function findNestedArrays(json: unknown, maxLevel = 2): JSONPath[] {\n  const props: JSONPath[] = []\n\n  function recurse(value: unknown, path: JSONPath) {\n    if (isJSONObject(value) && path.length < maxLevel) {\n      Object.keys(value).forEach((key) => {\n        recurse(value[key], path.concat(key))\n      })\n    }\n\n    if (isJSONArray(value)) {\n      props.push(path)\n    }\n  }\n\n  recurse(json, [])\n\n  return props\n}\n","import {\n  createEditKeySelection,\n  createEditValueSelection,\n  createInsideSelection,\n  createMultiSelection,\n  createValueSelection,\n  getFocusPath,\n  hasSelectionContents,\n  isKeySelection,\n  isValueSelection,\n  selectionToPartialJson\n} from '$lib/logic/selection.js'\nimport copyToClipboard from '$lib/utils/copyToClipboard.js'\nimport {\n  append,\n  createNewValue,\n  createRemoveOperations,\n  duplicate,\n  insert,\n  insertBefore,\n  removeAll\n} from '$lib/logic/operations.js'\nimport type {\n  AfterPatchCallback,\n  InsertType,\n  JSONParser,\n  JSONSelection,\n  OnChange,\n  OnChangeText,\n  OnJSONSelect,\n  OnPatch\n} from '$lib/types'\nimport { createDebug } from '$lib/utils/debug.js'\nimport {\n  getIn,\n  isJSONObject,\n  isJSONPatchAdd,\n  isJSONPatchReplace,\n  type JSONPath,\n  parsePath\n} from 'immutable-json-patch'\nimport { isObject, isObjectOrArray } from '$lib/utils/typeUtils.js'\nimport { expandAll, expandNone, expandPath, expandSmart } from '$lib/logic/documentState.js'\nimport { initial, isEmpty, last } from 'lodash-es'\nimport { fromTableCellPosition, toTableCellPosition } from '$lib/logic/table.js'\n\nconst debug = createDebug('jsoneditor:actions')\n\nexport interface OnCutAction {\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  indentation: string | number | undefined\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n}\n\n// TODO: write unit tests\nexport async function onCut({\n  json,\n  selection,\n  indentation,\n  readOnly,\n  parser,\n  onPatch\n}: OnCutAction) {\n  if (readOnly || json === undefined || !selection || !hasSelectionContents(selection)) {\n    return\n  }\n\n  const clipboard = selectionToPartialJson(json, selection, indentation, parser)\n  if (clipboard === undefined) {\n    return\n  }\n\n  debug('cut', { selection, clipboard, indentation })\n\n  await copyToClipboard(clipboard)\n\n  const { operations, newSelection } = createRemoveOperations(json, selection)\n\n  onPatch(operations, (_, patchedState) => ({\n    state: patchedState,\n    selection: newSelection\n  }))\n}\n\nexport interface OnCopyAction {\n  json: unknown\n  selection: JSONSelection | undefined\n  indentation: string | number | undefined\n  parser: JSONParser\n}\n\n// TODO: write unit tests\nexport async function onCopy({ json, selection, indentation, parser }: OnCopyAction) {\n  const clipboard = selectionToPartialJson(json, selection, indentation, parser)\n  if (clipboard === undefined) {\n    return\n  }\n\n  debug('copy', { clipboard, indentation })\n\n  await copyToClipboard(clipboard)\n}\n\ntype RepairModalCallback = (text: string, onApply: (repairedText: string) => void) => void\n\ninterface OnPasteAction {\n  clipboardText: string\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onChangeText: OnChangeText\n  openRepairModal: RepairModalCallback\n}\n\n// TODO: write unit tests\nexport function onPaste({\n  clipboardText,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onChangeText,\n  openRepairModal\n}: OnPasteAction) {\n  if (readOnly) {\n    return\n  }\n\n  function doPaste(pastedText: string) {\n    if (json !== undefined) {\n      const ensureSelection = selection || createValueSelection([])\n\n      const operations = insert(json, ensureSelection, pastedText, parser)\n\n      debug('paste', { pastedText, operations, ensureSelection })\n\n      onPatch(operations, (patchedJson, patchedState) => {\n        let updatedState = patchedState\n\n        // expand newly inserted object/array\n        operations\n          .filter(\n            (operation) =>\n              (isJSONPatchAdd(operation) || isJSONPatchReplace(operation)) &&\n              isObjectOrArray(operation.value)\n          )\n          .forEach((operation) => {\n            const path = parsePath(json, operation.path)\n            updatedState = expandSmart(patchedJson, updatedState, path)\n          })\n\n        return {\n          state: updatedState\n        }\n      })\n    } else {\n      // no json: empty document, or the contents is invalid text\n      debug('paste text', { pastedText })\n\n      onChangeText(clipboardText, (patchedJson, patchedState) => {\n        if (patchedJson) {\n          const path: JSONPath = []\n          return {\n            state: expandSmart(patchedJson, patchedState, path)\n          }\n        }\n\n        return undefined\n      })\n    }\n  }\n\n  try {\n    doPaste(clipboardText)\n  } catch (err) {\n    openRepairModal(clipboardText, (repairedText) => {\n      debug('repaired pasted text: ', repairedText)\n      doPaste(repairedText)\n    })\n  }\n}\n\nexport interface OnRemoveAction {\n  json: unknown | undefined\n  text: string | undefined\n  selection: JSONSelection | undefined\n  keepSelection: boolean\n  readOnly: boolean\n  onChange: OnChange\n  onPatch: OnPatch\n}\n\n// TODO: write unit tests\nexport function onRemove({\n  json,\n  text,\n  selection,\n  keepSelection,\n  readOnly,\n  onChange,\n  onPatch\n}: OnRemoveAction) {\n  if (readOnly || !selection) {\n    return\n  }\n\n  // in case of a selected key or value, we change the selection to the whole\n  // entry to remove this, we do not want to clear a key or value only.\n  const removeSelection =\n    json !== undefined && (isKeySelection(selection) || isValueSelection(selection))\n      ? createMultiSelection(selection.path, selection.path)\n      : selection\n\n  if (isEmpty(getFocusPath(selection))) {\n    // root selected -> clear complete document\n    debug('remove root', { selection })\n\n    if (onChange) {\n      onChange(\n        { text: '', json: undefined },\n        json !== undefined ? { text: undefined, json } : { text: text || '', json },\n        {\n          contentErrors: undefined,\n          patchResult: undefined\n        }\n      )\n    }\n  } else {\n    // remove selection\n    if (json !== undefined) {\n      const { operations, newSelection } = createRemoveOperations(json, removeSelection)\n\n      debug('remove', { operations, selection, newSelection })\n\n      onPatch(operations, (_, patchedState) => ({\n        state: patchedState,\n        selection: keepSelection ? selection : newSelection\n      }))\n    }\n  }\n}\n\nexport interface OnDuplicateRowAction {\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onDuplicateRow({\n  json,\n  selection,\n  columns,\n  readOnly,\n  onPatch\n}: OnDuplicateRowAction) {\n  if (readOnly || json === undefined || !selection || !hasSelectionContents(selection)) {\n    return\n  }\n\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  debug('duplicate row', { rowIndex })\n\n  const rowPath = [String(rowIndex)]\n  const operations = duplicate(json, [rowPath])\n\n  onPatch(operations, (_, patchedState) => {\n    const newRowIndex = rowIndex < (json as Array<unknown>).length ? rowIndex + 1 : rowIndex\n    const newPath = fromTableCellPosition({ rowIndex: newRowIndex, columnIndex }, columns)\n    const newSelection = createValueSelection(newPath)\n\n    return {\n      state: patchedState,\n      selection: newSelection\n    }\n  })\n}\n\nexport interface OnInsertBeforeRowAction {\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onInsertBeforeRow({\n  json,\n  selection,\n  columns,\n  readOnly,\n  onPatch\n}: OnInsertBeforeRowAction) {\n  if (readOnly || json === undefined || !selection || !hasSelectionContents(selection)) {\n    return\n  }\n\n  const { rowIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  debug('insert before row', { rowIndex })\n\n  const rowPath = [String(rowIndex)]\n  const newValue = isJSONObject((json as Array<unknown>)[0]) ? {} : ''\n  const values = [{ key: '', value: newValue }]\n  const operations = insertBefore(json, rowPath, values)\n\n  onPatch(operations)\n}\n\nexport interface OnInsertAfterRowAction {\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onInsertAfterRow({\n  json,\n  selection,\n  columns,\n  readOnly,\n  onPatch\n}: OnInsertAfterRowAction) {\n  if (readOnly || json === undefined || !selection || !hasSelectionContents(selection)) {\n    return\n  }\n\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  debug('insert after row', { rowIndex })\n\n  const nextRowIndex = rowIndex + 1\n  const nextRowPath = [String(nextRowIndex)]\n  const newValue = isJSONObject((json as Array<unknown>)[0]) ? {} : ''\n  const values = [{ key: '', value: newValue }]\n\n  const operations =\n    nextRowIndex < (json as Array<unknown>).length\n      ? insertBefore(json, nextRowPath, values)\n      : append(json, [], values)\n\n  onPatch(operations, (_, patchedState) => {\n    const nextPath = fromTableCellPosition({ rowIndex: nextRowIndex, columnIndex }, columns)\n    const newSelection = createValueSelection(nextPath)\n\n    return {\n      state: patchedState,\n      selection: newSelection\n    }\n  })\n}\n\nexport interface OnRemoveRowAction {\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onRemoveRow({ json, selection, columns, readOnly, onPatch }: OnRemoveRowAction) {\n  if (readOnly || json === undefined || !selection || !hasSelectionContents(selection)) {\n    return\n  }\n\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  debug('remove row', { rowIndex })\n\n  const rowPath = [String(rowIndex)]\n  const operations = removeAll([rowPath])\n\n  onPatch(operations, (patchedJson, patchedState) => {\n    const newRowIndex =\n      rowIndex < (patchedJson as Array<unknown>).length\n        ? rowIndex\n        : rowIndex > 0\n          ? rowIndex - 1\n          : undefined\n\n    const newSelection =\n      newRowIndex !== undefined\n        ? createValueSelection(\n            fromTableCellPosition({ rowIndex: newRowIndex, columnIndex }, columns)\n          )\n        : undefined\n\n    debug('remove row new selection', { rowIndex, newRowIndex, newSelection })\n\n    return {\n      state: patchedState,\n      selection: newSelection\n    }\n  })\n}\n\nexport interface OnInsert {\n  insertType: InsertType\n  selectInside: boolean\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  initialValue: string | undefined\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onReplaceJson: (updatedJson: unknown, afterPatch: AfterPatchCallback) => void\n}\n\n// TODO: write unit tests\nexport function onInsert({\n  insertType,\n  selectInside,\n  initialValue,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onReplaceJson\n}: OnInsert): void {\n  if (readOnly) {\n    return\n  }\n\n  const newValue = createNewValue(json, selection, insertType)\n\n  if (json !== undefined) {\n    const data = parser.stringify(newValue) as string\n    const operations = insert(json, selection, data, parser)\n    debug('onInsert', { insertType, operations, newValue, data })\n\n    const operation = last(\n      operations.filter((operation) => operation.op === 'add' || operation.op === 'replace')\n    )\n\n    onPatch(operations, (patchedJson, patchedState, patchedSelection) => {\n      // TODO: extract determining the newSelection in a separate function\n      if (operation) {\n        const path = parsePath(patchedJson, operation.path)\n\n        if (isObjectOrArray(newValue)) {\n          return {\n            state: expandPath(patchedJson, patchedState, path, expandAll),\n            selection: selectInside ? createInsideSelection(path) : patchedSelection\n          }\n        }\n\n        if (newValue === '') {\n          // open the newly inserted value in edit mode\n          const parent = !isEmpty(path) ? getIn(patchedJson, initial(path)) : undefined\n\n          return {\n            state: expandPath(patchedJson, patchedState, path, expandNone),\n            selection: isObject(parent)\n              ? createEditKeySelection(path, initialValue)\n              : createEditValueSelection(path, initialValue)\n          }\n        }\n      }\n\n      return undefined\n    })\n\n    debug('after patch')\n  } else {\n    // document is empty or invalid (in that case it has text but no json)\n    debug('onInsert', { insertType, newValue })\n\n    const path: JSONPath = []\n    onReplaceJson(newValue, (patchedJson, patchedState) => ({\n      state: expandSmart(patchedJson, patchedState, path),\n      selection: isObjectOrArray(newValue)\n        ? createInsideSelection(path)\n        : createEditValueSelection(path)\n    }))\n  }\n}\n\nexport interface OnInsertCharacter {\n  char: string\n  selectInside: boolean\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onReplaceJson: (updatedJson: unknown, afterPatch: AfterPatchCallback) => void\n  onSelect: OnJSONSelect\n}\n\n// TODO: write unit tests\nexport async function onInsertCharacter({\n  char,\n  selectInside,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onReplaceJson,\n  onSelect\n}: OnInsertCharacter) {\n  // a regular key like a, A, _, etc. is entered.\n  // Replace selected contents with a new value having this first character as text\n  if (readOnly) {\n    return\n  }\n\n  if (isKeySelection(selection)) {\n    onSelect({ ...selection, edit: true, initialValue: char })\n    return\n  }\n\n  if (char === '{') {\n    onInsert({\n      insertType: 'object',\n      selectInside,\n      initialValue: undefined, // not relevant\n      json,\n      selection,\n      readOnly,\n      parser,\n      onPatch,\n      onReplaceJson\n    })\n  } else if (char === '[') {\n    onInsert({\n      insertType: 'array',\n      selectInside,\n      initialValue: undefined, // not relevant\n      json,\n      selection,\n      readOnly,\n      parser,\n      onPatch,\n      onReplaceJson\n    })\n  } else {\n    if (isValueSelection(selection) && json !== undefined) {\n      if (!isObjectOrArray(getIn(json, selection.path))) {\n        onSelect({ ...selection, edit: true, initialValue: char })\n      } else {\n        // TODO: replace the object/array with editing a text in edit mode?\n        //  (Ideally this this should not create an entry in history though,\n        //  which isn't really possible right now since we have to apply\n        //  a patch to change the object/array into a value)\n      }\n    } else {\n      debug('onInsertValueWithCharacter', { char })\n      await onInsertValueWithCharacter({\n        char,\n        json,\n        selection,\n        readOnly,\n        parser,\n        onPatch,\n        onReplaceJson\n      })\n    }\n  }\n}\n\ninterface OnInsertValueWithCharacter {\n  char: string\n  json: unknown | undefined\n  selection: JSONSelection | undefined\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onReplaceJson: (updatedJson: unknown, afterPatch: AfterPatchCallback) => void\n}\n\nasync function onInsertValueWithCharacter({\n  char,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onReplaceJson\n}: OnInsertValueWithCharacter) {\n  if (readOnly) {\n    return\n  }\n\n  // first insert a new value\n  onInsert({\n    insertType: 'value',\n    selectInside: false, // not relevant, we insert a value, not an object or array\n    initialValue: char,\n    json,\n    selection,\n    readOnly,\n    parser,\n    onPatch,\n    onReplaceJson\n  })\n}\n","<script lang=\"ts\">\n  import type { JSONParser } from '$lib/types'\n  import { truncate } from '$lib/utils/stringUtils.js'\n  import { getText } from '$lib/utils/jsonUtils.js'\n  import { MAX_CHARACTERS_TEXT_PREVIEW } from '$lib/constants.js'\n\n  export let text: string | undefined\n  export let json: unknown | undefined\n  export let indentation: number | string\n  export let parser: JSONParser\n\n  $: content = json !== undefined ? { json } : { text: text || '' }\n  $: truncated = truncate(getText(content, indentation, parser), MAX_CHARACTERS_TEXT_PREVIEW)\n</script>\n\n<div class=\"jse-json-preview\">\n  {truncated}\n</div>\n\n<style src=\"./JSONPreview.scss\"></style>\n","<script lang=\"ts\">\n  import type { MenuButton } from '$lib/types'\n  import Icon from 'svelte-awesome'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  export let item: MenuButton\n  export let className: string | undefined = undefined\n  export let onRequestClose: () => void\n</script>\n\n<button\n  type=\"button\"\n  class={classnames('jse-context-menu-button', className, item.className)}\n  on:click={(event) => {\n    onRequestClose()\n    item.onClick(event)\n  }}\n  title={item.title}\n  disabled={item.disabled || false}\n>\n  {#if item.icon}\n    <Icon data={item.icon} />\n  {/if}\n  {#if item.text}\n    {item.text}\n  {/if}\n</button>\n\n<style src=\"./ContextMenuButton.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faCaretDown } from '@fortawesome/free-solid-svg-icons'\n  import { onDestroy, onMount } from 'svelte'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import type { MenuButton } from '$lib/types.js'\n\n  export let items: MenuButton[] = []\n  export let title: string | undefined = undefined\n  export let width = '120px'\n\n  let visible = false\n\n  $: allItemsDisabled = items.every((item) => item.disabled === true)\n\n  function toggleShow() {\n    const wasVisible = visible\n\n    // trigger *after* the handleClick which changes visibility to false\n    setTimeout(() => (visible = !wasVisible))\n  }\n\n  function handleClick() {\n    visible = false\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    if (combo === 'Escape') {\n      event.preventDefault()\n      visible = false\n    }\n  }\n\n  onMount(() => {\n    document.addEventListener('click', handleClick)\n    document.addEventListener('keydown', handleKeyDown)\n  })\n\n  onDestroy(() => {\n    document.removeEventListener('click', handleClick)\n    document.removeEventListener('keydown', handleKeyDown)\n  })\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<div role=\"button\" tabindex=\"0\" class=\"jse-dropdown-button\" {title} on:click={handleClick}>\n  <slot name=\"defaultItem\" />\n\n  <button\n    type=\"button\"\n    class=\"jse-open-dropdown\"\n    data-type=\"jse-open-dropdown\"\n    class:jse-visible={visible}\n    on:click={toggleShow}\n    disabled={allItemsDisabled}\n  >\n    <Icon data={faCaretDown} />\n  </button>\n\n  <div class=\"jse-dropdown-items\" class:jse-visible={visible} style=\"width: {width};\">\n    <ul>\n      {#each items as item}\n        <li>\n          <button\n            type=\"button\"\n            on:click={(event) => item.onClick(event)}\n            title={item.title}\n            disabled={item.disabled}\n            class={item.className}\n          >\n            {#if item.icon}\n              <Icon data={item.icon} />\n            {/if}\n            {item.text}\n          </button>\n        </li>\n      {/each}\n    </ul>\n  </div>\n</div>\n\n<style src=\"./DropdownButton.scss\"></style>\n","<script lang=\"ts\">\n  import type { MenuDropDownButton } from '$lib/types'\n  import DropdownButton from '../DropdownButton.svelte'\n  import Icon from 'svelte-awesome'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  export let item: MenuDropDownButton\n  export let className: string | undefined = undefined\n  export let onRequestClose: () => void\n\n  $: items = item.items.map((item) => ({\n    ...item,\n    onClick: (event: MouseEvent) => {\n      onRequestClose()\n      item.onClick(event)\n    }\n  }))\n</script>\n\n<DropdownButton width={item.width} {items}>\n  <button\n    class={classnames('jse-context-menu-button', className, item.main.className)}\n    type=\"button\"\n    slot=\"defaultItem\"\n    title={item.main.title}\n    on:click={(event) => {\n      onRequestClose()\n      item.main.onClick(event)\n    }}\n    disabled={item.main.disabled || false}\n  >\n    {#if item.main.icon}\n      <Icon data={item.main.icon} />\n    {/if}\n    {item.main.text}\n  </button>\n</DropdownButton>\n\n<style src=\"./ContextMenuDropDownButton.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { onMount } from 'svelte'\n  import Icon from 'svelte-awesome'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { faLightbulb } from '@fortawesome/free-regular-svg-icons'\n  import { findNearestElement } from '$lib/utils/domUtils.js'\n  import type { ContextMenuItem, MenuItem } from '$lib/types.js'\n  import {\n    isContextMenuColumn,\n    isContextMenuRow,\n    isMenuButton,\n    isMenuDropDownButton,\n    isMenuLabel,\n    isMenuSeparator\n  } from '$lib/typeguards.js'\n  import ContextMenuButton from './ContextMenuButton.svelte'\n  import ContextMenuDropDownButton from './ContextMenuDropDownButton.svelte'\n\n  export let items: ContextMenuItem[]\n  export let onRequestClose: () => void\n  export let tip: string | undefined\n\n  let refContextMenu: HTMLDivElement\n\n  onMount(() => {\n    const firstEnabledButton = Array.from(refContextMenu.querySelectorAll('button')).find(\n      (button) => !button.disabled\n    )\n\n    if (firstEnabledButton) {\n      firstEnabledButton.focus()\n    }\n  })\n\n  const directionByCombo: Record<string, 'Up' | 'Down' | 'Left' | 'Right'> = {\n    ArrowUp: 'Up',\n    ArrowDown: 'Down',\n    ArrowLeft: 'Left',\n    ArrowRight: 'Right'\n  }\n\n  function handleKeyDown(event: KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    const combo = keyComboFromEvent(event)\n    const direction: 'Up' | 'Down' | 'Left' | 'Right' | undefined = directionByCombo[combo]\n\n    if (direction && event.target) {\n      event.preventDefault()\n\n      const buttons: HTMLButtonElement[] = Array.from(\n        refContextMenu.querySelectorAll('button:not([disabled])')\n      )\n      const nearest = findNearestElement<HTMLButtonElement>({\n        allElements: buttons,\n        currentElement: event.target as unknown as HTMLButtonElement,\n        direction,\n        hasPrio: (element: HTMLButtonElement) => {\n          return element.getAttribute('data-type') !== 'jse-open-dropdown'\n        }\n      })\n      if (nearest) {\n        nearest.focus()\n      }\n    }\n  }\n\n  function unknownMenuItem(item: MenuItem): string {\n    console.error('Unknown type of context menu item', item)\n    return '???'\n  }\n</script>\n\n<div\n  role=\"menu\"\n  tabindex=\"-1\"\n  class=\"jse-contextmenu\"\n  bind:this={refContextMenu}\n  on:keydown={handleKeyDown}\n>\n  {#each items as item}\n    {#if isMenuButton(item)}\n      <ContextMenuButton {item} {onRequestClose} />\n    {:else if isMenuDropDownButton(item)}\n      <ContextMenuDropDownButton {item} {onRequestClose} />\n    {:else if isContextMenuRow(item)}\n      <div class=\"jse-row\">\n        {#each item.items as rowItem}\n          {#if isMenuButton(rowItem)}\n            <ContextMenuButton item={rowItem} {onRequestClose} />\n          {:else if isMenuDropDownButton(rowItem)}\n            <ContextMenuDropDownButton item={rowItem} {onRequestClose} />\n          {:else if isContextMenuColumn(rowItem)}\n            <div class=\"jse-column\">\n              {#each rowItem.items as columnItem}\n                {#if isMenuButton(columnItem)}\n                  <ContextMenuButton className=\"left\" item={columnItem} {onRequestClose} />\n                {:else if isMenuDropDownButton(columnItem)}\n                  <ContextMenuDropDownButton className=\"left\" item={columnItem} {onRequestClose} />\n                {:else if isMenuSeparator(columnItem)}\n                  <div class=\"jse-separator\" />\n                {:else if isMenuLabel(columnItem)}\n                  <div class=\"jse-label\">\n                    {columnItem.text}\n                  </div>\n                {:else}\n                  {unknownMenuItem(columnItem)}\n                {/if}\n              {/each}\n            </div>\n          {:else if isMenuSeparator(rowItem)}\n            <div class=\"jse-separator\" />\n          {:else}\n            {unknownMenuItem(rowItem)}\n          {/if}\n        {/each}\n      </div>\n    {:else if isMenuSeparator(item)}\n      <div class=\"jse-separator\" />\n    {:else}\n      {unknownMenuItem(item)}\n    {/if}\n  {/each}\n\n  {#if tip}\n    <div class=\"jse-row\">\n      <div class=\"jse-tip\">\n        <div class=\"jse-tip-icon\">\n          <Icon data={faLightbulb} />\n        </div>\n        <div class=\"jse-tip-text\">{tip}</div>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style src=\"./ContextMenu.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { createAutoScrollHandler } from '../../controls/createAutoScrollHandler.js'\n  import { faCheck, faCode, faWrench } from '@fortawesome/free-solid-svg-icons'\n  import { createDebug } from '$lib/utils/debug.js'\n  import {\n    compileJSONPointer,\n    existsIn,\n    getIn,\n    immutableJSONPatch,\n    type JSONPatchDocument,\n    type JSONPath\n  } from 'immutable-json-patch'\n  import { jsonrepair } from 'jsonrepair'\n  import { initial, isEmpty, isEqual, noop, uniqueId } from 'lodash-es'\n  import { getContext, onDestroy, onMount, tick } from 'svelte'\n  import { createJump } from '$lib/assets/jump.js/src/jump.js'\n  import {\n    CONTEXT_MENU_HEIGHT,\n    CONTEXT_MENU_WIDTH,\n    SCROLL_DURATION,\n    SEARCH_BOX_HEIGHT\n  } from '$lib/constants.js'\n  import {\n    collapsePath,\n    createDocumentState,\n    documentStatePatch,\n    expandAll,\n    expandMinimal,\n    expandNone,\n    expandPath,\n    expandSection,\n    expandSelf,\n    expandSmart,\n    getEnforceString,\n    setInDocumentState,\n    syncDocumentState\n  } from '$lib/logic/documentState.js'\n  import { createHistory } from '$lib/logic/history.js'\n  import { duplicate, extract, revertJSONPatchWithMoveOperations } from '$lib/logic/operations.js'\n  import {\n    canConvert,\n    createAfterSelection,\n    createEditKeySelection,\n    createEditValueSelection,\n    createInsideSelection,\n    createSelectionFromOperations,\n    createValueSelection,\n    findRootPath,\n    getAnchorPath,\n    getEndPath,\n    getFocusPath,\n    getInitialSelection,\n    getSelectionDown,\n    getSelectionLeft,\n    getSelectionNextInside,\n    getSelectionPaths,\n    getSelectionRight,\n    getSelectionUp,\n    hasSelectionContents,\n    isAfterSelection,\n    isEditingSelection,\n    isInsideSelection,\n    isJSONSelection,\n    isKeySelection,\n    isMultiSelection,\n    isMultiSelectionWithOneItem,\n    isSelectionInsidePath,\n    isValueSelection,\n    removeEditModeFromSelection,\n    selectAll\n  } from '$lib/logic/selection.js'\n  import { toRecursiveValidationErrors, validateJSON } from '$lib/logic/validation.js'\n  import {\n    activeElementIsChildOf,\n    createNormalizationFunctions,\n    encodeDataPath,\n    findParentWithNodeName,\n    getWindow,\n    isChildOf,\n    isChildOfNodeName\n  } from '$lib/utils/domUtils.js'\n  import {\n    convertValue,\n    isJSONContent,\n    isTextContent,\n    normalizeJsonParseError,\n    parseAndRepair,\n    parsePartialJson,\n    repairPartialJson\n  } from '$lib/utils/jsonUtils.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { isObjectOrArray, isUrl, stringConvert } from '$lib/utils/typeUtils.js'\n  import { createFocusTracker } from '../../controls/createFocusTracker.js'\n  import Message from '../../controls/Message.svelte'\n  import ValidationErrorsOverview from '../../controls/ValidationErrorsOverview.svelte'\n  import CopyPasteModal from '../../modals/CopyPasteModal.svelte'\n  import JSONRepairModal from '../../modals/JSONRepairModal.svelte'\n  import JSONNode from './JSONNode.svelte'\n  import TreeMenu from './menu/TreeMenu.svelte'\n  import Welcome from './Welcome.svelte'\n  import NavigationBar from '../../controls/navigationBar/NavigationBar.svelte'\n  import SearchBox from '../../controls/SearchBox.svelte'\n  import type {\n    AbsolutePopupContext,\n    AbsolutePopupOptions,\n    AfterPatchCallback,\n    Content,\n    ContentErrors,\n    ContextMenuItem,\n    ConvertType,\n    DocumentState,\n    HistoryItem,\n    InsertType,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONPathParser,\n    JSONRepairModalProps,\n    JSONSelection,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnClassName,\n    OnError,\n    OnExpand,\n    OnFocus,\n    OnJSONEditorModal,\n    OnRenderContextMenuInternal,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    ParseError,\n    PastedJson,\n    SearchResultDetails,\n    SearchResults,\n    Section,\n    TransformModalOptions,\n    TreeModeContext,\n    ValidationError,\n    ValidationErrors,\n    Validator,\n    ValueNormalization\n  } from '$lib/types'\n  import { Mode, ValidationSeverity } from '$lib/types.js'\n  import memoizeOne from 'memoize-one'\n  import { measure } from '$lib/utils/timeUtils.js'\n  import {\n    onCopy,\n    onCut,\n    onInsert,\n    onInsertCharacter,\n    onPaste,\n    onRemove\n  } from '$lib/logic/actions.js'\n  import JSONPreview from '../../controls/JSONPreview.svelte'\n  import ContextMenu from '../../controls/contextmenu/ContextMenu.svelte'\n  import createTreeContextMenuItems from './contextmenu/createTreeContextMenuItems'\n  import { toRecursiveSearchResults as toRecursiveSearchResults } from 'svelte-jsoneditor/logic/search.js'\n\n  const debug = createDebug('jsoneditor:TreeMode')\n\n  const isSSR = typeof window === 'undefined'\n  debug('isSSR:', isSSR)\n\n  const sortModalId = uniqueId()\n  const transformModalId = uniqueId()\n\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n\n  let refContents: HTMLDivElement | undefined\n  let refHiddenInput: HTMLInputElement\n  let refJsonEditor: HTMLDivElement\n  let hasFocus = false\n  const jump = createJump()\n\n  export let readOnly: boolean\n  export let externalContent: Content\n  export let externalSelection: JSONEditorSelection | undefined\n  export let mainMenuBar: boolean\n  export let navigationBar: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validator: Validator | undefined\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n  export let indentation: number | string\n  export let onError: OnError\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onRenderValue: OnRenderValue\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onClassName: OnClassName | undefined\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n  export let onJSONEditorModal: OnJSONEditorModal\n\n  // modalOpen is true when one of the modals is open.\n  // This is used to track whether the editor still has focus\n  let modalOpen = false\n  let copyPasteModalOpen = false\n  let jsonRepairModalProps: JSONRepairModalProps | undefined = undefined\n\n  createFocusTracker({\n    onMount,\n    onDestroy,\n    getWindow: () => getWindow(refJsonEditor),\n    hasFocus: () => (modalOpen && document.hasFocus()) || activeElementIsChildOf(refJsonEditor),\n    onFocus: () => {\n      hasFocus = true\n      if (onFocus) {\n        onFocus()\n      }\n    },\n    onBlur: () => {\n      hasFocus = false\n      if (onBlur) {\n        onBlur()\n      }\n    }\n  })\n\n  let json: unknown | undefined\n  let text: string | undefined\n  let parseError: ParseError | undefined = undefined\n\n  let documentStateInitialized = false\n  let documentState: DocumentState | undefined = createDocumentState({ json })\n  let selection: JSONSelection | undefined\n\n  function handleSelect(updatedSelection: JSONSelection | undefined) {\n    selection = updatedSelection\n  }\n\n  function emitOnSelect(updatedSelection: JSONSelection | undefined) {\n    if (!isEqual(updatedSelection, externalSelection)) {\n      debug('onSelect', updatedSelection)\n      onSelect(updatedSelection)\n    }\n  }\n\n  $: emitOnSelect(selection)\n\n  let normalization: ValueNormalization\n  $: normalization = createNormalizationFunctions({\n    escapeControlCharacters,\n    escapeUnicodeCharacters\n  })\n\n  let pastedJson: PastedJson | undefined\n\n  let searchResultDetails: SearchResultDetails | undefined\n  let searchResults: SearchResults | undefined\n  let showSearch = false\n  let showReplace = false\n\n  $: applySearchBoxSpacing(showSearch)\n\n  function applySearchBoxSpacing(showSearch: boolean) {\n    if (!refContents) {\n      return\n    }\n\n    if (showSearch && refContents.scrollTop === 0) {\n      refContents.style.overflowAnchor = 'none'\n      refContents.scrollTop += SEARCH_BOX_HEIGHT\n      setTimeout(() => {\n        if (refContents) {\n          refContents.style.overflowAnchor = ''\n        }\n      })\n    }\n  }\n\n  function handleSearch(result: SearchResultDetails | undefined) {\n    searchResultDetails = result\n    searchResults = searchResultDetails\n      ? toRecursiveSearchResults(json, searchResultDetails.items)\n      : undefined\n  }\n\n  async function handleFocusSearch(path: JSONPath) {\n    documentState = expandPath(json, documentState, path, expandNone)\n    await scrollTo(path)\n  }\n\n  function handleCloseSearch() {\n    showSearch = false\n    showReplace = false\n    focus()\n  }\n\n  function handleSelectValidationError(error: ValidationError) {\n    debug('select validation error', error)\n\n    selection = createValueSelection(error.path)\n    scrollTo(error.path)\n  }\n\n  const history = createHistory<HistoryItem>({\n    onChange: (state) => {\n      historyState = state\n    }\n  })\n  let historyState = history.getState()\n\n  export function expand(path: JSONPath, callback: OnExpand = expandSelf) {\n    debug('expand')\n\n    documentState = expandPath(json, documentState, path, callback)\n  }\n\n  export function collapse(path: JSONPath, recursive: boolean) {\n    documentState = collapsePath(json, documentState, path, recursive)\n\n    if (selection) {\n      // check whether the selection is still visible and not collapsed\n      if (isSelectionInsidePath(selection, path)) {\n        // remove selection when not visible anymore\n        selection = undefined\n      }\n    }\n  }\n\n  // two-way binding of externalContent and internal json and text (\n  // when receiving an updated prop, we have to update state for example\n  $: applyExternalContent(externalContent)\n\n  $: applyExternalSelection(externalSelection)\n\n  let textIsRepaired = false\n\n  let validationErrorList: ValidationError[] = []\n  let validationErrors: ValidationErrors | undefined\n\n  $: updateValidationErrors(json, validator, parser, validationParser)\n\n  // because onChange returns the validation errors and there is also a separate listener,\n  // we would execute validation twice. Memoizing the last result solves this.\n  const memoizedValidate = memoizeOne(validateJSON)\n\n  function updateValidationErrors(\n    json: unknown,\n    validator: Validator | undefined,\n    parser: JSONParser,\n    validationParser: JSONParser\n  ) {\n    measure(\n      () => {\n        let newValidationErrorList: ValidationError[]\n        try {\n          newValidationErrorList = memoizedValidate(json, validator, parser, validationParser)\n        } catch (err) {\n          newValidationErrorList = [\n            {\n              path: [],\n              message: 'Failed to validate: ' + (err as Error).message,\n              severity: ValidationSeverity.warning\n            }\n          ]\n        }\n\n        if (!isEqual(newValidationErrorList, validationErrorList)) {\n          debug('validationErrors changed:', newValidationErrorList)\n          validationErrorList = newValidationErrorList\n          validationErrors = toRecursiveValidationErrors(json, validationErrorList)\n        }\n      },\n      (duration) => debug(`validationErrors updated in ${duration} ms`)\n    )\n  }\n\n  export function validate(): ContentErrors | undefined {\n    debug('validate')\n\n    if (parseError) {\n      return {\n        parseError,\n        isRepairable: false // not applicable, if repairable, we will not have a parseError\n      }\n    }\n\n    // make sure the validation results are up-to-date\n    // normally, they are only updated on the next tick after the json is changed\n    updateValidationErrors(json, validator, parser, validationParser)\n    return !isEmpty(validationErrorList) ? { validationErrors: validationErrorList } : undefined\n  }\n\n  export function getJson() {\n    return json\n  }\n\n  function getDocumentState(): DocumentState | undefined {\n    return documentState\n  }\n\n  function getSelection(): JSONSelection | undefined {\n    return selection\n  }\n\n  function applyExternalContent(updatedContent: Content) {\n    debug('applyExternalContent', { updatedContent })\n\n    if (isJSONContent(updatedContent)) {\n      applyExternalJson(updatedContent.json)\n    } else if (isTextContent(updatedContent)) {\n      applyExternalText(updatedContent.text)\n    }\n  }\n\n  function applyExternalJson(updatedJson: unknown | undefined) {\n    if (updatedJson === undefined) {\n      return\n    }\n\n    // TODO: this is inefficient. Make an optional flag promising that the updates are immutable so we don't have to do a deep equality check? First do some profiling!\n    const isChanged = !isEqual(json, updatedJson)\n\n    debug('update external json', { isChanged, currentlyText: json === undefined })\n\n    if (!isChanged) {\n      // no actual change, don't do anything\n      return\n    }\n\n    const previousState = { documentState, selection, json, text, textIsRepaired }\n\n    json = updatedJson\n    documentState = syncDocumentState(updatedJson, documentState)\n    expandWhenNotInitialized(json)\n    text = undefined\n    textIsRepaired = false\n    parseError = undefined\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem(previousState)\n  }\n\n  function applyExternalText(updatedText: string | undefined) {\n    if (updatedText === undefined || isJSONContent(externalContent)) {\n      return\n    }\n\n    const isChanged = updatedText !== text\n\n    debug('update external text', { isChanged })\n\n    if (!isChanged) {\n      // no actual change, don't do anything\n      return\n    }\n\n    const previousState = { documentState, selection, json, text, textIsRepaired }\n\n    try {\n      json = parseMemoizeOne(updatedText)\n      documentState = syncDocumentState(json, documentState)\n      expandWhenNotInitialized(json)\n      text = updatedText\n      textIsRepaired = false\n      parseError = undefined\n    } catch (err) {\n      try {\n        json = parseMemoizeOne(jsonrepair(updatedText))\n        documentState = syncDocumentState(json, documentState)\n        expandWhenNotInitialized(json)\n        text = updatedText\n        textIsRepaired = true\n        parseError = undefined\n        clearSelectionWhenNotExisting(json)\n      } catch (repairError) {\n        // no valid JSON, will show empty document or invalid json\n        json = undefined\n        documentState = undefined\n        text = externalContent['text']\n        textIsRepaired = false\n        parseError =\n          text !== undefined && text !== ''\n            ? normalizeJsonParseError(text, (err as Error).message || String(err))\n            : undefined\n      }\n    }\n\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem(previousState)\n  }\n\n  function applyExternalSelection(externalSelection: JSONEditorSelection | undefined) {\n    if (isEqual(selection, externalSelection)) {\n      return\n    }\n\n    debug('applyExternalSelection', { selection, externalSelection })\n\n    if (isJSONSelection(externalSelection)) {\n      selection = externalSelection\n    }\n  }\n\n  function expandWhenNotInitialized(json: unknown) {\n    if (!documentStateInitialized) {\n      documentStateInitialized = true\n      documentState = expandSmart(json, documentState, [])\n    }\n  }\n\n  function clearSelectionWhenNotExisting(json: unknown) {\n    if (!selection) {\n      return\n    }\n\n    if (existsIn(json, getAnchorPath(selection)) && existsIn(json, getFocusPath(selection))) {\n      return\n    }\n\n    debug('clearing selection: path does not exist anymore', selection)\n    selection = getInitialSelection(json, documentState)\n  }\n\n  interface PreviousState {\n    json: unknown | undefined\n    text: string | undefined\n    documentState: DocumentState | undefined\n    selection: JSONSelection | undefined\n    textIsRepaired: boolean\n  }\n\n  function addHistoryItem(previous: PreviousState) {\n    if (previous.json === undefined && previous.text === undefined) {\n      // initialization -> do not create a history item\n      return\n    }\n\n    const canPatch = json !== undefined && previous.json !== undefined\n\n    history.add({\n      undo: {\n        patch: canPatch ? [{ op: 'replace', path: '', value: previous.json }] : undefined,\n        json: previous.json,\n        text: previous.text,\n        documentState: previous.documentState,\n        textIsRepaired: previous.textIsRepaired,\n        selection: removeEditModeFromSelection(previous.selection),\n        sortedColumn: undefined\n      },\n      redo: {\n        patch: canPatch ? [{ op: 'replace', path: '', value: json }] : undefined,\n        json,\n        text,\n        documentState,\n        textIsRepaired,\n        selection: removeEditModeFromSelection(selection),\n        sortedColumn: undefined\n      }\n    })\n  }\n\n  function createDefaultSelection() {\n    debug('createDefaultSelection')\n\n    selection = createValueSelection([])\n  }\n\n  export function patch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    debug('patch', operations, afterPatch)\n\n    if (json === undefined) {\n      throw new Error('Cannot apply patch: no JSON')\n    }\n\n    const previousJson = json\n    const previousState = {\n      json: undefined, // not needed: we use patch to reconstruct the json\n      text,\n      documentState,\n      selection: removeEditModeFromSelection(selection),\n      textIsRepaired,\n      sortedColumn: undefined\n    }\n\n    // execute the patch operations\n    const undo: JSONPatchDocument = revertJSONPatchWithMoveOperations(\n      json,\n      operations\n    ) as JSONPatchDocument\n    const patched = documentStatePatch(json, documentState, operations)\n\n    // update the selection based on the operations\n    const updatedSelection = createSelectionFromOperations(json, operations) ?? selection\n\n    const callback =\n      typeof afterPatch === 'function'\n        ? afterPatch(patched.json, patched.documentState, updatedSelection)\n        : undefined\n\n    json = callback?.json !== undefined ? callback.json : patched.json\n    documentState = callback?.state !== undefined ? callback.state : patched.documentState\n    selection = callback?.selection !== undefined ? callback.selection : updatedSelection\n    text = undefined\n    textIsRepaired = false\n    pastedJson = undefined\n    parseError = undefined\n\n    // ensure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    history.add({\n      undo: {\n        patch: undo,\n        ...previousState\n      },\n      redo: {\n        patch: operations,\n        json: undefined, // not needed, we use patch to reconstruct\n        text,\n        documentState,\n        selection: removeEditModeFromSelection(selection),\n        sortedColumn: undefined,\n        textIsRepaired\n      }\n    })\n\n    return {\n      json,\n      previousJson,\n      undo,\n      redo: operations\n    }\n  }\n\n  // TODO: cleanup logging\n  // $: debug('json', json)\n  // $: debug('state', state)\n  // $: debug('selection', selection)\n\n  function handleEditKey() {\n    if (readOnly || !selection) {\n      return\n    }\n\n    selection = createEditKeySelection(getFocusPath(selection))\n  }\n\n  function handleEditValue() {\n    if (readOnly || !selection) {\n      return\n    }\n\n    const path = getFocusPath(selection)\n    const value = getIn(json, path)\n    if (isObjectOrArray(value)) {\n      openJSONEditorModal(path, value)\n    } else {\n      selection = createEditValueSelection(path)\n    }\n  }\n\n  function handleToggleEnforceString() {\n    if (readOnly || !isValueSelection(selection)) {\n      return\n    }\n\n    const path = getFocusPath(selection)\n    const pointer = compileJSONPointer(path)\n    const value = getIn(json, path)\n    const enforceString = !getEnforceString(json, documentState, path)\n    const updatedValue = enforceString ? String(value) : stringConvert(String(value), parser)\n\n    debug('handleToggleEnforceString', { enforceString, value, updatedValue })\n\n    handlePatch(\n      [\n        {\n          op: 'replace',\n          path: pointer,\n          value: updatedValue\n        }\n      ],\n      (_, patchedState) => {\n        return {\n          state: setInDocumentState(json, patchedState, path, { type: 'value', enforceString })\n        }\n      }\n    )\n  }\n\n  export function acceptAutoRepair(): Content {\n    if (textIsRepaired && json !== undefined) {\n      handleReplaceJson(json)\n    }\n\n    return json !== undefined ? { json } : { text: text || '' }\n  }\n\n  async function handleCut(indent = true) {\n    await onCut({\n      json,\n      selection,\n      indentation: indent ? indentation : undefined,\n      readOnly,\n      parser,\n      onPatch: handlePatch\n    })\n  }\n\n  async function handleCopy(indent = true) {\n    if (json === undefined) {\n      return\n    }\n\n    await onCopy({\n      json,\n      selection,\n      indentation: indent ? indentation : undefined,\n      parser\n    })\n  }\n\n  function handlePaste(event: ClipboardEvent) {\n    event.preventDefault()\n\n    const clipboardText = event.clipboardData?.getData('text/plain') as string | undefined\n    if (clipboardText === undefined) {\n      return\n    }\n\n    onPaste({\n      clipboardText,\n      json,\n      selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onChangeText: handleChangeText,\n      openRepairModal\n    })\n  }\n\n  function handlePasteFromMenu() {\n    copyPasteModalOpen = true\n  }\n\n  function openRepairModal(text: string, onApply: (repairedText: string) => void) {\n    jsonRepairModalProps = {\n      text,\n      onParse: (text) => parsePartialJson(text, (t) => parseAndRepair(t, parser)),\n      onRepair: repairPartialJson,\n      onApply,\n      onClose: focus\n    }\n  }\n\n  function handleRemove() {\n    onRemove({\n      json,\n      text,\n      selection,\n      keepSelection: false,\n      readOnly,\n      onChange,\n      onPatch: handlePatch\n    })\n  }\n\n  function handleDuplicate() {\n    if (\n      readOnly ||\n      json === undefined ||\n      !selection ||\n      !hasSelectionContents ||\n      isEmpty(getFocusPath(selection)) // root selected, cannot duplicate\n    ) {\n      return\n    }\n\n    debug('duplicate', { selection })\n\n    const operations = duplicate(json, getSelectionPaths(json, selection))\n\n    handlePatch(operations)\n  }\n\n  function handleExtract() {\n    if (\n      readOnly ||\n      !selection ||\n      (!isMultiSelection(selection) && !isValueSelection(selection)) ||\n      isEmpty(getFocusPath(selection)) // root selected, cannot extract\n    ) {\n      return\n    }\n\n    debug('extract', { selection })\n\n    const operations = extract(json, selection)\n\n    handlePatch(operations, (patchedJson, patchedState) => {\n      if (isObjectOrArray(patchedJson)) {\n        // expand extracted object/array\n        const path: JSONPath = []\n        return {\n          state: expandSmart(patchedJson, patchedState, path)\n        }\n      }\n\n      return undefined\n    })\n  }\n\n  function handleInsert(insertType: InsertType): void {\n    onInsert({\n      insertType,\n      selectInside: true,\n      initialValue: undefined,\n      json,\n      selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onReplaceJson: handleReplaceJson\n    })\n  }\n\n  function handleInsertFromContextMenu(type: InsertType) {\n    if (isKeySelection(selection)) {\n      // in this case, we do not want to rename the key, but replace the property\n      selection = createValueSelection(selection.path)\n    }\n\n    if (!selection) {\n      selection = getInitialSelection(json, documentState)\n    }\n\n    handleInsert(type)\n  }\n\n  function handleConvert(type: ConvertType) {\n    if (readOnly || !selection) {\n      return\n    }\n\n    if (!canConvert(selection)) {\n      onError(new Error(`Cannot convert current selection to ${type}`))\n      return\n    }\n\n    try {\n      const path = getAnchorPath(selection)\n      const currentValue: unknown = getIn(json, path)\n      const convertedValue = convertValue(\n        currentValue,\n        type as 'value' | 'object' | 'array',\n        parser\n      )\n      if (convertedValue === currentValue) {\n        // no change, do nothing\n        return\n      }\n\n      const operations: JSONPatchDocument = [\n        { op: 'replace', path: compileJSONPointer(path), value: convertedValue }\n      ]\n\n      debug('handleConvert', { selection, path, type, operations })\n\n      handlePatch(operations, (patchedJson, patchedState) => {\n        // expand converted object/array\n        return {\n          state: selection\n            ? expandSmart(patchedJson, patchedState, getFocusPath(selection))\n            : documentState\n        }\n      })\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  function handleInsertBefore() {\n    if (!selection) {\n      return\n    }\n\n    const selectionBefore = getSelectionUp(json, documentState, selection, false)\n    const parentPath = initial(getFocusPath(selection))\n\n    if (\n      selectionBefore &&\n      !isEmpty(getFocusPath(selectionBefore)) &&\n      isEqual(parentPath, initial(getFocusPath(selectionBefore)))\n    ) {\n      selection = createAfterSelection(getFocusPath(selectionBefore))\n    } else {\n      selection = createInsideSelection(parentPath)\n    }\n\n    debug('insert before', { selection, selectionBefore, parentPath })\n\n    tick().then(() => handleContextMenu())\n  }\n\n  function handleInsertAfter() {\n    if (!selection) {\n      return\n    }\n\n    const path = getEndPath(json, selection)\n\n    debug('insert after', path)\n\n    selection = createAfterSelection(path)\n\n    tick().then(() => handleContextMenu())\n  }\n\n  async function handleInsertCharacter(char: string) {\n    await onInsertCharacter({\n      char,\n      selectInside: true,\n      json,\n      selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onReplaceJson: handleReplaceJson,\n      onSelect: handleSelect\n    })\n  }\n\n  function handleUndo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canUndo) {\n      return\n    }\n\n    const item = history.undo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.undo.patch ? immutableJSONPatch(json, item.undo.patch) : item.undo.json\n    documentState = item.undo.documentState\n    selection = item.undo.selection\n    text = item.undo.text\n    textIsRepaired = item.undo.textIsRepaired\n    parseError = undefined\n\n    debug('undo', { item, json, documentState, selection })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.undo.patch,\n            undo: item.redo.patch\n          }\n        : undefined\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (selection) {\n      scrollTo(getFocusPath(selection), false)\n    }\n  }\n\n  function handleRedo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canRedo) {\n      return\n    }\n\n    const item = history.redo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.redo.patch ? immutableJSONPatch(json, item.redo.patch) : item.redo.json\n    documentState = item.redo.documentState\n    selection = item.redo.selection\n    text = item.redo.text\n    textIsRepaired = item.redo.textIsRepaired\n    parseError = undefined\n\n    debug('redo', { item, json, documentState, selection })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.redo.patch,\n            undo: item.undo.patch\n          }\n        : undefined\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (selection) {\n      scrollTo(getFocusPath(selection), false)\n    }\n  }\n\n  function openSortModal(rootPath: JSONPath) {\n    if (readOnly || json === undefined) {\n      return\n    }\n\n    modalOpen = true\n\n    onSortModal({\n      id: sortModalId,\n      json,\n      rootPath,\n      onSort: async ({ operations }) => {\n        debug('onSort', rootPath, operations)\n\n        handlePatch(operations, (patchedJson, patchedState) => ({\n          // expand the newly replaced array and select it\n          state: expandSmart(patchedJson, patchedState, rootPath),\n          selection: createValueSelection(rootPath)\n        }))\n      },\n      onClose: () => {\n        modalOpen = false\n        setTimeout(focus)\n      }\n    })\n  }\n\n  function handleSortSelection() {\n    if (!selection) {\n      return\n    }\n\n    const rootPath = findRootPath(json, selection)\n    openSortModal(rootPath)\n  }\n\n  function handleSortAll() {\n    const rootPath: JSONPath = []\n    openSortModal(rootPath)\n  }\n\n  /**\n   * This method is exposed via JSONEditor.transform\n   */\n  export function openTransformModal(options: TransformModalOptions) {\n    if (json === undefined) {\n      return\n    }\n\n    const { id, onTransform, onClose } = options\n    const rootPath = options.rootPath || []\n\n    modalOpen = true\n\n    onTransformModal({\n      id: id || transformModalId,\n      json,\n      rootPath,\n      onTransform: (operations) => {\n        if (onTransform) {\n          onTransform({\n            operations,\n            json,\n            transformedJson: immutableJSONPatch(json, operations)\n          })\n        } else {\n          debug('onTransform', rootPath, operations)\n\n          handlePatch(operations, (patchedJson, patchedState) => ({\n            // expand the newly replaced array and select it\n            state: expandSmart(patchedJson, patchedState, rootPath),\n            selection: createValueSelection(rootPath)\n          }))\n        }\n      },\n      onClose: () => {\n        modalOpen = false\n        setTimeout(focus)\n        if (onClose) {\n          onClose()\n        }\n      }\n    })\n  }\n\n  function handleTransformSelection() {\n    if (!selection) {\n      return\n    }\n\n    const rootPath = findRootPath(json, selection)\n    openTransformModal({\n      rootPath\n    })\n  }\n\n  function handleTransformAll() {\n    openTransformModal({\n      rootPath: []\n    })\n  }\n\n  function openJSONEditorModal(path: JSONPath, value: unknown) {\n    debug('openJSONEditorModal', { path, value })\n\n    modalOpen = true\n\n    // open a popup where you can edit the nested object/array\n    onJSONEditorModal({\n      content: {\n        json: value\n      },\n      path,\n      onPatch: context.onPatch,\n      onClose: () => {\n        modalOpen = false\n        setTimeout(focus)\n      }\n    })\n  }\n\n  /**\n   * Scroll the window vertically to the node with given path.\n   * Expand the path when needed.\n   */\n  export async function scrollTo(path: JSONPath, scrollToWhenVisible = true): Promise<void> {\n    documentState = expandPath(json, documentState, path, expandNone)\n    await tick() // await rerender (else the element we want to scroll to does not yet exist)\n\n    const elem = findElement(path)\n\n    debug('scrollTo', { path, elem, refContents })\n\n    if (!elem || !refContents) {\n      return Promise.resolve()\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    const elemRect = elem.getBoundingClientRect()\n    if (!scrollToWhenVisible) {\n      if (elemRect.bottom > viewPortRect.top && elemRect.top < viewPortRect.bottom) {\n        // element is fully or partially visible, don't scroll to it\n        return Promise.resolve()\n      }\n    }\n\n    const offset = -(viewPortRect.height / 4)\n\n    return new Promise<void>((resolve) => {\n      jump(elem, {\n        container: refContents,\n        offset,\n        duration: SCROLL_DURATION,\n        callback: () => resolve()\n      })\n    })\n  }\n\n  /**\n   * Find the DOM element of a given path.\n   * Note that the path can only be found when the node is expanded.\n   */\n  export function findElement(path: JSONPath): Element | undefined {\n    return refContents?.querySelector(`div[data-path=\"${encodeDataPath(path)}\"]`) ?? undefined\n  }\n\n  /**\n   * If given path is outside the visible viewport, scroll up/down.\n   * When the path is already in view, nothing is done\n   */\n  function scrollIntoView(path: JSONPath) {\n    const elem = findElement(path)\n\n    if (!elem || !refContents) {\n      return\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    const elemRect = elem.getBoundingClientRect()\n    const margin = 20\n    const elemHeight = isObjectOrArray(getIn(json, path))\n      ? margin // do not use real height when array or object\n      : elemRect.height\n\n    if (elemRect.top < viewPortRect.top + margin) {\n      // scroll down\n      jump(elem, {\n        container: refContents,\n        offset: -margin,\n        duration: 0\n      })\n    } else if (elemRect.top + elemHeight > viewPortRect.bottom - margin) {\n      // scroll up\n      jump(elem, {\n        container: refContents,\n        offset: -(viewPortRect.height - elemHeight - margin),\n        duration: 0\n      })\n    }\n  }\n\n  function emitOnChange(previousContent: Content, patchResult: JSONPatchResult | undefined) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (previousContent.json === undefined && previousContent?.text === undefined) {\n      // initialization -> do not fire an onChange event\n      return\n    }\n\n    // make sure we cannot send an invalid contents like having both\n    // json and text defined, or having none defined\n    if (text !== undefined) {\n      const content = { text, json: undefined }\n      onChange?.(content, previousContent, {\n        contentErrors: validate(),\n        patchResult\n      })\n    } else if (json !== undefined) {\n      const content = { text: undefined, json }\n      onChange?.(content, previousContent, {\n        contentErrors: validate(),\n        patchResult\n      })\n    }\n  }\n\n  function handlePatch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    debug('handlePatch', operations, afterPatch)\n\n    const previousContent = { json, text }\n    const patchResult = patch(operations, afterPatch)\n\n    emitOnChange(previousContent, patchResult)\n\n    return patchResult\n  }\n\n  function handleReplaceJson(updatedJson: unknown, afterPatch?: AfterPatchCallback) {\n    const previousContent = { json, text }\n    const previousState = { documentState, selection, json, text, textIsRepaired }\n\n    const updatedState = expandPath(\n      json,\n      syncDocumentState(updatedJson, documentState),\n      [],\n      expandMinimal\n    )\n\n    const callback =\n      typeof afterPatch === 'function'\n        ? afterPatch(updatedJson, updatedState, selection)\n        : undefined\n\n    json = callback?.json !== undefined ? callback.json : updatedJson\n    documentState = callback?.state !== undefined ? callback.state : updatedState\n    selection = callback?.selection !== undefined ? callback.selection : selection\n    text = undefined\n    textIsRepaired = false\n    parseError = undefined\n\n    // make sure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem(previousState)\n\n    // we could work out a patchResult, or use patch(), but only when the previous and new\n    // contents are both json and not text. We go for simplicity and consistency here and\n    // do _not_ return a patchResult ever.\n    const patchResult = undefined\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  function handleChangeText(updatedText: string, afterPatch?: AfterPatchCallback) {\n    debug('handleChangeText')\n\n    const previousContent = { json, text }\n    const previousState = { documentState, selection, json, text, textIsRepaired }\n\n    try {\n      json = parseMemoizeOne(updatedText)\n      documentState = expandPath(json, syncDocumentState(json, documentState), [], expandMinimal)\n      text = undefined\n      textIsRepaired = false\n      parseError = undefined\n    } catch (err) {\n      try {\n        json = parseMemoizeOne(jsonrepair(updatedText))\n        documentState = expandPath(json, syncDocumentState(json, documentState), [], expandMinimal)\n        text = updatedText\n        textIsRepaired = true\n        parseError = undefined\n      } catch (repairError) {\n        // no valid JSON, will show empty document or invalid json\n        json = undefined\n        documentState = createDocumentState({ json, expand: expandMinimal })\n        text = updatedText\n        textIsRepaired = false\n        parseError =\n          text !== ''\n            ? normalizeJsonParseError(text, (err as Error).message || String(err))\n            : undefined\n      }\n    }\n\n    if (typeof afterPatch === 'function') {\n      const callback = afterPatch(json, documentState, selection)\n\n      json = callback?.json !== undefined ? callback.json : json\n      documentState = callback?.state !== undefined ? callback.state : documentState\n      selection = callback?.selection !== undefined ? callback.selection : selection\n    }\n\n    // ensure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem(previousState)\n\n    // no JSON patch actions available in text mode\n    const patchResult = undefined\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  /**\n   * Toggle expanded state of a node\n   * @param path The path to be expanded\n   * @param expanded  True if currently expanded, false when currently collapsed\n   * @param [recursive=false]  Only applicable when expanding\n   */\n  function handleExpand(path: JSONPath, expanded: boolean, recursive = false): void {\n    debug('handleExpand', { path, expanded, recursive })\n\n    if (expanded) {\n      expand(path, recursive ? expandAll : expandSelf)\n    } else {\n      collapse(path, recursive)\n    }\n\n    // set focus to the hidden input, so we can capture quick keys like Ctrl+X, Ctrl+C, Ctrl+V\n    focus()\n  }\n\n  function handleExpandAll() {\n    handleExpand([], true, true)\n  }\n\n  function handleCollapseAll() {\n    handleExpand([], false, true)\n  }\n\n  function openFind(findAndReplace: boolean): void {\n    debug('openFind', { findAndReplace })\n\n    showSearch = false\n    showReplace = false\n\n    tick().then(() => {\n      // trick to make sure the focus goes to the search box\n      showSearch = true\n      showReplace = findAndReplace\n    })\n  }\n\n  function handleExpandSection(path: JSONPath, section: Section) {\n    debug('handleExpandSection', path, section)\n\n    documentState = expandSection(json, documentState, path, section)\n  }\n\n  function handlePasteJson(newPastedJson: PastedJson) {\n    debug('pasted json as text', newPastedJson)\n\n    pastedJson = newPastedJson\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    const keepAnchorPath = event.shiftKey\n    debug('keydown', { combo, key: event.key })\n\n    if (combo === 'Ctrl+X') {\n      // cut formatted\n      event.preventDefault()\n      handleCut(true)\n    }\n    if (combo === 'Ctrl+Shift+X') {\n      // cut compact\n      event.preventDefault()\n      handleCut(false)\n    }\n    if (combo === 'Ctrl+C') {\n      // copy formatted\n      event.preventDefault()\n      handleCopy(true)\n    }\n    if (combo === 'Ctrl+Shift+C') {\n      // copy compact\n      event.preventDefault()\n      handleCopy(false)\n    }\n    // Note: Ctrl+V (paste) is handled by the on:paste event\n\n    if (combo === 'Ctrl+D') {\n      event.preventDefault()\n      handleDuplicate()\n    }\n    if (combo === 'Delete' || combo === 'Backspace') {\n      event.preventDefault()\n      handleRemove()\n    }\n    if (combo === 'Insert') {\n      event.preventDefault()\n      handleInsert('structure')\n    }\n    if (combo === 'Ctrl+A') {\n      event.preventDefault()\n      selection = selectAll()\n    }\n\n    if (combo === 'Ctrl+Q') {\n      handleContextMenu(event)\n    }\n\n    if (combo === 'ArrowUp' || combo === 'Shift+ArrowUp') {\n      event.preventDefault()\n\n      const newSelection = selection\n        ? getSelectionUp(json, documentState, selection, keepAnchorPath) || selection\n        : getInitialSelection(json, documentState)\n\n      selection = newSelection\n      scrollIntoView(getFocusPath(newSelection))\n    }\n    if (combo === 'ArrowDown' || combo === 'Shift+ArrowDown') {\n      event.preventDefault()\n\n      const newSelection = selection\n        ? getSelectionDown(json, documentState, selection, keepAnchorPath) || selection\n        : getInitialSelection(json, documentState)\n\n      selection = newSelection\n      scrollIntoView(getFocusPath(newSelection))\n    }\n    if (combo === 'ArrowLeft' || combo === 'Shift+ArrowLeft') {\n      event.preventDefault()\n\n      const newSelection = selection\n        ? getSelectionLeft(json, documentState, selection, keepAnchorPath, !readOnly) || selection\n        : getInitialSelection(json, documentState)\n\n      selection = newSelection\n      scrollIntoView(getFocusPath(newSelection))\n    }\n    if (combo === 'ArrowRight' || combo === 'Shift+ArrowRight') {\n      event.preventDefault()\n\n      const newSelection =\n        selection && json !== undefined\n          ? getSelectionRight(json, documentState, selection, keepAnchorPath, !readOnly) ||\n            selection\n          : getInitialSelection(json, documentState)\n\n      selection = newSelection\n      scrollIntoView(getFocusPath(newSelection))\n    }\n\n    if (combo === 'Enter' && selection) {\n      // when the selection consists of a single Array item, change selection to editing its value\n      if (isMultiSelectionWithOneItem(selection)) {\n        const path = selection.focusPath\n        const parent = getIn(json, initial(path))\n        if (Array.isArray(parent)) {\n          // change into selection of the value\n          selection = createValueSelection(path)\n        }\n      }\n\n      if (isKeySelection(selection)) {\n        // go to key edit mode\n        event.preventDefault()\n        selection = { ...selection, edit: true }\n      }\n\n      if (isValueSelection(selection)) {\n        event.preventDefault()\n\n        const value = getIn(json, selection.path)\n        if (isObjectOrArray(value)) {\n          // expand object/array\n          handleExpand(selection.path, true)\n        } else {\n          // go to value edit mode\n          selection = { ...selection, edit: true }\n        }\n      }\n    }\n\n    const normalizedCombo = combo.replace(/^Shift\\+/, '') // replace 'Shift+A' with 'A'\n    if (normalizedCombo.length === 1 && selection) {\n      // a regular key like a, A, _, etc is entered.\n      // Replace selected contents with a new value having this first character as text\n      event.preventDefault()\n      handleInsertCharacter(event.key)\n      return\n    }\n\n    if (combo === 'Enter' && (isAfterSelection(selection) || isInsideSelection(selection))) {\n      // Enter on an insert area -> open the area in edit mode\n      event.preventDefault()\n      handleInsertCharacter('')\n      return\n    }\n\n    if (combo === 'Ctrl+Enter' && isValueSelection(selection)) {\n      const value = getIn(json, selection.path)\n\n      if (isUrl(value)) {\n        // open url in new page\n        window.open(String(value), '_blank')\n      }\n    }\n\n    if (combo === 'Escape' && selection) {\n      event.preventDefault()\n      selection = undefined\n    }\n\n    if (combo === 'Ctrl+F') {\n      event.preventDefault()\n      openFind(false)\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      openFind(true)\n    }\n\n    if (combo === 'Ctrl+Z') {\n      event.preventDefault()\n      handleUndo()\n    }\n\n    if (combo === 'Ctrl+Shift+Z') {\n      event.preventDefault()\n      handleRedo()\n    }\n  }\n\n  function handleMouseDown(event: Event) {\n    debug('handleMouseDown', event)\n\n    const target = event.target as HTMLElement\n\n    if (!isChildOfNodeName(target, 'BUTTON') && !target.isContentEditable) {\n      // for example when clicking on the empty area in the main menu\n      focus()\n\n      if (!selection && json === undefined && (text === '' || text === undefined)) {\n        createDefaultSelection()\n      }\n    }\n  }\n\n  function openContextMenu({\n    anchor,\n    left,\n    top,\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n    showTip\n  }: AbsolutePopupOptions) {\n    const defaultItems: ContextMenuItem[] = createTreeContextMenuItems({\n      json,\n      documentState,\n      selection,\n      readOnly,\n\n      onEditKey: handleEditKey,\n      onEditValue: handleEditValue,\n      onToggleEnforceString: handleToggleEnforceString,\n\n      onCut: handleCut,\n      onCopy: handleCopy,\n      onPaste: handlePasteFromMenu,\n\n      onRemove: handleRemove,\n      onDuplicate: handleDuplicate,\n      onExtract: handleExtract,\n\n      onInsertBefore: handleInsertBefore,\n      onInsert: handleInsertFromContextMenu,\n      onInsertAfter: handleInsertAfter,\n      onConvert: handleConvert,\n\n      onSort: handleSortSelection,\n      onTransform: handleTransformSelection\n    })\n\n    const items = onRenderContextMenu(defaultItems) ?? defaultItems\n\n    if (items === false) {\n      return\n    }\n\n    const props = {\n      tip: showTip\n        ? 'Tip: you can open this context menu via right-click or with Ctrl+Q'\n        : undefined,\n      items,\n      onRequestClose: () => closeAbsolutePopup(popupId)\n    }\n\n    const options = {\n      left,\n      top,\n      offsetTop,\n      offsetLeft,\n      width,\n      height,\n      anchor,\n      closeOnOuterClick: true,\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    }\n\n    modalOpen = true\n\n    const popupId = openAbsolutePopup(ContextMenu, props, options)\n  }\n\n  function handleContextMenu(event?: Event) {\n    if (isEditingSelection(selection)) {\n      return\n    }\n\n    if (event) {\n      event.stopPropagation()\n      event.preventDefault()\n    }\n\n    if (event && event.type === 'contextmenu' && event.target !== refHiddenInput) {\n      // right mouse click to open context menu\n      openContextMenu({\n        left: (event as MouseEvent).clientX,\n        top: (event as MouseEvent).clientY,\n        width: CONTEXT_MENU_WIDTH,\n        height: CONTEXT_MENU_HEIGHT,\n        showTip: false\n      })\n    } else {\n      // type === 'keydown' (from the quick key Ctrl+Q)\n      // or target is hidden input -> context menu button on keyboard\n      const anchor = refContents?.querySelector('.jse-context-menu-pointer.jse-selected')\n      if (anchor) {\n        openContextMenu({\n          anchor,\n          offsetTop: 2,\n          width: CONTEXT_MENU_WIDTH,\n          height: CONTEXT_MENU_HEIGHT,\n          showTip: false\n        })\n      } else {\n        // fallback on just displaying the TreeContextMenu top left\n        const rect = refContents?.getBoundingClientRect()\n        if (rect) {\n          openContextMenu({\n            top: rect.top + 2,\n            left: rect.left + 2,\n            width: CONTEXT_MENU_WIDTH,\n            height: CONTEXT_MENU_HEIGHT,\n            showTip: false\n          })\n        }\n      }\n    }\n  }\n\n  function handleContextMenuFromTreeMenu(event: MouseEvent) {\n    openContextMenu({\n      anchor: findParentWithNodeName(event.target as HTMLElement, 'BUTTON'),\n      offsetTop: 0,\n      width: CONTEXT_MENU_WIDTH,\n      height: CONTEXT_MENU_HEIGHT,\n      showTip: true\n    })\n  }\n\n  async function handleParsePastedJson() {\n    debug('apply pasted json', pastedJson)\n    if (!pastedJson) {\n      return\n    }\n\n    const { onPasteAsJson } = pastedJson\n    pastedJson = undefined\n\n    onPasteAsJson()\n\n    // TODO: get rid of the setTimeout here\n    setTimeout(focus)\n  }\n\n  function handleClearPastedJson() {\n    debug('clear pasted json')\n    pastedJson = undefined\n    focus()\n  }\n\n  function handleRequestRepair() {\n    onChangeMode(Mode.text)\n  }\n\n  function handleNavigationBarSelect(newSelection: JSONSelection) {\n    selection = newSelection\n\n    focus()\n    scrollTo(getFocusPath(newSelection))\n  }\n\n  export function focus() {\n    debug('focus')\n    // with just .focus(), sometimes the input doesn't react on onpaste events\n    // in Chrome when having a large document open and then doing cut/paste.\n    // Calling both .focus() and .select() did solve this issue.\n    if (refHiddenInput) {\n      refHiddenInput.focus()\n      refHiddenInput.select()\n    }\n  }\n\n  function handleWindowMouseDown(event: MouseEvent & { currentTarget: EventTarget & Window }) {\n    const outsideEditor = !isChildOf(\n      event.target as Element,\n      (element) => element === refJsonEditor\n    )\n    if (outsideEditor) {\n      if (isEditingSelection(selection)) {\n        debug('click outside the editor, exit edit mode')\n        selection = removeEditModeFromSelection(selection)\n\n        if (hasFocus && refHiddenInput) {\n          refHiddenInput.focus()\n          refHiddenInput.blur()\n        }\n\n        debug('blur (outside editor)')\n        if (refHiddenInput) {\n          refHiddenInput.blur()\n        }\n      }\n    }\n  }\n\n  function findNextInside(path: JSONPath): JSONSelection | undefined {\n    return getSelectionNextInside(json, documentState, path)\n  }\n\n  $: autoScrollHandler = refContents ? createAutoScrollHandler(refContents) : undefined\n\n  function handleDrag(event: MouseEvent) {\n    if (autoScrollHandler) {\n      autoScrollHandler.onDrag(event)\n    }\n  }\n\n  function handleDragEnd() {\n    if (autoScrollHandler) {\n      autoScrollHandler.onDragEnd()\n    }\n  }\n\n  // Note that we want the context to change as little as possible since it forces all nodes to re-render,\n  // it should only change when a config option like readOnly or onClassName is changed\n  let context: TreeModeContext\n  $: context = {\n    mode: Mode.tree,\n    readOnly,\n    parser,\n    normalization,\n    getJson,\n    getDocumentState,\n    getSelection,\n    findElement,\n    findNextInside,\n    focus,\n    onPatch: handlePatch,\n    onInsert: handleInsert,\n    onExpand: handleExpand,\n    onSelect: handleSelect,\n    onFind: openFind,\n    onExpandSection: handleExpandSection,\n    onPasteJson: handlePasteJson,\n    onRenderValue,\n    onContextMenu: openContextMenu,\n    onClassName: onClassName || (() => undefined),\n    onDrag: handleDrag,\n    onDragEnd: handleDragEnd\n  }\n\n  $: debug('context changed', context)\n</script>\n\n<svelte:window on:mousedown={handleWindowMouseDown} />\n\n<div\n  role=\"tree\"\n  tabindex=\"-1\"\n  class=\"jse-tree-mode\"\n  class:no-main-menu={!mainMenuBar}\n  on:keydown={handleKeyDown}\n  on:mousedown={handleMouseDown}\n  on:contextmenu={handleContextMenu}\n  bind:this={refJsonEditor}\n>\n  {#if mainMenuBar}\n    <TreeMenu\n      {json}\n      {selection}\n      {readOnly}\n      {historyState}\n      bind:showSearch\n      onExpandAll={handleExpandAll}\n      onCollapseAll={handleCollapseAll}\n      onUndo={handleUndo}\n      onRedo={handleRedo}\n      onSort={handleSortAll}\n      onTransform={handleTransformAll}\n      onContextMenu={handleContextMenuFromTreeMenu}\n      onCopy={handleCopy}\n      {onRenderMenu}\n    />\n  {/if}\n\n  {#if navigationBar}\n    <NavigationBar {json} {selection} onSelect={handleNavigationBarSelect} {onError} {pathParser} />\n  {/if}\n\n  {#if !isSSR}\n    <label class=\"jse-hidden-input-label\">\n      <input\n        type=\"text\"\n        readonly={true}\n        tabindex=\"-1\"\n        class=\"jse-hidden-input\"\n        bind:this={refHiddenInput}\n        on:paste={handlePaste}\n      />\n    </label>\n    {#if json === undefined}\n      {#if text === '' || text === undefined}\n        <Welcome\n          {readOnly}\n          onCreateObject={() => {\n            focus()\n            handleInsertCharacter('{')\n          }}\n          onCreateArray={() => {\n            focus()\n            handleInsertCharacter('[')\n          }}\n          onClick={() => {\n            // FIXME: this is a workaround for the editor not putting the focus on refHiddenInput\n            //  when clicking in the welcome screen so you cannot paste a document from clipboard.\n            focus()\n          }}\n        />\n      {:else}\n        <Message\n          type=\"error\"\n          message=\"The loaded JSON document is invalid and could not be repaired automatically.\"\n          actions={!readOnly\n            ? [\n                {\n                  icon: faCode,\n                  text: 'Repair manually',\n                  title: 'Open the document in \"code\" mode and repair it manually',\n                  onClick: handleRequestRepair\n                }\n              ]\n            : []}\n        />\n        <JSONPreview {text} {json} {indentation} {parser} />\n      {/if}\n    {:else}\n      <div class=\"jse-search-box-container\">\n        <SearchBox\n          {json}\n          {documentState}\n          {parser}\n          {showSearch}\n          {showReplace}\n          {readOnly}\n          columns={undefined}\n          onSearch={handleSearch}\n          onFocus={handleFocusSearch}\n          onPatch={handlePatch}\n          onClose={handleCloseSearch}\n        />\n      </div>\n      <div class=\"jse-contents\" data-jsoneditor-scrollable-contents={true} bind:this={refContents}>\n        {#if showSearch}\n          <div class=\"jse-search-box-background\"></div>\n        {/if}\n        <JSONNode\n          value={json}\n          pointer={''}\n          state={documentState}\n          {validationErrors}\n          {searchResults}\n          {selection}\n          {context}\n          onDragSelectionStart={noop}\n        />\n      </div>\n\n      {#if pastedJson}\n        <Message\n          type=\"info\"\n          message={`You pasted a JSON ${\n            Array.isArray(pastedJson.contents) ? 'array' : 'object'\n          } as text`}\n          actions={[\n            {\n              icon: faWrench,\n              text: 'Paste as JSON instead',\n              title: 'Replace the value with the pasted JSON',\n              // We use mousedown here instead of click: this message pops up\n              // whilst the user is editing a value. When clicking this button,\n              // the actual value is applied and the event is not propagated\n              // and an onClick on this button never happens.\n              onMouseDown: handleParsePastedJson\n            },\n            {\n              text: 'Leave as is',\n              title: 'Keep the JSON embedded in the value',\n              onClick: handleClearPastedJson\n            }\n          ]}\n        />\n      {/if}\n\n      {#if textIsRepaired}\n        <Message\n          type=\"success\"\n          message=\"The loaded JSON document was invalid but is successfully repaired.\"\n          actions={!readOnly\n            ? [\n                {\n                  icon: faCheck,\n                  text: 'Ok',\n                  title: 'Accept the repaired document',\n                  onClick: acceptAutoRepair\n                },\n                {\n                  icon: faCode,\n                  text: 'Repair manually instead',\n                  title: 'Leave the document unchanged and repair it manually instead',\n                  onClick: handleRequestRepair\n                }\n              ]\n            : []}\n          onClose={focus}\n        />\n      {/if}\n\n      <ValidationErrorsOverview\n        validationErrors={validationErrorList}\n        selectError={handleSelectValidationError}\n      />\n    {/if}\n  {:else}\n    <div class=\"jse-contents\">\n      <div class=\"jse-loading-space\" />\n      <div class=\"jse-loading\">loading...</div>\n    </div>\n  {/if}\n</div>\n\n{#if copyPasteModalOpen}\n  <CopyPasteModal onClose={() => (copyPasteModalOpen = false)} />\n{/if}\n\n{#if jsonRepairModalProps}\n  <JSONRepairModal\n    {...jsonRepairModalProps}\n    onClose={() => {\n      jsonRepairModalProps?.onClose()\n      jsonRepairModalProps = undefined\n    }}\n  />\n{/if}\n\n<style src=\"./TreeMode.scss\"></style>\n","import {\n  faArrowRightArrowLeft,\n  faCaretSquareDown,\n  faCaretSquareUp,\n  faCheckSquare,\n  faClone,\n  faCopy,\n  faCropAlt,\n  faCut,\n  faFilter,\n  faPaste,\n  faPen,\n  faPlus,\n  faSortAmountDownAlt,\n  faSquare,\n  faTrashCan\n} from '@fortawesome/free-solid-svg-icons'\nimport {\n  canConvert,\n  getFocusPath,\n  isAfterSelection,\n  isInsideSelection,\n  isKeySelection,\n  isMultiSelection,\n  isValueSelection,\n  singleItemSelected\n} from '$lib/logic/selection'\nimport type {\n  ConvertType,\n  DocumentState,\n  InsertType,\n  JSONParser,\n  JSONSelection,\n  ContextMenuItem\n} from '$lib/types'\nimport { initial, isEmpty } from 'lodash-es'\nimport { getIn } from 'immutable-json-patch'\nimport { isObject, isObjectOrArray } from '$lib/utils/typeUtils'\nimport { getEnforceString } from '$lib/logic/documentState'\n\nexport default function ({\n  json,\n  documentState,\n  selection,\n  readOnly,\n  onEditKey,\n  onEditValue,\n  onToggleEnforceString,\n  onCut,\n  onCopy,\n  onPaste,\n  onRemove,\n  onDuplicate,\n  onExtract,\n  onInsertBefore,\n  onInsert,\n  onConvert,\n  onInsertAfter,\n  onSort,\n  onTransform\n}: {\n  json: unknown\n  documentState: DocumentState | undefined\n  selection: JSONSelection | undefined\n  readOnly: boolean\n  onEditKey: () => void\n  onEditValue: () => void\n  onToggleEnforceString: () => void\n  onCut: (indent: boolean) => void\n  onCopy: (indent: boolean) => void\n  onPaste: () => void\n  onRemove: () => void\n  onDuplicate: () => void\n  onExtract: () => void\n  onInsertBefore: () => void\n  onInsert: (type: InsertType) => void\n  onConvert: (type: ConvertType) => void\n  onInsertAfter: () => void\n  onSort: () => void\n  onTransform: () => void\n}): ContextMenuItem[] {\n  const hasJson = json !== undefined\n  const hasSelection = !!selection\n  const rootSelected = selection ? isEmpty(getFocusPath(selection)) : false\n  const focusValue = selection ? getIn(json, getFocusPath(selection)) : undefined\n  const editValueText = Array.isArray(focusValue)\n    ? 'Edit array'\n    : isObject(focusValue)\n      ? 'Edit object'\n      : 'Edit value'\n\n  const hasSelectionContents =\n    hasJson &&\n    (isMultiSelection(selection) || isKeySelection(selection) || isValueSelection(selection))\n\n  const parent =\n    selection && !rootSelected ? getIn(json, initial(getFocusPath(selection))) : undefined\n\n  const canEditKey =\n    !readOnly && hasJson && singleItemSelected(selection) && !rootSelected && !Array.isArray(parent)\n\n  const canEditValue =\n    !readOnly && hasJson && selection !== undefined && singleItemSelected(selection)\n  const canEnforceString = canEditValue && !isObjectOrArray(focusValue)\n\n  const canCut = !readOnly && hasSelectionContents\n  const canCopy = hasSelectionContents\n  const canPaste = !readOnly && hasSelection\n  const canDuplicate = !readOnly && hasJson && hasSelectionContents && !rootSelected // must not be root\n  const canExtract =\n    !readOnly &&\n    hasJson &&\n    selection !== undefined &&\n    (isMultiSelection(selection) || isValueSelection(selection)) &&\n    !rootSelected // must not be root\n\n  const convertMode = hasSelectionContents\n  const insertOrConvertText = convertMode ? 'Convert to:' : 'Insert:'\n\n  const canInsertOrConvertStructure =\n    !readOnly &&\n    ((isInsideSelection(selection) && Array.isArray(focusValue)) ||\n      (isAfterSelection(selection) && Array.isArray(parent)))\n  const canInsertOrConvertObject =\n    !readOnly && (convertMode ? canConvert(selection) && !isObject(focusValue) : hasSelection)\n  const canInsertOrConvertArray =\n    !readOnly && (convertMode ? canConvert(selection) && !Array.isArray(focusValue) : hasSelection)\n  const canInsertOrConvertValue =\n    !readOnly && (convertMode ? canConvert(selection) && isObjectOrArray(focusValue) : hasSelection)\n\n  const enforceString =\n    selection !== undefined ? getEnforceString(json, documentState, getFocusPath(selection)) : false\n\n  function handleInsertOrConvert(type: InsertType) {\n    if (hasSelectionContents) {\n      if (type !== 'structure') {\n        onConvert(type)\n      }\n    } else {\n      onInsert(type)\n    }\n  }\n\n  return [\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'button',\n          onClick: () => onEditKey(),\n          icon: faPen,\n          text: 'Edit key',\n          title: 'Edit the key (Double-click on the key)',\n          disabled: !canEditKey\n        },\n        {\n          type: 'dropdown-button',\n          main: {\n            type: 'button',\n            onClick: () => onEditValue(),\n            icon: faPen,\n            text: editValueText,\n            title: 'Edit the value (Double-click on the value)',\n            disabled: !canEditValue\n          },\n          width: '11em',\n          items: [\n            {\n              type: 'button',\n              icon: faPen,\n              text: editValueText,\n              title: 'Edit the value (Double-click on the value)',\n              onClick: () => onEditValue(),\n              disabled: !canEditValue\n            },\n            {\n              type: 'button',\n              icon: enforceString ? faCheckSquare : faSquare,\n              text: 'Enforce string',\n              title: 'Enforce keeping the value as string when it contains a numeric value',\n              onClick: () => onToggleEnforceString(),\n              disabled: !canEnforceString\n            }\n          ]\n        }\n      ]\n    },\n    { type: 'separator' },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'dropdown-button',\n          main: {\n            type: 'button',\n            onClick: () => onCut(true),\n            icon: faCut,\n            text: 'Cut',\n            title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n            disabled: !canCut\n          },\n          width: '10em',\n          items: [\n            {\n              type: 'button',\n              icon: faCut,\n              text: 'Cut formatted',\n              title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n              onClick: () => onCut(true),\n              disabled: !canCut\n            },\n            {\n              type: 'button',\n              icon: faCut,\n              text: 'Cut compacted',\n              title: 'Cut selected contents, without indentation (Ctrl+Shift+X)',\n              onClick: () => onCut(false),\n              disabled: !canCut\n            }\n          ]\n        },\n        {\n          type: 'dropdown-button',\n          main: {\n            type: 'button',\n            onClick: () => onCopy(true),\n            icon: faCopy,\n            text: 'Copy',\n            title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n            disabled: !canCopy\n          },\n          width: '12em',\n          items: [\n            {\n              type: 'button',\n              icon: faCopy,\n              text: 'Copy formatted',\n              title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n              onClick: () => onCopy(true),\n              disabled: !canCopy\n            },\n            {\n              type: 'button',\n              icon: faCopy,\n              text: 'Copy compacted',\n              title: 'Copy selected contents, without indentation (Ctrl+Shift+C)',\n              onClick: () => onCopy(false),\n              disabled: !canCopy\n            }\n          ]\n        },\n        {\n          type: 'button',\n          onClick: () => onPaste(),\n          icon: faPaste,\n          text: 'Paste',\n          title: 'Paste clipboard contents (Ctrl+V)',\n          disabled: !canPaste\n        }\n      ]\n    },\n    { type: 'separator' },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'column',\n          items: [\n            {\n              type: 'button',\n              onClick: () => onDuplicate(),\n              icon: faClone,\n              text: 'Duplicate',\n              title: 'Duplicate selected contents (Ctrl+D)',\n              disabled: !canDuplicate\n            },\n            {\n              type: 'button',\n              onClick: () => onExtract(),\n              icon: faCropAlt,\n              text: 'Extract',\n              title: 'Extract selected contents',\n              disabled: !canExtract\n            },\n            {\n              type: 'button',\n              onClick: () => onSort(),\n              icon: faSortAmountDownAlt,\n              text: 'Sort',\n              title: 'Sort array or object contents',\n              disabled: readOnly || !hasSelectionContents\n            },\n            {\n              type: 'button',\n              onClick: () => onTransform(),\n              icon: faFilter,\n              text: 'Transform',\n              title: 'Transform array or object contents (filter, sort, project)',\n              disabled: readOnly || !hasSelectionContents\n            },\n            {\n              type: 'button',\n              onClick: () => onRemove(),\n              icon: faTrashCan,\n              text: 'Remove',\n              title: 'Remove selected contents (Delete)',\n              disabled: readOnly || !hasSelectionContents\n            }\n          ]\n        },\n        {\n          type: 'column',\n          items: [\n            { type: 'label', text: insertOrConvertText },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('structure'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Structure',\n              title: insertOrConvertText + ' structure like the first item in the array',\n              disabled: !canInsertOrConvertStructure\n            },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('object'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Object',\n              title: insertOrConvertText + ' object',\n              disabled: !canInsertOrConvertObject\n            },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('array'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Array',\n              title: insertOrConvertText + ' array',\n              disabled: !canInsertOrConvertArray\n            },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('value'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Value',\n              title: insertOrConvertText + ' value',\n              disabled: !canInsertOrConvertValue\n            }\n          ]\n        }\n      ]\n    },\n    {\n      type: 'separator'\n    },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'button',\n          onClick: () => onInsertBefore(),\n          icon: faCaretSquareUp,\n          text: 'Insert before',\n          title: 'Select area before current entry to insert or paste contents',\n          disabled: readOnly || !hasSelectionContents || rootSelected\n        },\n        {\n          type: 'button',\n          onClick: () => onInsertAfter(),\n          icon: faCaretSquareDown,\n          text: 'Insert after',\n          title: 'Select area after current entry to insert or paste contents',\n          disabled: readOnly || !hasSelectionContents || rootSelected\n        }\n      ]\n    }\n  ]\n}\n","/**\n * Create a readonly proxy around an object or array.\n *\n * Will throw an error when trying to mutate the object or array\n *\n * Inspired by: https://github.com/kourge/readonly-proxy/\n */\nexport function readonlyProxy(target: unknown): unknown {\n  if (!isObject(target)) {\n    return target\n  }\n\n  return new Proxy(target, {\n    get(target, property, receiver) {\n      const value = Reflect.get(target, property, receiver)\n\n      return readonlyProxy(value)\n    },\n\n    set() {\n      return false\n    },\n\n    deleteProperty() {\n      return false\n    }\n  })\n}\n\nfunction isObject(value: unknown): value is object {\n  return typeof value === 'object' && value !== null\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { uniqueId } from '$lib/utils/uniqueId.js'\n  import { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons'\n  import { debounce, isEmpty, noop } from 'lodash-es'\n  import Icon from 'svelte-awesome'\n  import { DEBOUNCE_DELAY } from '$lib/constants.js'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer, getIn } from 'immutable-json-patch'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import { transformModalStates, transformModalStateShared } from './transformModalStates.js'\n  import TransformWizard from './TransformWizard.svelte'\n  import TransformModalHeader from './TransformModalHeader.svelte'\n  import AbsolutePopup from './popup/AbsolutePopup.svelte'\n  import { createDebug } from '$lib/utils/debug.js'\n  import TreeMode from '../modes/treemode/TreeMode.svelte'\n  import type {\n    Content,\n    JSONParser,\n    JSONPathParser,\n    OnChangeQueryLanguage,\n    OnClassName,\n    OnRenderContextMenuInternal,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    QueryLanguage,\n    QueryLanguageOptions\n  } from '$lib/types.js'\n  import { onEscape } from '$lib/actions/onEscape.js'\n  import { readonlyProxy } from '$lib/utils/readonlyProxy.js'\n  import Modal from './Modal.svelte'\n  import { onMount } from 'svelte'\n\n  const debug = createDebug('jsoneditor:TransformModal')\n\n  export let id = 'transform-modal-' + uniqueId()\n  export let json: unknown\n  export let rootPath: JSONPath = []\n\n  export let indentation: number | string\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n\n  export let queryLanguages: QueryLanguage[]\n  export let queryLanguageId: string\n  export let onChangeQueryLanguage: OnChangeQueryLanguage\n\n  export let onRenderValue: OnRenderValue\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onClassName: OnClassName\n\n  export let onTransform: (operations: JSONPatchDocument) => void\n  export let onClose: () => void\n\n  let refQueryInput: HTMLTextAreaElement\n\n  let selectedJson: unknown | undefined\n  $: selectedJson = readonlyProxy(getIn(json, rootPath))\n  let selectedContent: Content\n  $: selectedContent = selectedJson ? { json: selectedJson } : { text: '' }\n\n  let fullscreen = false\n\n  const stateId = `${id}:${compileJSONPointer(rootPath)}`\n  const state = transformModalStates[stateId] ?? {}\n\n  // showWizard is not stored inside a stateId\n  let showWizard = transformModalStateShared.showWizard !== false\n  let showOriginal = transformModalStateShared.showOriginal !== false\n\n  let queryOptions = state.queryOptions ?? {}\n  let query = queryLanguageId === state.queryLanguageId && state.query ? state.query : ''\n  let isManual = state.isManual ?? false\n  let queryError: string | undefined = undefined\n\n  let previewError: string | undefined = undefined\n  let previewContent: Content = { text: '' }\n\n  if (!isManual) {\n    updateQueryByWizard(queryOptions)\n  }\n\n  onMount(() => {\n    refQueryInput?.focus()\n  })\n\n  function getSelectedQueryLanguage(queryLanguageId: string): QueryLanguage {\n    return queryLanguages.find((item) => item.id === queryLanguageId) ?? queryLanguages[0]\n  }\n\n  function updateQueryByWizard(newQueryOptions: QueryLanguageOptions) {\n    try {\n      queryOptions = newQueryOptions\n\n      query = getSelectedQueryLanguage(queryLanguageId).createQuery(selectedJson, newQueryOptions)\n      queryError = undefined\n      isManual = false\n\n      debug('updateQueryByWizard', { queryOptions, query, isManual })\n    } catch (err) {\n      queryError = String(err)\n    }\n  }\n\n  function handleChangeQuery(event: Event) {\n    query = (event.target as HTMLTextAreaElement).value\n    isManual = true\n    debug('handleChangeQuery', { query, isManual })\n  }\n\n  function previewTransform(previewJson: unknown | undefined, query: string) {\n    if (previewJson === undefined) {\n      previewContent = { text: '' }\n      previewError = 'Error: No JSON'\n      return\n    }\n\n    if (query.trim() === '') {\n      previewContent = { json: previewJson }\n      return\n    }\n\n    try {\n      debug('previewTransform', {\n        query\n      })\n\n      const jsonTransformed = getSelectedQueryLanguage(queryLanguageId).executeQuery(\n        previewJson,\n        query,\n        parser\n      )\n\n      previewContent = { json: jsonTransformed }\n      previewError = undefined\n    } catch (err) {\n      previewContent = { text: '' }\n      previewError = String(err)\n    }\n  }\n\n  const previewTransformDebounced = debounce(previewTransform, DEBOUNCE_DELAY)\n\n  $: {\n    previewTransformDebounced(selectedJson, query)\n  }\n\n  $: {\n    // remember the selected values for the next time we open the SortModal\n    // just in memory, not persisted\n    transformModalStates[stateId] = {\n      queryOptions,\n      query,\n      queryLanguageId,\n      isManual\n    }\n\n    debug('store state in memory', stateId, transformModalStates[stateId])\n  }\n\n  function handleTransform() {\n    if (selectedJson === undefined) {\n      previewContent = { text: '' }\n      previewError = 'Error: No JSON'\n      return\n    }\n\n    try {\n      debug('handleTransform', { query })\n      const jsonTransformed = getSelectedQueryLanguage(queryLanguageId).executeQuery(\n        selectedJson,\n        query,\n        parser\n      )\n\n      onTransform([\n        {\n          op: 'replace',\n          path: compileJSONPointer(rootPath),\n          value: jsonTransformed\n        }\n      ])\n\n      onClose()\n    } catch (err) {\n      // this should never occur since we can only press the Transform\n      // button when creating a preview was successful\n      console.error(err)\n      previewContent = { text: '' }\n      previewError = String(err)\n    }\n  }\n\n  function toggleShowWizard() {\n    showWizard = !showWizard\n\n    // not stored inside a stateId\n    transformModalStateShared.showWizard = showWizard\n  }\n\n  function toggleShowOriginal() {\n    showOriginal = !showOriginal\n\n    // not stored inside a stateId\n    transformModalStateShared.showOriginal = showOriginal\n  }\n\n  function focus(element: HTMLElement) {\n    element.focus()\n  }\n\n  function handleChangeQueryLanguage(newQueryLanguageId: string) {\n    debug('handleChangeQueryLanguage', newQueryLanguageId)\n    queryLanguageId = newQueryLanguageId\n    onChangeQueryLanguage(newQueryLanguageId)\n\n    updateQueryByWizard(queryOptions)\n  }\n\n  function handleEscape() {\n    if (fullscreen) {\n      fullscreen = !fullscreen\n    } else {\n      onClose()\n    }\n  }\n</script>\n\n<Modal {onClose} className=\"jse-transform-modal\" {fullscreen}>\n  <div class=\"jse-transform-modal-inner\" use:onEscape={handleEscape}>\n    <AbsolutePopup>\n      <TransformModalHeader\n        {queryLanguages}\n        {queryLanguageId}\n        onChangeQueryLanguage={handleChangeQueryLanguage}\n        {onClose}\n        bind:fullscreen\n      />\n      <div class=\"jse-modal-contents\">\n        <div class=\"jse-main-contents\">\n          <div class=\"jse-query-contents\">\n            <div class=\"jse-label\">\n              <div class=\"jse-label-inner\">Language</div>\n            </div>\n            <div class=\"jse-description\">\n              <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n              {@html getSelectedQueryLanguage(queryLanguageId).description}\n            </div>\n\n            <div class=\"jse-label\">\n              <div class=\"jse-label-inner\">Path</div>\n            </div>\n            <input\n              class=\"jse-path\"\n              type=\"text\"\n              readonly\n              title=\"Selected path\"\n              value={!isEmpty(rootPath) ? stringifyJSONPath(rootPath) : '(document root)'}\n            />\n\n            <div class=\"jse-label\">\n              <div class=\"jse-label-inner\">\n                <button type=\"button\" on:click={toggleShowWizard}>\n                  <Icon data={showWizard ? faCaretDown : faCaretRight} />\n                  Wizard\n                </button>\n              </div>\n            </div>\n            {#if showWizard}\n              {#if Array.isArray(selectedJson)}\n                <TransformWizard\n                  {queryOptions}\n                  json={selectedJson}\n                  onChange={updateQueryByWizard}\n                />\n                {#if queryError}\n                  <div class=\"query-error\">\n                    {queryError}\n                  </div>\n                {/if}\n              {:else}\n                (Only available for arrays, not for objects)\n              {/if}\n            {/if}\n\n            <div class=\"jse-label\">\n              <div class=\"jse-label-inner\">Query</div>\n            </div>\n            <textarea\n              bind:this={refQueryInput}\n              class=\"jse-query\"\n              spellcheck=\"false\"\n              on:input={handleChangeQuery}>{query}</textarea\n            >\n          </div>\n          <div class=\"jse-data-contents\" class:jse-hide-original-data={!showOriginal}>\n            <div class=\"jse-original-data\" class:jse-hide={!showOriginal}>\n              <div class=\"jse-label\">\n                <div class=\"jse-label-inner\">\n                  <button type=\"button\" on:click={toggleShowOriginal}>\n                    <Icon data={showOriginal ? faCaretDown : faCaretRight} />\n                    Original\n                  </button>\n                </div>\n              </div>\n              {#if showOriginal}\n                <TreeMode\n                  externalContent={selectedContent}\n                  externalSelection={undefined}\n                  readOnly={true}\n                  mainMenuBar={false}\n                  navigationBar={false}\n                  {indentation}\n                  {escapeControlCharacters}\n                  {escapeUnicodeCharacters}\n                  {parser}\n                  {parseMemoizeOne}\n                  {onRenderValue}\n                  {onRenderMenu}\n                  {onRenderContextMenu}\n                  onError={console.error}\n                  onChange={noop}\n                  onChangeMode={noop}\n                  onSelect={noop}\n                  onFocus={noop}\n                  onBlur={noop}\n                  onSortModal={noop}\n                  onTransformModal={noop}\n                  onJSONEditorModal={noop}\n                  {onClassName}\n                  validator={undefined}\n                  {validationParser}\n                  {pathParser}\n                />\n              {/if}\n            </div>\n            <div class=\"jse-preview-data\">\n              <div class=\"jse-label\">\n                <div class=\"jse-label-inner\">Preview</div>\n              </div>\n              {#if !previewError}\n                <TreeMode\n                  externalContent={previewContent}\n                  externalSelection={undefined}\n                  readOnly={true}\n                  mainMenuBar={false}\n                  navigationBar={false}\n                  {indentation}\n                  {escapeControlCharacters}\n                  {escapeUnicodeCharacters}\n                  {parser}\n                  {parseMemoizeOne}\n                  {onRenderValue}\n                  {onRenderMenu}\n                  {onRenderContextMenu}\n                  onError={console.error}\n                  onChange={noop}\n                  onChangeMode={noop}\n                  onSelect={noop}\n                  onFocus={noop}\n                  onBlur={noop}\n                  onSortModal={noop}\n                  onTransformModal={noop}\n                  onJSONEditorModal={noop}\n                  {onClassName}\n                  validator={undefined}\n                  {validationParser}\n                  {pathParser}\n                />\n              {:else}\n                <div class=\"jse-preview jse-error\">\n                  {previewError}\n                </div>\n              {/if}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"jse-actions\">\n          <button\n            type=\"button\"\n            class=\"jse-primary\"\n            on:click={handleTransform}\n            use:focus\n            disabled={!!previewError}\n          >\n            Transform\n          </button>\n        </div>\n      </div>\n    </AbsolutePopup>\n  </div>\n</Modal>\n\n<style src=\"./TransformModal.scss\"></style>\n","export function noop() {\n  return undefined\n}\n","/**\n * Return a human readable document size\n * For example formatSize(7570718) outputs '7.6 MB'\n * @param size\n * @param kilo Is 1000 by default, you can specify 1024 if you\n *                             want the output in KiB\n * @return Returns a human readable size\n */\nexport function formatSize(size: number, kilo = 1000): string {\n  if (size < 0.9 * kilo) {\n    return size.toFixed() + ' B'\n  }\n\n  const KB = size / kilo\n  if (KB < 0.9 * kilo) {\n    return KB.toFixed(1) + ' KB'\n  }\n\n  const MB = KB / kilo\n  if (MB < 0.9 * kilo) {\n    return MB.toFixed(1) + ' MB'\n  }\n\n  const GB = MB / kilo\n  if (GB < 0.9 * kilo) {\n    return GB.toFixed(1) + ' GB'\n  }\n\n  const TB = GB / kilo\n  return TB.toFixed(1) + ' TB'\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faFilter,\n    faRedo,\n    faSearch,\n    faSortAmountDownAlt,\n    faUndo\n  } from '@fortawesome/free-solid-svg-icons'\n  import { faJSONEditorCompact, faJSONEditorFormat } from '$lib/img/customFontawesomeIcons.js'\n  import Menu from '../../../controls/Menu.svelte'\n  import type { MenuItem, OnRenderMenuInternal } from '$lib/types'\n\n  export let readOnly = false\n  export let onFormat: () => boolean\n  export let onCompact: () => boolean\n  export let onSort: () => void\n  export let onTransform: () => void\n  export let onToggleSearch: () => void\n  export let onUndo: () => void\n  export let onRedo: () => void\n  export let canUndo: boolean\n  export let canRedo: boolean\n  export let canFormat: boolean\n  export let canCompact: boolean\n  export let canSort: boolean\n  export let canTransform: boolean\n  export let onRenderMenu: OnRenderMenuInternal\n\n  const searchItem: MenuItem = {\n    type: 'button',\n    icon: faSearch,\n    title: 'Search (Ctrl+F)',\n    className: 'jse-search',\n    onClick: onToggleSearch\n  }\n\n  let defaultItems: MenuItem[]\n  $: defaultItems = !readOnly\n    ? [\n        {\n          type: 'button',\n          icon: faJSONEditorFormat,\n          title: 'Format JSON: add proper indentation and new lines (Ctrl+I)',\n          className: 'jse-format',\n          onClick: onFormat,\n          disabled: readOnly || !canFormat\n        },\n        {\n          type: 'button',\n          icon: faJSONEditorCompact,\n          title: 'Compact JSON: remove all white spacing and new lines (Ctrl+Shift+I)',\n          className: 'jse-compact',\n          onClick: onCompact,\n          disabled: readOnly || !canCompact\n        },\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faSortAmountDownAlt,\n          title: 'Sort',\n          className: 'jse-sort',\n          onClick: onSort,\n          disabled: readOnly || !canSort\n        },\n        {\n          type: 'button',\n          icon: faFilter,\n          title: 'Transform contents (filter, sort, project)',\n          className: 'jse-transform',\n          onClick: onTransform,\n          disabled: readOnly || !canTransform\n        },\n        searchItem,\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faUndo,\n          title: 'Undo (Ctrl+Z)',\n          className: 'jse-undo',\n          onClick: onUndo,\n          disabled: !canUndo\n        },\n        {\n          type: 'button',\n          icon: faRedo,\n          title: 'Redo (Ctrl+Shift+Z)',\n          className: 'jse-redo',\n          onClick: onRedo,\n          disabled: !canRedo\n        },\n        {\n          type: 'space'\n        }\n      ]\n    : [\n        searchItem,\n        {\n          type: 'space'\n        }\n      ]\n\n  $: items = onRenderMenu(defaultItems) || defaultItems\n</script>\n\n<Menu {items} />\n","<script lang=\"ts\">\n  import type { EditorState, Line } from '@codemirror/state'\n\n  export let editorState: EditorState | undefined\n\n  let pos: number | undefined\n  $: pos = editorState?.selection?.main?.head\n\n  let line: Line | undefined\n  $: line = pos !== undefined ? editorState?.doc?.lineAt(pos) : undefined\n\n  let lineNumber: number | undefined\n  $: lineNumber = line !== undefined ? line.number : undefined\n\n  let columnNumber: number | undefined\n  $: columnNumber = line !== undefined && pos !== undefined ? pos - line.from + 1 : undefined\n\n  let charCount: number | undefined\n  $: charCount = editorState?.selection?.ranges?.reduce((count, range) => {\n    return count + range.to - range.from\n  }, 0)\n</script>\n\n<div class=\"jse-status-bar\">\n  {#if lineNumber !== undefined}\n    <div class=\"jse-status-bar-info\">Line: {lineNumber}</div>\n  {/if}\n\n  {#if columnNumber !== undefined}\n    <div class=\"jse-status-bar-info\">Column: {columnNumber}</div>\n  {/if}\n\n  {#if charCount !== undefined && charCount > 0}\n    <div class=\"jse-status-bar-info\">Selection: {charCount} characters</div>\n  {/if}\n</div>\n\n<style src=\"./StatusBar.scss\"></style>\n","import { HighlightStyle, syntaxHighlighting } from '@codemirror/language'\nimport { tags } from '@lezer/highlight'\n\nconst highlightStyle = HighlightStyle.define([\n  { tag: tags.propertyName, color: 'var(--internal-key-color)' }, // keys\n  { tag: tags.number, color: 'var(--internal-value-color-number)' },\n  { tag: tags.bool, color: 'var(--internal-value-color-boolean)' },\n  { tag: tags.string, color: 'var(--internal-value-color-string)' },\n  { tag: tags.keyword, color: 'var(--internal-value-color-null)' } // null\n])\n\nexport const highlighter = syntaxHighlighting(highlightStyle)\n\n// TODO: remove workaround when not needed anymore\n// Workaround for the error \"CodeMirror plugin crashed: TypeError: tags3 is undefined\"\n// thrown when using the json() language from '@codemirror/lang-json'\n//\n// Note that a plain CodeSandbox with parcel and code mirror v6.0.0,\n// so it is maybe related to Vite\n//\n// See https://discuss.codemirror.net/t/highlighting-that-seems-ignored-in-cm6/4320/15\nconst originalStyle = highlightStyle.style\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// noinspection JSConstantReassignment\nhighlightStyle.style = (tags) => originalStyle(tags || [])\n","// source: https://github.com/sveltejs/svelte/issues/7583\n\nlet observer: ResizeObserver\nlet callbacks: WeakMap<Element, (element: Element) => void>\n\n/**\n * Example usage:\n *\n *   <script lang=\"ts\">\n *      let clientWidth = 0\n *   </script>\n *\n *   <div use:resizeObserver={element => clientWidth = element.clientWidth}>\n *      My width is: {clientWidth}\n *   </div>\n */\nexport function resizeObserver(element: Element, onResize: (element: Element) => void) {\n  if (!observer) {\n    callbacks = new WeakMap()\n    observer = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const onResize = callbacks.get(entry.target)\n        if (onResize) {\n          onResize(entry.target)\n        }\n      }\n    })\n  }\n\n  callbacks.set(element, onResize)\n  observer.observe(element)\n\n  return {\n    destroy: () => {\n      callbacks.delete(element)\n      observer.unobserve(element)\n    }\n  }\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faExclamationTriangle,\n    faEye,\n    faTimes,\n    faWrench\n  } from '@fortawesome/free-solid-svg-icons'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { immutableJSONPatch, revertJSONPatch } from 'immutable-json-patch'\n  import { jsonrepair } from 'jsonrepair'\n  import { debounce, isEqual, uniqueId } from 'lodash-es'\n  import { onDestroy, onMount, tick } from 'svelte'\n  import {\n    JSON_STATUS_INVALID,\n    JSON_STATUS_REPAIRABLE,\n    JSON_STATUS_VALID,\n    MAX_CHARACTERS_TEXT_PREVIEW,\n    MAX_DOCUMENT_SIZE_TEXT_MODE,\n    TEXT_MODE_ONCHANGE_DELAY\n  } from '$lib/constants.js'\n  import {\n    activeElementIsChildOf,\n    createNormalizationFunctions,\n    getWindow\n  } from '$lib/utils/domUtils.js'\n  import { formatSize } from '$lib/utils/fileUtils.js'\n  import { findTextLocation, getText, needsFormatting } from '$lib/utils/jsonUtils.js'\n  import { createFocusTracker } from '../../controls/createFocusTracker.js'\n  import Message from '../../controls/Message.svelte'\n  import ValidationErrorsOverview from '../../controls/ValidationErrorsOverview.svelte'\n  import TextMenu from './menu/TextMenu.svelte'\n  import { Compartment, EditorSelection, EditorState, type Extension } from '@codemirror/state'\n  import {\n    crosshairCursor,\n    drawSelection,\n    dropCursor,\n    EditorView,\n    highlightActiveLine,\n    highlightActiveLineGutter,\n    highlightSpecialChars,\n    keymap,\n    lineNumbers,\n    rectangularSelection\n  } from '@codemirror/view'\n  import {\n    defaultKeymap,\n    history,\n    historyKeymap,\n    indentWithTab,\n    redo,\n    redoDepth,\n    undo,\n    undoDepth\n  } from '@codemirror/commands'\n  import type { Diagnostic } from '@codemirror/lint'\n  import { linter, lintGutter, lintKeymap } from '@codemirror/lint'\n  import { json as jsonLang } from '@codemirror/lang-json'\n  import {\n    bracketMatching,\n    defaultHighlightStyle,\n    foldGutter,\n    foldKeymap,\n    indentOnInput,\n    indentUnit,\n    syntaxHighlighting\n  } from '@codemirror/language'\n  import {\n    closeSearchPanel,\n    highlightSelectionMatches,\n    openSearchPanel,\n    search,\n    searchKeymap\n  } from '@codemirror/search'\n  import {\n    autocompletion,\n    closeBrackets,\n    closeBracketsKeymap,\n    completionKeymap\n  } from '@codemirror/autocomplete'\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  import jsonSourceMap from 'json-source-map'\n  import StatusBar from './StatusBar.svelte'\n  import { highlighter } from './codemirror/codemirror-theme.js'\n  import type {\n    Content,\n    ContentErrors,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnError,\n    OnFocus,\n    OnRenderMenuInternal,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    ParseError,\n    RichValidationError,\n    TransformModalOptions,\n    ValidationError,\n    Validator\n  } from '$lib/types.js'\n  import { Mode, SelectionType, ValidationSeverity } from '$lib/types.js'\n  import { isContentParseError, isContentValidationErrors } from '$lib/typeguards.js'\n  import memoizeOne from 'memoize-one'\n  import { validateText } from '$lib/logic/validation.js'\n  import { truncate } from '$lib/utils/stringUtils.js'\n  import { faJSONEditorFormat } from '$lib/img/customFontawesomeIcons.js'\n  import { indentationMarkers } from '@replit/codemirror-indentation-markers'\n  import { isTextSelection } from '$lib/logic/selection.js'\n  import { wrappedLineIndent } from 'codemirror-wrapped-line-indent'\n\n  export let readOnly: boolean\n  export let mainMenuBar: boolean\n  export let statusBar: boolean\n  export let askToFormat: boolean\n  export let externalContent: Content\n  export let externalSelection: JSONEditorSelection | undefined\n  export let indentation: number | string\n  export let tabSize: number\n  export let escapeUnicodeCharacters: boolean\n  export let parser: JSONParser\n  export let validator: Validator | undefined\n  export let validationParser: JSONParser\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onError: OnError\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n\n  const debug = createDebug('jsoneditor:TextMode')\n\n  const formatCompactKeyBinding = {\n    key: 'Mod-i',\n    run: handleFormat,\n    shift: handleCompact,\n    preventDefault: true\n  }\n\n  const isSSR = typeof window === 'undefined'\n  debug('isSSR:', isSSR)\n\n  let codeMirrorRef: HTMLDivElement\n  let domTextMode: HTMLDivElement\n  let codeMirrorView: EditorView\n  let editorState: EditorState\n\n  let onChangeDisabled = false\n  let acceptTooLarge = false\n  let askToFormatApplied = askToFormat\n\n  let validationErrors: ValidationError[] = []\n  const linterCompartment = new Compartment()\n  const readOnlyCompartment = new Compartment()\n  const indentCompartment = new Compartment()\n  const tabSizeCompartment = new Compartment()\n  const themeCompartment = new Compartment()\n\n  let content: Content = externalContent\n  let text = getText(content, indentation, parser) // text is just a cached version of content.text or parsed content.json\n\n  $: normalization = createNormalizationFunctions({\n    escapeControlCharacters: false,\n    escapeUnicodeCharacters\n  })\n\n  $: setCodeMirrorContent(externalContent, false, false)\n  $: applyExternalSelection(externalSelection)\n  $: updateLinter(validator)\n  $: updateIndentation(indentation)\n  $: updateTabSize(tabSize)\n  $: updateReadOnly(readOnly)\n\n  // force updating the text when escapeUnicodeCharacters changes\n  let previousEscapeUnicodeCharacters = escapeUnicodeCharacters\n  $: {\n    if (previousEscapeUnicodeCharacters !== escapeUnicodeCharacters) {\n      previousEscapeUnicodeCharacters = escapeUnicodeCharacters\n      forceUpdateText()\n    }\n  }\n\n  onMount(async () => {\n    if (isSSR) {\n      return\n    }\n\n    try {\n      codeMirrorView = createCodeMirrorView({\n        target: codeMirrorRef,\n        initialText: !disableTextEditor(text, acceptTooLarge)\n          ? normalization.escapeValue(text)\n          : '',\n        readOnly,\n        indentation\n      })\n    } catch (err) {\n      // TODO: report error to the user\n      console.error(err)\n    }\n  })\n\n  onDestroy(() => {\n    if (codeMirrorView) {\n      debug('Destroy CodeMirror editor')\n      codeMirrorView.destroy()\n    }\n  })\n\n  let canUndo = false\n  let canRedo = false\n\n  const sortModalId = uniqueId()\n  const transformModalId = uniqueId()\n\n  export function focus() {\n    if (codeMirrorView) {\n      debug('focus')\n      codeMirrorView.focus()\n    }\n  }\n\n  // modalOpen is true when one of the modals is open.\n  // This is used to track whether the editor still has focus\n  let modalOpen = false\n\n  onDestroy(() => {\n    flush()\n  })\n\n  createFocusTracker({\n    onMount,\n    onDestroy,\n    getWindow: () => getWindow(domTextMode),\n    hasFocus: () => (modalOpen && document.hasFocus()) || activeElementIsChildOf(domTextMode),\n    onFocus,\n    onBlur: () => {\n      flush()\n      onBlur()\n    }\n  })\n\n  export function patch(operations: JSONPatchDocument): JSONPatchResult {\n    return handlePatch(operations, false)\n  }\n\n  export function handlePatch(operations: JSONPatchDocument, emitChange: boolean): JSONPatchResult {\n    debug('handlePatch', operations, emitChange)\n\n    const previousJson = parser.parse(text)\n    const updatedJson = immutableJSONPatch(previousJson, operations)\n    const undo = revertJSONPatch(previousJson, operations)\n    const updatedContent = {\n      text: parser.stringify(updatedJson, null, indentation) as string\n    }\n\n    setCodeMirrorContent(updatedContent, emitChange, false)\n\n    return {\n      json: updatedJson,\n      previousJson,\n      undo,\n      redo: operations\n    }\n  }\n\n  function handleFormat(): boolean {\n    debug('format')\n\n    if (readOnly) {\n      return false\n    }\n\n    try {\n      const updatedJson = parser.parse(text)\n      const updatedContent = {\n        text: parser.stringify(updatedJson, null, indentation) as string\n      }\n\n      setCodeMirrorContent(updatedContent, true, false)\n\n      askToFormatApplied = askToFormat // reset to the original value\n\n      return true\n    } catch (err) {\n      onError(err as Error)\n    }\n\n    return false\n  }\n\n  function handleCompact(): boolean {\n    debug('compact')\n\n    if (readOnly) {\n      return false\n    }\n\n    try {\n      const updatedJson = parser.parse(text)\n      const updatedContent = {\n        text: parser.stringify(updatedJson) as string\n      }\n\n      setCodeMirrorContent(updatedContent, true, false)\n\n      askToFormatApplied = false\n\n      return true\n    } catch (err) {\n      onError(err as Error)\n    }\n\n    return false\n  }\n\n  function handleRepair() {\n    debug('repair')\n\n    if (readOnly) {\n      return\n    }\n\n    try {\n      const updatedContent = {\n        text: jsonrepair(text)\n      }\n\n      setCodeMirrorContent(updatedContent, true, false)\n\n      jsonStatus = JSON_STATUS_VALID\n      jsonParseError = undefined\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  function handleSort() {\n    if (readOnly) {\n      return\n    }\n\n    try {\n      const json = parser.parse(text)\n\n      modalOpen = true\n\n      onSortModal({\n        id: sortModalId,\n        json,\n        rootPath: [],\n        onSort: async ({ operations }) => {\n          debug('onSort', operations)\n          handlePatch(operations, true)\n        },\n        onClose: () => {\n          modalOpen = false\n          focus()\n        }\n      })\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  /**\n   * This method is exposed via JSONEditor.transform\n   */\n  export function openTransformModal({\n    id,\n    rootPath,\n    onTransform,\n    onClose\n  }: TransformModalOptions) {\n    try {\n      const json = parser.parse(text)\n\n      modalOpen = true\n\n      onTransformModal({\n        id: id || transformModalId,\n        json,\n        rootPath: rootPath || [],\n        onTransform: (operations) => {\n          if (onTransform) {\n            onTransform({\n              operations,\n              json,\n              transformedJson: immutableJSONPatch(json, operations)\n            })\n          } else {\n            debug('onTransform', operations)\n            handlePatch(operations, true)\n          }\n        },\n        onClose: () => {\n          modalOpen = false\n          focus()\n          if (onClose) {\n            onClose()\n          }\n        }\n      })\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  function handleTransform() {\n    if (readOnly) {\n      return\n    }\n\n    openTransformModal({\n      rootPath: []\n    })\n  }\n\n  function handleToggleSearch() {\n    if (codeMirrorView) {\n      // TODO: figure out the proper way to detect whether the search panel is open\n      if (codeMirrorRef && codeMirrorRef.querySelector('.cm-search')) {\n        closeSearchPanel(codeMirrorView)\n      } else {\n        openSearchPanel(codeMirrorView)\n      }\n    }\n  }\n\n  function handleUndo() {\n    if (readOnly) {\n      return\n    }\n\n    if (codeMirrorView) {\n      undo(codeMirrorView)\n      focus()\n    }\n  }\n\n  function handleRedo() {\n    if (readOnly) {\n      return\n    }\n\n    if (codeMirrorView) {\n      redo(codeMirrorView)\n      focus()\n    }\n  }\n\n  function handleAcceptTooLarge() {\n    acceptTooLarge = true\n    setCodeMirrorContent(externalContent, true, true)\n  }\n\n  function handleSwitchToTreeMode() {\n    onChangeMode(Mode.tree)\n  }\n\n  function cancelLoadTooLarge() {\n    // copy the latest contents of the text editor again into text\n    onChangeCodeMirrorValue()\n  }\n\n  function handleSelectValidationError(validationError: ValidationError) {\n    debug('select validation error', validationError)\n\n    const { from, to } = toRichValidationError(validationError)\n    if (from === undefined || to === undefined) {\n      return\n    }\n\n    // we take \"to\" as head, not as anchor, because the scrollIntoView will\n    // move to the head, and when a large whole object is selected as a whole,\n    // we want to scroll to the start of the object and not the end\n    setSelection(from, to)\n\n    focus()\n  }\n\n  function handleSelectParseError(parseError: ParseError) {\n    debug('select parse error', parseError)\n\n    const richParseError = toRichParseError(parseError, false)\n    const from = richParseError.from != null ? richParseError.from : 0\n    const to = richParseError.to != null ? richParseError.to : 0\n\n    // we take \"to\" as head, not as anchor, because the scrollIntoView will\n    // move to the head, and when a large whole object is selected as a whole,\n    // we want to scroll to the start of the object and not the end\n    setSelection(from, to)\n\n    focus()\n  }\n\n  function setSelection(anchor: number, head: number) {\n    debug('setSelection', { anchor, head })\n\n    if (codeMirrorView) {\n      codeMirrorView.dispatch(\n        codeMirrorView.state.update({\n          selection: { anchor, head },\n          scrollIntoView: true\n        })\n      )\n    }\n  }\n\n  function handleDoubleClick(event: MouseEvent, view: EditorView) {\n    // When the user double-clicked right from a bracket [ or {,\n    // select the contents of the array or object\n    if (view.state.selection.ranges.length === 1) {\n      const range = view.state.selection.ranges[0]\n      const selectedText = text.slice(range.from, range.to)\n      if (selectedText === '{' || selectedText === '[') {\n        const jsmap = jsonSourceMap.parse(text)\n        const path = Object.keys(jsmap.pointers).find((path) => {\n          const pointer = jsmap.pointers[path]\n          return pointer.value?.pos === range.from\n        })\n        const pointer = jsmap.pointers[path]\n\n        if (path && pointer && pointer.value && pointer.valueEnd) {\n          debug('pointer found, selecting inner contents of path:', path, pointer)\n          const anchor = pointer.value.pos + 1\n          const head = pointer.valueEnd.pos - 1\n          setSelection(anchor, head)\n        }\n      }\n    }\n  }\n\n  function createLinter() {\n    return linter(linterCallback, { delay: TEXT_MODE_ONCHANGE_DELAY })\n  }\n\n  function createCodeMirrorView({\n    target,\n    initialText,\n    readOnly,\n    indentation\n  }: {\n    target: HTMLDivElement\n    initialText: string\n    readOnly: boolean\n    indentation: number | string\n  }): EditorView {\n    debug('Create CodeMirror editor', { readOnly, indentation })\n\n    const state = EditorState.create({\n      doc: initialText,\n      selection: isValidSelection(externalSelection, initialText)\n        ? toCodeMirrorSelection(externalSelection)\n        : undefined,\n      extensions: [\n        keymap.of([indentWithTab, formatCompactKeyBinding]),\n        linterCompartment.of(createLinter()),\n        lintGutter(),\n        lineNumbers(),\n        highlightActiveLineGutter(),\n        highlightSpecialChars(),\n        history(),\n        foldGutter(),\n        drawSelection(),\n        dropCursor(),\n        EditorState.allowMultipleSelections.of(true),\n        indentOnInput(),\n        syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n        bracketMatching(),\n        closeBrackets(),\n        autocompletion(),\n        rectangularSelection(),\n        crosshairCursor(),\n        highlightActiveLine(),\n        highlightSelectionMatches(),\n        keymap.of([\n          ...closeBracketsKeymap,\n          ...defaultKeymap,\n          ...searchKeymap,\n          ...historyKeymap,\n          ...foldKeymap,\n          ...completionKeymap,\n          ...lintKeymap\n        ]),\n        highlighter,\n        indentationMarkers({ hideFirstIndent: true }),\n        EditorView.domEventHandlers({\n          dblclick: handleDoubleClick\n        }),\n        EditorView.updateListener.of((update) => {\n          editorState = update.state\n\n          if (update.docChanged) {\n            onChangeCodeMirrorValueDebounced()\n          } else if (update.selectionSet) {\n            // note that emitOnSelect is invoked in onChangeCodeMirrorValue too,\n            // right after firing onChange. Hence, the else if here, we do not want to fire it twice.\n            emitOnSelect()\n          }\n        }),\n        jsonLang(),\n        search({\n          top: true\n        }),\n        EditorView.lineWrapping,\n        readOnlyCompartment.of(EditorState.readOnly.of(readOnly)),\n        tabSizeCompartment.of(EditorState.tabSize.of(tabSize)),\n        indentCompartment.of(createIndent(indentation)),\n        themeCompartment.of(EditorView.theme({}, { dark: hasDarkTheme() }))\n      ]\n    })\n\n    codeMirrorView = new EditorView({\n      state,\n      parent: target\n    })\n\n    return codeMirrorView\n  }\n\n  function getCodeMirrorValue() {\n    return codeMirrorView ? normalization.unescapeValue(codeMirrorView.state.doc.toString()) : ''\n  }\n\n  function hasDarkTheme() {\n    return codeMirrorRef\n      ? getComputedStyle(codeMirrorRef).getPropertyValue('--jse-theme').includes('dark')\n      : false\n  }\n\n  function isValidSelection(selection: JSONEditorSelection | undefined, text: string): boolean {\n    if (!isTextSelection(selection)) {\n      return false\n    }\n\n    return selection.ranges.every((range) => range.anchor < text.length && range.head < text.length)\n  }\n\n  function toRichValidationError(validationError: ValidationError): RichValidationError {\n    const { path, message, severity } = validationError\n    const { line, column, from, to } = findTextLocation(normalization.escapeValue(text), path)\n\n    return {\n      path,\n      line,\n      column,\n      from,\n      to,\n      message,\n      severity,\n      actions: []\n    }\n  }\n\n  function toRichParseError(parseError: ParseError, isRepairable: boolean): RichValidationError {\n    const { line, column, position, message } = parseError\n\n    return {\n      path: [] as JSONPath,\n      line,\n      column,\n      from: position,\n      to: position,\n      severity: ValidationSeverity.error,\n      message,\n      actions:\n        isRepairable && !readOnly\n          ? [\n              {\n                name: 'Auto repair',\n                apply: () => handleRepair()\n              }\n            ]\n          : undefined\n    }\n  }\n\n  function toDiagnostic(error: RichValidationError): Diagnostic {\n    return {\n      from: error.from || 0,\n      to: error.to || 0,\n      message: error.message || '',\n      actions: error.actions as Diagnostic['actions'],\n      severity: error.severity\n    }\n  }\n\n  function setCodeMirrorContent(newContent: Content, emitChange: boolean, forceUpdate: boolean) {\n    const newText = getText(newContent, indentation, parser)\n    const isChanged = !isEqual(newContent, content)\n    const previousContent = content\n\n    debug('setCodeMirrorContent', { isChanged, emitChange, forceUpdate })\n\n    if (!codeMirrorView || (!isChanged && !forceUpdate)) {\n      return\n    }\n\n    content = newContent\n    text = newText\n\n    if (!disableTextEditor(text, acceptTooLarge)) {\n      // keep state\n      // to reset state: codeMirrorView.setState(EditorState.create({doc: text, extensions: ...}))\n      codeMirrorView.dispatch({\n        changes: {\n          from: 0,\n          to: codeMirrorView.state.doc.length,\n          insert: normalization.escapeValue(text)\n        }\n      })\n    }\n\n    updateCanUndoRedo()\n\n    if (isChanged && emitChange) {\n      emitOnChange(content, previousContent)\n    }\n  }\n\n  function applyExternalSelection(externalSelection: JSONEditorSelection | undefined) {\n    if (!isTextSelection(externalSelection)) {\n      return\n    }\n\n    const selection = toCodeMirrorSelection(externalSelection)\n    if (codeMirrorView && selection && (!editorState || !editorState.selection.eq(selection))) {\n      debug('applyExternalSelection', selection)\n\n      // note that we cannot clear the selection (we could maybe set the cursor to 0 but that's not really what we want)\n      codeMirrorView.dispatch({ selection })\n    }\n  }\n\n  function toCodeMirrorSelection(\n    selection: JSONEditorSelection | undefined\n  ): EditorSelection | undefined {\n    return isTextSelection(selection) ? EditorSelection.fromJSON(selection) : undefined\n  }\n\n  /**\n   * Force refreshing the editor, for example after changing the font size\n   * to update the positioning of the line numbers in the gutter\n   */\n  export async function refresh(): Promise<void> {\n    debug('refresh')\n\n    // update the theme (light/dark), but also, as a side effect,\n    // refresh the font size of the line numbers in the gutter\n    await updateTheme()\n  }\n\n  function forceUpdateText() {\n    debug('forceUpdateText', { escapeUnicodeCharacters })\n\n    if (codeMirrorView) {\n      codeMirrorView.dispatch({\n        changes: {\n          from: 0,\n          to: codeMirrorView.state.doc.length,\n          insert: normalization.escapeValue(text)\n        }\n      })\n    }\n  }\n\n  function onChangeCodeMirrorValue() {\n    if (onChangeDisabled || !codeMirrorView) {\n      return\n    }\n\n    const codeMirrorText = getCodeMirrorValue()\n\n    const isChanged = codeMirrorText !== text\n    debug('onChangeCodeMirrorValue', { isChanged })\n    if (!isChanged) {\n      return\n    }\n\n    const previousContent = content\n    text = codeMirrorText\n    content = { text }\n\n    updateCanUndoRedo()\n    emitOnChange(content, previousContent)\n\n    // We emit OnSelect on the next tick to cater for the case where\n    // the user changes the content directly inside the OnChange callback.\n    // This change will be dispatched by Svelte on the next tick. Before\n    // that tick, emitOnSelect would be fired based on the \"old\" contents,\n    // which may be out of range when the replacement by the user is shorter.\n    tick().then(emitOnSelect)\n  }\n\n  function updateLinter(validator: Validator | undefined) {\n    debug('updateLinter', validator)\n\n    if (!codeMirrorView) {\n      return\n    }\n\n    codeMirrorView.dispatch({\n      effects: linterCompartment.reconfigure(createLinter())\n    })\n  }\n\n  function updateIndentation(indentation: number | string) {\n    if (codeMirrorView) {\n      debug('updateIndentation', indentation)\n\n      codeMirrorView.dispatch({\n        effects: indentCompartment.reconfigure(createIndent(indentation))\n      })\n    }\n  }\n\n  function updateTabSize(tabSize: number) {\n    if (codeMirrorView) {\n      debug('updateTabSize', tabSize)\n\n      codeMirrorView.dispatch({\n        effects: tabSizeCompartment.reconfigure(EditorState.tabSize.of(tabSize))\n      })\n    }\n  }\n\n  function updateReadOnly(readOnly: boolean) {\n    if (codeMirrorView) {\n      debug('updateReadOnly', readOnly)\n\n      codeMirrorView.dispatch({\n        effects: [readOnlyCompartment.reconfigure(EditorState.readOnly.of(readOnly))]\n      })\n    }\n  }\n\n  async function updateTheme(): Promise<void> {\n    // we check the theme on the next tick, to make sure the page\n    // is re-rendered with (possibly) changed CSS variables\n    await tick()\n\n    if (codeMirrorView) {\n      const dark = hasDarkTheme()\n      debug('updateTheme', { dark })\n\n      codeMirrorView.dispatch({\n        effects: [themeCompartment.reconfigure(EditorView.theme({}, { dark }))]\n      })\n    }\n  }\n\n  function createIndent(indentation: number | string): Extension[] {\n    const indent = indentUnit.of(\n      typeof indentation === 'number' ? ' '.repeat(indentation) : indentation\n    )\n\n    // We disable wrappedLineIndent in case of tabs to work around a bug:\n    // https://github.com/fauzi9331/codemirror-wrapped-line-indent/issues/2\n    return indentation === '\\t' ? [indent] : [indent, wrappedLineIndent]\n  }\n\n  function updateCanUndoRedo() {\n    canUndo = undoDepth(codeMirrorView.state) > 0\n    canRedo = redoDepth(codeMirrorView.state) > 0\n\n    debug({ canUndo, canRedo })\n  }\n\n  // debounce the input: when pressing Enter at the end of a line, two change\n  // events are fired: one with the new Return character, and a second with\n  // indentation added on the new line. This causes a race condition when used\n  // for example in React. Debouncing the onChange events also results in not\n  // firing a change event with every character that a user types, but only as\n  // soon as the user stops typing.\n  const onChangeCodeMirrorValueDebounced = debounce(\n    onChangeCodeMirrorValue,\n    TEXT_MODE_ONCHANGE_DELAY\n  )\n\n  function flush() {\n    onChangeCodeMirrorValueDebounced.flush()\n  }\n\n  function emitOnChange(content: Content, previousContent: Content) {\n    if (onChange) {\n      onChange(content, previousContent, {\n        contentErrors: validate(),\n        patchResult: undefined\n      })\n    }\n  }\n\n  function emitOnSelect() {\n    onSelect({\n      type: SelectionType.text,\n      ...editorState.selection.toJSON()\n    })\n  }\n\n  function disableTextEditor(text: string, acceptTooLarge: boolean): boolean {\n    const tooLarge = text ? text.length > MAX_DOCUMENT_SIZE_TEXT_MODE : false\n    return tooLarge && !acceptTooLarge\n  }\n\n  let jsonStatus = JSON_STATUS_VALID\n\n  let jsonParseError: ParseError | undefined\n\n  function linterCallback(): Diagnostic[] {\n    if (disableTextEditor(text, acceptTooLarge)) {\n      return []\n    }\n\n    const contentErrors = validate()\n\n    if (isContentParseError(contentErrors)) {\n      const { parseError, isRepairable } = contentErrors\n\n      return [toDiagnostic(toRichParseError(parseError, isRepairable))]\n    }\n\n    if (isContentValidationErrors(contentErrors)) {\n      return contentErrors.validationErrors.map(toRichValidationError).map(toDiagnostic)\n    }\n\n    return []\n  }\n\n  export function validate(): ContentErrors | undefined {\n    debug('validate:start')\n\n    flush()\n\n    const contentErrors = memoizedValidateText(\n      normalization.escapeValue(text),\n      validator,\n      parser,\n      validationParser\n    )\n\n    if (isContentParseError(contentErrors)) {\n      jsonStatus = contentErrors.isRepairable ? JSON_STATUS_REPAIRABLE : JSON_STATUS_INVALID\n      jsonParseError = contentErrors.parseError\n      validationErrors = []\n    } else {\n      jsonStatus = JSON_STATUS_VALID\n      jsonParseError = undefined\n      validationErrors = contentErrors?.validationErrors || []\n    }\n\n    debug('validate:end')\n\n    return contentErrors\n  }\n\n  // because onChange returns the validation errors and there is also a separate listener,\n  // we would execute validation twice. Memoizing the last result solves this.\n  const memoizedValidateText = memoizeOne(validateText)\n\n  function handleShowMe() {\n    if (jsonParseError) {\n      handleSelectParseError(jsonParseError)\n    }\n  }\n\n  const repairActionShowMe = {\n    icon: faEye,\n    text: 'Show me',\n    title: 'Move to the parse error location',\n    onClick: handleShowMe\n  }\n\n  $: repairActions =\n    jsonStatus === JSON_STATUS_REPAIRABLE && !readOnly\n      ? [\n          {\n            icon: faWrench,\n            text: 'Auto repair',\n            title: 'Automatically repair JSON',\n            onClick: handleRepair\n          },\n          repairActionShowMe\n        ]\n      : [repairActionShowMe]\n</script>\n\n<div class=\"jse-text-mode\" class:no-main-menu={!mainMenuBar} bind:this={domTextMode}>\n  {#if mainMenuBar}\n    {@const isNewDocument = text.length === 0}\n\n    <TextMenu\n      {readOnly}\n      onFormat={handleFormat}\n      onCompact={handleCompact}\n      onSort={handleSort}\n      onTransform={handleTransform}\n      onToggleSearch={handleToggleSearch}\n      onUndo={handleUndo}\n      onRedo={handleRedo}\n      canFormat={!isNewDocument}\n      canCompact={!isNewDocument}\n      canSort={!isNewDocument}\n      canTransform={!isNewDocument}\n      {canUndo}\n      {canRedo}\n      {onRenderMenu}\n    />\n  {/if}\n\n  {#if !isSSR}\n    {@const editorDisabled = disableTextEditor(text, acceptTooLarge)}\n\n    <div class=\"jse-contents\" class:jse-hidden={editorDisabled} bind:this={codeMirrorRef} />\n\n    {#if editorDisabled}\n      <Message\n        icon={faExclamationTriangle}\n        type=\"error\"\n        message={`The JSON document is larger than ${formatSize(\n          MAX_DOCUMENT_SIZE_TEXT_MODE,\n          1024\n        )}, ` +\n          `and may crash your browser when loading it in text mode. Actual size: ${formatSize(\n            text.length,\n            1024\n          )}.`}\n        actions={[\n          {\n            text: 'Open anyway',\n            title: 'Open the document in text mode. This may freeze or crash your browser.',\n            onClick: handleAcceptTooLarge\n          },\n          {\n            text: 'Open in tree mode',\n            title: 'Open the document in tree mode. Tree mode can handle large documents.',\n            onClick: handleSwitchToTreeMode\n          },\n          {\n            text: 'Cancel',\n            title: 'Cancel opening this large document.',\n            onClick: cancelLoadTooLarge\n          }\n        ]}\n        onClose={focus}\n      />\n\n      <div class=\"jse-contents jse-preview\">\n        {truncate(text || '', MAX_CHARACTERS_TEXT_PREVIEW)}\n      </div>\n    {/if}\n\n    {#if !editorDisabled}\n      {#if statusBar}\n        <StatusBar {editorState} />\n      {/if}\n\n      {#if jsonParseError}\n        <Message\n          type=\"error\"\n          icon={faExclamationTriangle}\n          message={jsonParseError.message}\n          actions={repairActions}\n          onClick={handleShowMe}\n          onClose={focus}\n        />\n      {/if}\n\n      {#if !jsonParseError && askToFormatApplied && needsFormatting(text)}\n        <Message\n          type=\"success\"\n          message=\"Do you want to format the JSON?\"\n          actions={[\n            {\n              icon: faJSONEditorFormat,\n              text: 'Format',\n              title: 'Format JSON: add proper indentation and new lines (Ctrl+I)',\n              onClick: handleFormat\n            },\n            {\n              icon: faTimes,\n              text: 'No thanks',\n              title: 'Close this message',\n              onClick: () => (askToFormatApplied = false)\n            }\n          ]}\n          onClose={focus}\n        />\n      {/if}\n\n      <ValidationErrorsOverview {validationErrors} selectError={handleSelectValidationError} />\n    {/if}\n  {:else}\n    <div class=\"jse-contents\">\n      <div class=\"jse-loading-space\" />\n      <div class=\"jse-loading\">loading...</div>\n    </div>\n  {/if}\n</div>\n\n<style src=\"./TextMode.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { MenuItem, OnRenderMenuInternal } from '$lib/types'\n  import Menu from '../../../controls/Menu.svelte'\n  import {\n    faEllipsisV,\n    faFilter,\n    faRedo,\n    faSearch,\n    faSortAmountDownAlt,\n    faUndo\n  } from '@fortawesome/free-solid-svg-icons'\n  import type { HistoryState } from '$lib/logic/history'\n  import { CONTEXT_MENU_EXPLANATION } from '$lib/constants.js'\n\n  export let containsValidArray: boolean\n  export let readOnly: boolean\n  export let showSearch = false\n  export let historyState: HistoryState\n  export let onSort: () => void\n  export let onTransform: () => void\n  export let onContextMenu: (event: MouseEvent) => void\n  export let onUndo: () => void\n  export let onRedo: () => void\n  export let onRenderMenu: OnRenderMenuInternal\n\n  function handleToggleSearch() {\n    showSearch = !showSearch\n  }\n\n  let defaultItems: MenuItem[]\n  $: defaultItems = !readOnly\n    ? [\n        {\n          type: 'button',\n          icon: faSortAmountDownAlt,\n          title: 'Sort',\n          className: 'jse-sort',\n          onClick: onSort,\n          disabled: readOnly || !containsValidArray\n        },\n        {\n          type: 'button',\n          icon: faFilter,\n          title: 'Transform contents (filter, sort, project)',\n          className: 'jse-transform',\n          onClick: onTransform,\n          disabled: readOnly || !containsValidArray\n        },\n        {\n          type: 'button',\n          icon: faSearch,\n          title: 'Search (Ctrl+F)',\n          className: 'jse-search',\n          onClick: handleToggleSearch,\n          disabled: !containsValidArray\n        },\n        {\n          type: 'button',\n          icon: faEllipsisV,\n          title: CONTEXT_MENU_EXPLANATION,\n          className: 'jse-contextmenu',\n          onClick: onContextMenu\n        },\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faUndo,\n          title: 'Undo (Ctrl+Z)',\n          className: 'jse-undo',\n          onClick: onUndo,\n          disabled: !historyState.canUndo\n        },\n        {\n          type: 'button',\n          icon: faRedo,\n          title: 'Redo (Ctrl+Shift+Z)',\n          className: 'jse-redo',\n          onClick: onRedo,\n          disabled: !historyState.canRedo\n        },\n        {\n          type: 'space'\n        }\n      ]\n    : [\n        {\n          type: 'space'\n        }\n      ]\n\n  let items: MenuItem[]\n  $: items = onRenderMenu(defaultItems) || defaultItems\n</script>\n\n<Menu {items} />\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import type { JSONParser } from '$lib/types'\n  import { truncate } from '$lib/utils/stringUtils.js'\n  import { MAX_INLINE_OBJECT_CHARS } from '$lib/constants.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let parser: JSONParser\n  export let isSelected: boolean\n  export let containsSearchResult: boolean\n  export let containsActiveSearchResult: boolean\n  export let onEdit: (path: JSONPath) => void\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-inline-value\"\n  class:jse-selected={isSelected}\n  class:jse-highlight={containsSearchResult}\n  class:jse-active={containsActiveSearchResult}\n  on:dblclick={() => onEdit(path)}\n>\n  {truncate(parser.stringify(value) ?? '', MAX_INLINE_OBJECT_CHARS)}\n</button>\n\n<style src=\"./InlineValue.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import type { SortedColumn } from '$lib/types.js'\n  import { SortDirection } from '$lib/types.js'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import Icon from 'svelte-awesome'\n  import { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons'\n  import { isEmpty, isEqual } from 'lodash-es'\n  import { MAX_HEADER_NAME_CHARACTERS, SORT_DIRECTION_NAMES } from '$lib/constants.js'\n  import { truncate } from '$lib/utils/stringUtils.js'\n\n  export let path: JSONPath\n  export let sortedColumn: SortedColumn | undefined\n  export let readOnly: boolean\n  export let onSort: (sortedColumn: SortedColumn) => void\n\n  // TODO: improve truncating of long column names when they are a deeply nested path: the last item from the path should be visible, and halfway the path is least interesting\n  $: columnName = !isEmpty(path) ? stringifyJSONPath(path) : 'values'\n\n  $: sortDirection =\n    sortedColumn && isEqual(path, sortedColumn?.path) ? sortedColumn.sortDirection : undefined\n  $: sortDirectionName = sortDirection ? SORT_DIRECTION_NAMES[sortDirection] : undefined\n\n  function handleSort() {\n    if (readOnly) {\n      return\n    }\n\n    onSort({\n      path,\n      sortDirection: sortDirection === SortDirection.asc ? SortDirection.desc : SortDirection.asc\n    })\n  }\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-column-header\"\n  class:jse-readonly={readOnly}\n  on:click={handleSort}\n  title={!readOnly ? columnName + ' (Click to sort the data by this column)' : columnName}\n>\n  <span class=\"jse-column-name\">\n    {truncate(columnName, MAX_HEADER_NAME_CHARACTERS)}\n  </span>\n  {#if sortDirection !== undefined}\n    <span class=\"jse-column-sort-icon\" title={`Currently sorted in ${sortDirectionName} order`}>\n      <Icon data={sortDirection === SortDirection.asc ? faCaretDown : faCaretUp} />\n    </span>\n  {/if}\n</button>\n\n<style src=\"./ColumnHeader.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { getIn, isJSONArray, isJSONObject } from 'immutable-json-patch'\n  import type { JSONParser, OnChangeMode } from '$lib/types.js'\n  import { Mode } from '$lib/types.js'\n  import { valueType } from '$lib/utils/typeUtils.js'\n  import { findNestedArrays } from '$lib/logic/table.js'\n  import { isEmpty } from 'lodash-es'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n\n  export let text: string | undefined\n  export let json: unknown | undefined\n  export let readOnly: boolean\n  export let parser: JSONParser\n  export let openJSONEditorModal: (path: JSONPath) => void\n  export let onChangeMode: OnChangeMode\n  export let onClick: () => void\n\n  $: action = readOnly ? 'View' : 'Edit'\n\n  let nestedArrayPaths: JSONPath[]\n  $: nestedArrayPaths = json\n    ? findNestedArrays(json)\n        .slice(0, 99)\n        .filter((path) => path.length > 0)\n    : []\n  $: hasNestedArrays = !isEmpty(nestedArrayPaths)\n  $: isEmptyDocument = json === undefined && (text === '' || text === undefined)\n\n  $: documentType = hasNestedArrays\n    ? 'Object with nested arrays'\n    : isEmptyDocument\n      ? 'An empty document'\n      : isJSONObject(json)\n        ? 'An object'\n        : isJSONArray(json)\n          ? 'An empty array' // note: can also be an array with objects but without properties\n          : `A ${valueType(json, parser)}`\n\n  function countItems(nestedArrayPath: JSONPath): number {\n    return (getIn(json, nestedArrayPath) as JSONPath).length\n  }\n</script>\n\n<div class=\"jse-table-mode-welcome\" on:click={() => onClick()} role=\"none\">\n  <div class=\"jse-space jse-before\" />\n\n  <div class=\"jse-nested-arrays\">\n    <div class=\"jse-nested-arrays-title\">{documentType}</div>\n    <div class=\"jse-nested-arrays-info\">\n      {#if hasNestedArrays}\n        An object cannot be opened in table mode. You can open a nested array instead, or open the\n        document in tree mode.\n      {:else}\n        {documentType} cannot be opened in table mode.\n      {/if}\n      {#if isEmptyDocument && !readOnly}\n        You can open the document in tree mode instead, or paste a JSON Array using <b>Ctrl+V</b>.\n      {:else}\n        You can open the document in tree mode instead.\n      {/if}\n    </div>\n    {#each nestedArrayPaths as nestedArrayPath}\n      {@const count = countItems(nestedArrayPath)}\n\n      <button\n        type=\"button\"\n        class=\"jse-nested-array-action\"\n        on:click={() => openJSONEditorModal(nestedArrayPath)}\n      >\n        {action} \"{stringifyJSONPath(nestedArrayPath)}\"\n        <span class=\"jse-nested-array-count\">({count} {count !== 1 ? 'items' : 'item'})</span>\n      </button>\n    {/each}\n    <button type=\"button\" class=\"jse-nested-array-action\" on:click={() => onChangeMode(Mode.tree)}>\n      {action} in tree mode\n    </button>\n  </div>\n\n  <div class=\"jse-space jse-after\" />\n</div>\n\n<style src=\"./TableModeWelcome.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faRotate } from '@fortawesome/free-solid-svg-icons'\n\n  export let count: number\n  export let maxSampleCount: number\n  export let onRefresh: () => void\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-column-header\"\n  title={`The Columns are created by sampling ${maxSampleCount} items out of ${count}. ` +\n    \"If you're missing a column, click here to sample all of the items instead of a subset. \" +\n    'This is slower.'}\n  on:click={() => onRefresh()}\n>\n  <Icon data={faRotate} />\n</button>\n\n<style src=\"./RefreshColumnHeader.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type {\n    AbsolutePopupContext,\n    AbsolutePopupOptions,\n    AfterPatchCallback,\n    Content,\n    ContentErrors,\n    ContextMenuItem,\n    DocumentState,\n    HistoryItem,\n    JSONEditorContext,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONSelection,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnFocus,\n    OnJSONEditorModal,\n    OnRenderContextMenuInternal,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    ParseError,\n    PastedJson,\n    SearchResults,\n    SearchResultDetails,\n    SortedColumn,\n    TransformModalOptions,\n    ValidationError,\n    Validator,\n    ValueNormalization,\n    JSONRepairModalProps\n  } from '$lib/types'\n  import { Mode, SortDirection, ValidationSeverity } from '$lib/types.js'\n  import TableMenu from './menu/TableMenu.svelte'\n  import {\n    compileJSONPointer,\n    existsIn,\n    getIn,\n    immutableJSONPatch,\n    isJSONArray,\n    type JSONPatchDocument,\n    type JSONPath\n  } from 'immutable-json-patch'\n  import {\n    isTextContent,\n    normalizeJsonParseError,\n    parseAndRepair,\n    parsePartialJson,\n    repairPartialJson\n  } from '../../../utils/jsonUtils.js'\n  import {\n    calculateAbsolutePosition,\n    calculateVisibleSection,\n    clearSortedColumnWhenAffectedByOperations,\n    getColumns,\n    groupValidationErrors,\n    maintainColumnOrder,\n    mergeValidationErrors,\n    selectNextColumn,\n    selectNextRow,\n    selectPreviousColumn,\n    selectPreviousRow,\n    toTableCellPosition\n  } from '$lib/logic/table.js'\n  import { isEmpty, isEqual, uniqueId } from 'lodash-es'\n  import {\n    activeElementIsChildOf,\n    createNormalizationFunctions,\n    encodeDataPath,\n    findParentWithNodeName,\n    getDataPathFromTarget,\n    getWindow,\n    isChildOf\n  } from '$lib/utils/domUtils.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import {\n    createDocumentState,\n    documentStatePatch,\n    getEnforceString,\n    getInRecursiveState,\n    setInDocumentState,\n    syncDocumentState\n  } from '$lib/logic/documentState.js'\n  import { isObjectOrArray, isUrl, stringConvert } from '$lib/utils/typeUtils.js'\n  import InlineValue from './tag/InlineValue.svelte'\n  import {\n    createNestedValueOperations,\n    revertJSONPatchWithMoveOperations\n  } from '$lib/logic/operations.js'\n  import {\n    createValueSelection,\n    getAnchorPath,\n    getFocusPath,\n    isEditingSelection,\n    isJSONSelection,\n    isValueSelection,\n    pathInSelection,\n    pathStartsWith,\n    removeEditModeFromSelection\n  } from '$lib/logic/selection.js'\n  import { createHistory } from '$lib/logic/history.js'\n  import ColumnHeader from './ColumnHeader.svelte'\n  import { sortJson } from '$lib/logic/sort.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { createFocusTracker } from '$lib/components/controls/createFocusTracker.js'\n  import { getContext, onDestroy, onMount, tick } from 'svelte'\n  import { jsonrepair } from 'jsonrepair'\n  import Message from '../../controls/Message.svelte'\n  import { faCheck, faCode, faWrench } from '@fortawesome/free-solid-svg-icons'\n  import { measure } from '$lib/utils/timeUtils.js'\n  import memoizeOne from 'memoize-one'\n  import { validateJSON } from '$lib/logic/validation.js'\n  import ValidationErrorsOverview from '../../controls/ValidationErrorsOverview.svelte'\n  import {\n    CONTEXT_MENU_HEIGHT,\n    CONTEXT_MENU_WIDTH,\n    SCROLL_DURATION,\n    SEARCH_BOX_HEIGHT\n  } from '$lib/constants.js'\n  import { noop } from '$lib/utils/noop.js'\n  import { createJump } from '$lib/assets/jump.js/src/jump.js'\n  import ValidationErrorIcon from '../treemode/ValidationErrorIcon.svelte'\n  import {\n    onCopy,\n    onCut,\n    onDuplicateRow,\n    onInsertAfterRow,\n    onInsertBeforeRow,\n    onInsertCharacter,\n    onPaste,\n    onRemove,\n    onRemoveRow\n  } from '$lib/logic/actions.js'\n  import JSONRepairModal from '../../modals/JSONRepairModal.svelte'\n  import { resizeObserver } from '$lib/actions/resizeObserver.js'\n  import CopyPasteModal from '../../../components/modals/CopyPasteModal.svelte'\n  import ContextMenuPointer from '../../../components/controls/contextmenu/ContextMenuPointer.svelte'\n  import SearchBox from '../../controls/SearchBox.svelte'\n  import TableModeWelcome from './TableModeWelcome.svelte'\n  import JSONPreview from '../../controls/JSONPreview.svelte'\n  import RefreshColumnHeader from './RefreshColumnHeader.svelte'\n  import createTableContextMenuItems from './contextmenu/createTableContextMenuItems'\n  import ContextMenu from '../../controls/contextmenu/ContextMenu.svelte'\n  import { flattenSearchResults, toRecursiveSearchResults } from '$lib/logic/search.js'\n  import JSONValue from '../treemode/JSONValue.svelte'\n\n  const debug = createDebug('jsoneditor:TableMode')\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n  const jump = createJump()\n  const sortModalId = uniqueId()\n  const transformModalId = uniqueId()\n\n  const isSSR = typeof window === 'undefined'\n  debug('isSSR:', isSSR)\n\n  export let readOnly: boolean\n  export let externalContent: Content\n  export let externalSelection: JSONEditorSelection | undefined\n  export let mainMenuBar: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let flattenColumns: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validator: Validator | undefined\n  export let validationParser: JSONParser\n  export let indentation: number | string\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onRenderValue: OnRenderValue\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n  export let onJSONEditorModal: OnJSONEditorModal\n\n  let normalization: ValueNormalization\n  $: normalization = createNormalizationFunctions({\n    escapeControlCharacters,\n    escapeUnicodeCharacters\n  })\n\n  let refJsonEditor: HTMLDivElement\n  let refContents: HTMLDivElement | undefined\n  let refHiddenInput: HTMLInputElement\n\n  let jsonRepairModalProps: JSONRepairModalProps | undefined = undefined\n\n  createFocusTracker({\n    onMount,\n    onDestroy,\n    getWindow: () => getWindow(refJsonEditor),\n    hasFocus: () => (modalOpen && document.hasFocus()) || activeElementIsChildOf(refJsonEditor),\n    onFocus: () => {\n      hasFocus = true\n      if (onFocus) {\n        onFocus()\n      }\n    },\n    onBlur: () => {\n      hasFocus = false\n      if (onBlur) {\n        onBlur()\n      }\n    }\n  })\n\n  let json: unknown | undefined\n  let text: string | undefined\n  let parseError: ParseError | undefined = undefined\n\n  let pastedJson: PastedJson | undefined\n\n  let searchResultDetails: SearchResultDetails | undefined\n  let searchResults: SearchResults | undefined\n  let showSearch = false\n  let showReplace = false\n\n  $: applySearchBoxSpacing(showSearch)\n\n  function applySearchBoxSpacing(showSearch: boolean) {\n    if (!refContents) {\n      return\n    }\n\n    const offset = showSearch ? SEARCH_BOX_HEIGHT : -SEARCH_BOX_HEIGHT\n    refContents.scrollTo({\n      top: (refContents.scrollTop += offset),\n      left: refContents.scrollLeft\n    })\n  }\n\n  function handleSearch(result: SearchResultDetails | undefined) {\n    searchResultDetails = result\n    searchResults = searchResultDetails\n      ? toRecursiveSearchResults(json, searchResultDetails.items)\n      : undefined\n  }\n\n  async function handleFocusSearch(path: JSONPath) {\n    selection = undefined // navigation path of current selection would be confusing\n    await scrollTo(path)\n  }\n\n  function handleCloseSearch() {\n    showSearch = false\n    showReplace = false\n    focus()\n  }\n\n  $: applyExternalContent(externalContent)\n  $: applyExternalSelection(externalSelection)\n\n  let maxSampleCount = 10_000\n  let columns: JSONPath[] = []\n  $: columns = isJSONArray(json)\n    ? maintainColumnOrder(getColumns(json, flattenColumns, maxSampleCount), columns)\n    : []\n\n  let containsValidArray: boolean\n  $: containsValidArray = !!(json && !isEmpty(columns))\n  $: showRefreshButton = Array.isArray(json) && json.length > maxSampleCount\n\n  // modalOpen is true when one of the modals is open.\n  // This is used to track whether the editor still has focus\n  let modalOpen = false\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let hasFocus = false\n  let copyPasteModalOpen = false\n\n  let itemHeightsCache: Record<number, number> = {}\n\n  let viewPortHeight = 600\n  let scrollTop = 0\n  let defaultItemHeight = 18 // px\n\n  $: visibleSection = calculateVisibleSection(\n    scrollTop,\n    viewPortHeight,\n    json,\n    itemHeightsCache, // warning: itemHeightsCache is mutated and is not responsive itself\n    defaultItemHeight,\n    showSearch ? SEARCH_BOX_HEIGHT : 0\n  )\n\n  $: refreshScrollTop(json)\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function refreshScrollTop(_json: unknown | undefined) {\n    // When the contents go from lots of items and scrollable contents to only a few items and\n    // no vertical scroll, the actual scrollTop changes to 0 but there is no on:scroll event\n    // triggered, so the internal scrollTop variable is not up-to-date.\n    // This is a workaround to update the scrollTop by triggering an on:scroll event\n    if (refContents) {\n      refContents.scrollTo({\n        top: refContents.scrollTop,\n        left: refContents.scrollLeft\n      })\n    }\n  }\n\n  function handleSelect(updatedSelection: JSONSelection | undefined) {\n    selection = updatedSelection\n  }\n\n  function emitOnSelect(updatedSelection: JSONSelection | undefined) {\n    if (!isEqual(updatedSelection, externalSelection)) {\n      debug('onSelect', updatedSelection)\n      onSelect(updatedSelection)\n    }\n  }\n\n  $: emitOnSelect(selection)\n\n  function clearSelectionWhenNotExisting(json: unknown | undefined) {\n    if (!selection || json === undefined) {\n      return\n    }\n\n    if (existsIn(json, getAnchorPath(selection)) && existsIn(json, getFocusPath(selection))) {\n      return\n    }\n\n    debug('clearing selection: path does not exist anymore', selection)\n    selection = undefined // TODO: try find the closest cell that still exists (similar to getInitialSelection)\n  }\n\n  let documentState: DocumentState | undefined =\n    json !== undefined ? createDocumentState({ json }) : undefined\n  let selection: JSONSelection | undefined\n  let sortedColumn: SortedColumn | undefined\n  let textIsRepaired = false\n\n  function onSortByHeader(newSortedColumn: SortedColumn) {\n    if (readOnly) {\n      return\n    }\n\n    debug('onSortByHeader', newSortedColumn)\n\n    const rootPath: JSONPath = []\n    const direction = newSortedColumn.sortDirection === SortDirection.desc ? -1 : 1\n    const operations = sortJson(json, rootPath, newSortedColumn.path, direction)\n    handlePatch(operations, (_, patchedState) => {\n      return {\n        state: patchedState,\n        sortedColumn: newSortedColumn\n      }\n    })\n  }\n\n  const history = createHistory<HistoryItem>({\n    onChange: (state) => {\n      historyState = state\n    }\n  })\n  let historyState = history.getState()\n\n  let context: JSONEditorContext\n  $: context = {\n    mode: Mode.table,\n    readOnly,\n    parser,\n    normalization,\n    getJson: () => json,\n    getDocumentState: () => documentState,\n    findElement,\n    findNextInside,\n    focus,\n    onPatch: (operations, afterPatch) => {\n      // When having flattened table columns and having inserted a new row, it is possible that\n      // we edit a nested value of which the parent object is not existing. Therefore, we call\n      // replaceNestedValue to create the parent object(s) first.\n      return handlePatch(createNestedValueOperations(operations, json), afterPatch)\n    },\n    onSelect: handleSelect,\n    onFind: openFind,\n    onPasteJson: handlePasteJson,\n    onRenderValue\n  }\n\n  function applyExternalContent(content: Content) {\n    const currentContent = { json }\n    const isChanged = isTextContent(content)\n      ? content.text !== text\n      : !isEqual(currentContent.json, content.json)\n\n    debug('update external content', { isChanged })\n\n    if (!isChanged) {\n      // no actual change, don't do anything\n      return\n    }\n\n    const previousState = { json, documentState, selection, sortedColumn, text, textIsRepaired }\n\n    if (isTextContent(content)) {\n      try {\n        json = parseMemoizeOne(content.text)\n        documentState = syncDocumentState(json, documentState)\n        text = content.text\n        textIsRepaired = false\n        parseError = undefined\n      } catch (err) {\n        try {\n          json = parseMemoizeOne(jsonrepair(content.text))\n          documentState = syncDocumentState(json, documentState)\n          text = content.text\n          textIsRepaired = true\n          parseError = undefined\n        } catch (repairError) {\n          // no valid JSON, will show empty document or invalid json\n          json = undefined\n          documentState = undefined\n          text = content.text\n          textIsRepaired = false\n          parseError =\n            text !== ''\n              ? normalizeJsonParseError(text, (err as Error).message || String(err))\n              : undefined\n        }\n      }\n    } else {\n      json = content.json\n      documentState = syncDocumentState(json, documentState)\n      text = undefined\n      textIsRepaired = false\n      parseError = undefined\n    }\n\n    // make sure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    // reset the sorting order (we don't know...)\n    sortedColumn = undefined\n\n    addHistoryItem(previousState)\n  }\n\n  function applyExternalSelection(externalSelection: JSONEditorSelection | undefined) {\n    if (isEqual(selection, externalSelection)) {\n      return\n    }\n\n    debug('applyExternalSelection', { selection, externalSelection })\n\n    if (isJSONSelection(externalSelection)) {\n      selection = externalSelection\n    }\n  }\n\n  interface PreviousState {\n    json: unknown | undefined\n    text: string | undefined\n    documentState: DocumentState | undefined\n    selection: JSONSelection | undefined\n    textIsRepaired: boolean\n    sortedColumn: SortedColumn | undefined\n  }\n\n  function addHistoryItem(previous: PreviousState) {\n    if (previous.json === undefined && previous.text === undefined) {\n      // initialization -> do not create a history item\n      return\n    }\n\n    const canPatch = json !== undefined && previous.json !== undefined\n\n    history.add({\n      undo: {\n        patch: canPatch ? [{ op: 'replace', path: '', value: previous.json }] : undefined,\n        json: previous.json,\n        text: previous.text,\n        documentState: previous.documentState,\n        textIsRepaired: previous.textIsRepaired,\n        selection: removeEditModeFromSelection(previous.selection),\n        sortedColumn: previous.sortedColumn\n      },\n      redo: {\n        patch: canPatch ? [{ op: 'replace', path: '', value: json }] : undefined,\n        json,\n        text,\n        documentState,\n        textIsRepaired,\n        selection: removeEditModeFromSelection(selection),\n        sortedColumn\n      }\n    })\n  }\n\n  let validationErrors: ValidationError[] = []\n  $: updateValidationErrors(json, validator, parser, validationParser)\n  $: groupedValidationErrors = groupValidationErrors(validationErrors, columns)\n\n  // because onChange returns the validation errors and there is also a separate listener,\n  // we would execute validation twice. Memoizing the last result solves this.\n  const memoizedValidate = memoizeOne(validateJSON)\n\n  function updateValidationErrors(\n    json: unknown,\n    validator: Validator | undefined,\n    parser: JSONParser,\n    validationParser: JSONParser\n  ) {\n    measure(\n      () => {\n        let newValidationErrors: ValidationError[]\n        try {\n          newValidationErrors = memoizedValidate(json, validator, parser, validationParser)\n        } catch (err) {\n          newValidationErrors = [\n            {\n              path: [],\n              message: 'Failed to validate: ' + (err as Error).message,\n              severity: ValidationSeverity.warning\n            }\n          ]\n        }\n\n        if (!isEqual(newValidationErrors, validationErrors)) {\n          debug('validationErrors changed:', newValidationErrors)\n          validationErrors = newValidationErrors\n        }\n      },\n      (duration) => debug(`validationErrors updated in ${duration} ms`)\n    )\n  }\n\n  export function validate(): ContentErrors | undefined {\n    debug('validate')\n\n    if (parseError) {\n      return {\n        parseError,\n        isRepairable: false // not applicable, if repairable, we will not have a parseError\n      }\n    }\n\n    // make sure the validation results are up-to-date\n    // normally, they are only updated on the next tick after the json is changed\n    updateValidationErrors(json, validator, parser, validationParser)\n    return !isEmpty(validationErrors) ? { validationErrors } : undefined\n  }\n\n  export function patch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    debug('patch', operations, afterPatch)\n\n    if (json === undefined) {\n      throw new Error('Cannot apply patch: no JSON')\n    }\n\n    const previousJson = json\n    const previousState: PreviousState = {\n      json: undefined, // not needed: we use patch to reconstruct the json\n      text,\n      documentState,\n      selection: removeEditModeFromSelection(selection),\n      sortedColumn,\n      textIsRepaired\n    }\n\n    // execute the patch operations\n    const undo: JSONPatchDocument = revertJSONPatchWithMoveOperations(\n      json,\n      operations\n    ) as JSONPatchDocument\n    const patched = documentStatePatch(json, documentState, operations)\n\n    // Clear the sorted column when needed. We need to do this before `afterPatch`,\n    // else we clear any changed made in the callback. It is a bit odd that\n    // afterPatch does not receive the actual previousDocumentState. Better ideas?\n    const patchedSortedColumn = clearSortedColumnWhenAffectedByOperations(\n      sortedColumn,\n      operations,\n      columns\n    )\n\n    const callback =\n      typeof afterPatch === 'function'\n        ? afterPatch(patched.json, patched.documentState, selection)\n        : undefined\n\n    json = callback?.json !== undefined ? callback.json : patched.json\n    documentState = callback?.state !== undefined ? callback.state : patched.documentState\n    selection = callback?.selection !== undefined ? callback.selection : selection\n    sortedColumn =\n      callback?.sortedColumn !== undefined ? callback.sortedColumn : patchedSortedColumn\n    text = undefined\n    textIsRepaired = false\n    pastedJson = undefined\n    parseError = undefined\n\n    history.add({\n      undo: {\n        patch: undo,\n        ...previousState\n      },\n      redo: {\n        patch: operations,\n        json: undefined, // not needed: we use patch to reconstruct the json\n        text: undefined,\n        documentState,\n        selection: removeEditModeFromSelection(selection),\n        sortedColumn,\n        textIsRepaired\n      }\n    })\n\n    return {\n      json,\n      previousJson,\n      undo,\n      redo: operations\n    }\n  }\n\n  function handlePatch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    debug('handlePatch', operations, afterPatch)\n\n    const previousContent = { json, text }\n    const patchResult = patch(operations, afterPatch)\n\n    emitOnChange(previousContent, patchResult)\n\n    return patchResult\n  }\n\n  function emitOnChange(previousContent: Content, patchResult: JSONPatchResult | undefined) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (previousContent.json === undefined && previousContent?.text === undefined) {\n      // initialization -> do not fire an onChange event\n      return\n    }\n\n    // make sure we cannot send an invalid contents like having both\n    // json and text defined, or having none defined\n    if (onChange) {\n      if (text !== undefined) {\n        const content = { text, json: undefined }\n        onChange(content, previousContent, {\n          contentErrors: validate(),\n          patchResult\n        })\n      } else if (json !== undefined) {\n        const content = { text: undefined, json }\n        onChange(content, previousContent, {\n          contentErrors: validate(),\n          patchResult\n        })\n      }\n    }\n  }\n\n  function handlePasteJson(newPastedJson: PastedJson) {\n    debug('pasted json as text', newPastedJson)\n\n    pastedJson = newPastedJson\n  }\n\n  function findNextInside(path: JSONPath): JSONSelection {\n    const index = parseInt(path[0], 10)\n    const nextPath = [String(index + 1), ...path.slice(1)]\n\n    return existsIn(json, nextPath) ? createValueSelection(nextPath) : createValueSelection(path)\n  }\n\n  export function focus() {\n    debug('focus')\n    // with just .focus(), sometimes the input doesn't react on onpaste events\n    // in Chrome when having a large document open and then doing cut/paste.\n    // Calling both .focus() and .select() did solve this issue.\n    if (refHiddenInput) {\n      refHiddenInput.focus()\n      refHiddenInput.select()\n    }\n  }\n\n  function handleWindowMouseDown(event: MouseEvent & { currentTarget: EventTarget & Window }) {\n    const outsideEditor = !isChildOf(\n      event.target as Element,\n      (element) => element === refJsonEditor\n    )\n    if (outsideEditor) {\n      if (isEditingSelection(selection)) {\n        debug('click outside the editor, exit edit mode')\n        selection = removeEditModeFromSelection(selection)\n\n        if (hasFocus && refHiddenInput) {\n          refHiddenInput.focus()\n          refHiddenInput.blur()\n        }\n\n        debug('blur (outside editor)')\n        if (refHiddenInput) {\n          refHiddenInput.blur()\n        }\n      }\n    }\n  }\n\n  function handleScroll(event: Event) {\n    scrollTop = (event.target as HTMLElement)['scrollTop']\n  }\n\n  function handleMouseDown(event: MouseEvent) {\n    // only handle when the left or right mouse button is pressed, not the middle mouse button (scroll wheel)\n    if (event.buttons !== 1 && event.buttons !== 2) {\n      return\n    }\n\n    const target = event.target as HTMLElement\n    if (!target.isContentEditable) {\n      focus()\n    }\n\n    const path = getDataPathFromTarget(target)\n    if (path) {\n      // when clicking inside the current selection, editing a value, do nothing\n      if (isEditingSelection(selection) && pathInSelection(json, selection, path)) {\n        return\n      }\n\n      selection = createValueSelection(path)\n\n      event.preventDefault()\n    }\n  }\n\n  function createDefaultSelection(): JSONSelection | undefined {\n    if (isJSONArray(json) && !isEmpty(json) && !isEmpty(columns)) {\n      // Select the first row, first column\n      const path = ['0', ...columns[0]]\n\n      return createValueSelection(path)\n    } else {\n      return undefined\n    }\n  }\n\n  function createDefaultSelectionWhenUndefined() {\n    if (!selection) {\n      selection = createDefaultSelection()\n    }\n  }\n\n  export function acceptAutoRepair() {\n    if (textIsRepaired && json !== undefined) {\n      const previousContent = { json, text }\n      const previousState = { json, documentState, selection, sortedColumn, text, textIsRepaired }\n\n      // json stays as is\n      text = undefined\n      textIsRepaired = false\n\n      clearSelectionWhenNotExisting(json)\n\n      addHistoryItem(previousState)\n\n      // we could work out a patchResult, or use patch(), but only when the previous and new\n      // contents are both json and not text. We go for simplicity and consistency here and\n      // do _not_ return a patchResult ever.\n      const patchResult = undefined\n\n      emitOnChange(previousContent, patchResult)\n    }\n\n    return { json, text }\n  }\n\n  /**\n   * Scroll the window vertically to the node with given path.\n   * Expand the path when needed.\n   */\n  export function scrollTo(path: JSONPath, scrollToWhenVisible = true): Promise<void> {\n    const searchBoxHeight = showSearch ? SEARCH_BOX_HEIGHT : 0\n    const top = calculateAbsolutePosition(path, columns, itemHeightsCache, defaultItemHeight)\n    const roughDistance = top - scrollTop + searchBoxHeight + defaultItemHeight\n    const elem = findElement(path)\n\n    debug('scrollTo', { path, top, scrollTop, elem })\n\n    if (!refContents) {\n      return Promise.resolve()\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    if (elem && !scrollToWhenVisible) {\n      const elemRect = elem.getBoundingClientRect()\n      if (elemRect.bottom > viewPortRect.top && elemRect.top < viewPortRect.bottom) {\n        // element is fully or partially visible, don't scroll to it\n        return Promise.resolve()\n      }\n    }\n\n    const offset = -Math.max(searchBoxHeight + 2 * defaultItemHeight, viewPortRect.height / 4)\n\n    if (elem) {\n      return new Promise((resolve) => {\n        jump(elem, {\n          container: refContents,\n          offset,\n          duration: SCROLL_DURATION,\n          callback: () => {\n            // TODO: improve horizontal scrolling: animate and integrate with the vertical scrolling (jump)\n            scrollToHorizontal(path)\n            resolve()\n          }\n        })\n      })\n    } else {\n      return new Promise((resolve) => {\n        jump(roughDistance, {\n          container: refContents,\n          offset,\n          duration: SCROLL_DURATION,\n          callback: async () => {\n            // ensure the element is rendered now that it is scrolled into view\n            await tick()\n\n            // TODO: improve horizontal scrolling: animate and integrate with the vertical scrolling (jump)\n            scrollToHorizontal(path)\n            resolve()\n          }\n        })\n      })\n    }\n  }\n\n  function scrollToVertical(path: JSONPath) {\n    if (!refContents) {\n      return\n    }\n\n    const { rowIndex } = toTableCellPosition(path, columns)\n    const top = calculateAbsolutePosition(path, columns, itemHeightsCache, defaultItemHeight)\n    const bottom = top + (itemHeightsCache[rowIndex] || defaultItemHeight)\n\n    const headerHeight = defaultItemHeight\n    const viewPortRect = refContents.getBoundingClientRect()\n    const viewPortTop = scrollTop\n    const viewPortBottom = scrollTop + viewPortRect.height - headerHeight\n\n    if (bottom > viewPortBottom) {\n      const diff = bottom - viewPortBottom\n      refContents.scrollTop += diff\n    }\n\n    if (top < viewPortTop) {\n      const diff = viewPortTop - top\n      refContents.scrollTop -= diff\n    }\n  }\n\n  function scrollToHorizontal(path: JSONPath) {\n    const elem = findElement(path)\n    if (!elem || !refContents) {\n      return\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    const elemRect = elem.getBoundingClientRect() // TODO: scroll to column instead of item (is always rendered)\n\n    if (elemRect.right > viewPortRect.right) {\n      const diff = elemRect.right - viewPortRect.right\n      refContents.scrollLeft += diff\n    }\n\n    if (elemRect.left < viewPortRect.left) {\n      const diff = viewPortRect.left - elemRect.left\n      refContents.scrollLeft -= diff\n    }\n  }\n\n  function scrollIntoView(path: JSONPath) {\n    scrollToVertical(path)\n    scrollToHorizontal(path)\n  }\n\n  /**\n   * Find the DOM element of a given path.\n   * Note that the path can only be found when the node is expanded.\n   */\n  export function findElement(path: JSONPath): Element | undefined {\n    const column = columns.find((c) => pathStartsWith(path.slice(1), c))\n\n    const resolvedPath = column ? path.slice(0, 1).concat(column) : path\n\n    return (\n      refContents?.querySelector(`td[data-path=\"${encodeDataPath(resolvedPath)}\"]`) ?? undefined\n    )\n  }\n\n  function openContextMenu({\n    anchor,\n    left,\n    top,\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n    showTip\n  }: AbsolutePopupOptions) {\n    const defaultItems: ContextMenuItem[] = createTableContextMenuItems({\n      json,\n      documentState,\n      selection,\n      readOnly,\n\n      onEditValue: handleEditValue,\n      onEditRow: handleEditRow,\n      onToggleEnforceString: handleToggleEnforceString,\n\n      onCut: handleCut,\n      onCopy: handleCopy,\n      onPaste: handlePasteFromMenu,\n\n      onRemove: handleRemove,\n      onDuplicateRow: handleDuplicateRow,\n      onInsertBeforeRow: handleInsertBeforeRow,\n      onInsertAfterRow: handleInsertAfterRow,\n      onRemoveRow: handleRemoveRow\n    })\n\n    const items = onRenderContextMenu(defaultItems) ?? defaultItems\n\n    if (items === false) {\n      return\n    }\n\n    const props = {\n      tip: showTip\n        ? 'Tip: you can open this context menu via right-click or with Ctrl+Q'\n        : undefined,\n      items,\n      onRequestClose: function () {\n        closeAbsolutePopup(popupId)\n        focus()\n      }\n    }\n\n    const options = {\n      left,\n      top,\n      offsetTop,\n      offsetLeft,\n      width,\n      height,\n      anchor,\n      closeOnOuterClick: true,\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    }\n\n    modalOpen = true\n\n    const popupId = openAbsolutePopup(ContextMenu, props, options)\n  }\n\n  function handleContextMenu(event: Event) {\n    if (isEditingSelection(selection)) {\n      return\n    }\n\n    if (event) {\n      event.stopPropagation()\n      event.preventDefault()\n    }\n\n    if (event && event.type === 'contextmenu' && event.target !== refHiddenInput) {\n      // right mouse click to open context menu\n      openContextMenu({\n        left: (event as MouseEvent).clientX,\n        top: (event as MouseEvent).clientY,\n        width: CONTEXT_MENU_WIDTH,\n        height: CONTEXT_MENU_HEIGHT,\n        showTip: false\n      })\n    } else {\n      // type === 'keydown' (from the quick key Ctrl+Q)\n      // or target is hidden input -> context menu button on keyboard\n      const anchor = refContents?.querySelector('.jse-table-cell.jse-selected-value')\n      if (anchor) {\n        openContextMenu({\n          anchor,\n          offsetTop: 2,\n          width: CONTEXT_MENU_WIDTH,\n          height: CONTEXT_MENU_HEIGHT,\n          showTip: false\n        })\n      } else {\n        // fallback on just displaying the TreeContextMenu top left\n        const rect = refContents?.getBoundingClientRect()\n        if (rect) {\n          openContextMenu({\n            top: rect.top + 2,\n            left: rect.left + 2,\n            width: CONTEXT_MENU_WIDTH,\n            height: CONTEXT_MENU_HEIGHT,\n            showTip: false\n          })\n        }\n      }\n    }\n  }\n\n  function handleContextMenuFromTableMenu(event: MouseEvent) {\n    openContextMenu({\n      anchor: findParentWithNodeName(event.target as HTMLElement, 'BUTTON'),\n      offsetTop: 0,\n      width: CONTEXT_MENU_WIDTH,\n      height: CONTEXT_MENU_HEIGHT,\n      showTip: true\n    })\n  }\n\n  function handleEditValue() {\n    if (readOnly || !selection) {\n      return\n    }\n\n    const path = getFocusPath(selection)\n    const value = getIn(json, path)\n    if (isObjectOrArray(value)) {\n      openJSONEditorModal(path)\n    } else {\n      selection = createValueSelection(path)\n    }\n  }\n\n  function handleEditRow() {\n    if (readOnly || !selection) {\n      return\n    }\n\n    const path = getFocusPath(selection)\n    const pathRow = path.slice(0, 1)\n    openJSONEditorModal(pathRow)\n  }\n\n  function handleToggleEnforceString() {\n    if (readOnly || !isValueSelection(selection)) {\n      return\n    }\n\n    const path = selection.path\n    const pointer = compileJSONPointer(path)\n    const value = getIn(json, path)\n    const enforceString = !getEnforceString(json, documentState, path)\n    const updatedValue = enforceString ? String(value) : stringConvert(String(value), parser)\n\n    debug('handleToggleEnforceString', { enforceString, value, updatedValue })\n\n    handlePatch(\n      [\n        {\n          op: 'replace',\n          path: pointer,\n          value: updatedValue\n        }\n      ],\n      (_, patchedState) => {\n        return {\n          state: setInDocumentState(json, patchedState, path, { type: 'value', enforceString })\n        }\n      }\n    )\n  }\n\n  async function handleParsePastedJson() {\n    debug('apply pasted json', pastedJson)\n    if (!pastedJson) {\n      return\n    }\n\n    const { onPasteAsJson } = pastedJson\n    onPasteAsJson()\n\n    // TODO: get rid of the setTimeout here\n    setTimeout(focus)\n  }\n\n  function handlePasteFromMenu() {\n    copyPasteModalOpen = true\n  }\n\n  function handleClearPastedJson() {\n    debug('clear pasted json')\n    pastedJson = undefined\n    focus()\n  }\n\n  function handleRequestRepair() {\n    onChangeMode(Mode.text)\n  }\n\n  async function handleCut(indent: boolean) {\n    await onCut({\n      json,\n      selection,\n      indentation: indent ? indentation : undefined,\n      readOnly,\n      parser,\n      onPatch: handlePatch\n    })\n  }\n\n  async function handleCopy(indent = true) {\n    if (json === undefined) {\n      return\n    }\n\n    await onCopy({\n      json,\n      selection,\n      indentation: indent ? indentation : undefined,\n      parser\n    })\n  }\n\n  function handleRemove() {\n    onRemove({\n      json,\n      text,\n      selection,\n      keepSelection: true,\n      readOnly,\n      onChange,\n      onPatch: handlePatch\n    })\n  }\n\n  function handleDuplicateRow() {\n    onDuplicateRow({ json, selection, columns, readOnly, onPatch: handlePatch })\n  }\n\n  function handleInsertBeforeRow() {\n    onInsertBeforeRow({ json, selection, columns, readOnly, onPatch: handlePatch })\n  }\n\n  function handleInsertAfterRow() {\n    onInsertAfterRow({ json, selection, columns, readOnly, onPatch: handlePatch })\n  }\n\n  function handleRemoveRow() {\n    onRemoveRow({ json, selection, columns, readOnly, onPatch: handlePatch })\n  }\n\n  async function handleInsertCharacter(char: string) {\n    await onInsertCharacter({\n      char,\n      selectInside: false,\n      json,\n      selection: selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onReplaceJson: handleReplaceJson,\n      onSelect: handleSelect\n    })\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    debug('keydown', { combo, key: event.key })\n\n    if (combo === 'Ctrl+X') {\n      // cut formatted\n      event.preventDefault()\n      handleCut(true)\n    }\n    if (combo === 'Ctrl+Shift+X') {\n      // cut compact\n      event.preventDefault()\n      handleCut(false)\n    }\n    if (combo === 'Ctrl+C') {\n      // copy formatted\n      event.preventDefault()\n      handleCopy(true)\n    }\n    if (combo === 'Ctrl+Shift+C') {\n      // copy compact\n      event.preventDefault()\n      handleCopy(false)\n    }\n    // Note: Ctrl+V (paste) is handled by the on:paste event\n\n    if (combo === 'Ctrl+D') {\n      event.preventDefault()\n      // handleDuplicate()\n      // TODO: implement duplicate\n    }\n    if (combo === 'Delete' || combo === 'Backspace') {\n      event.preventDefault()\n      handleRemove()\n    }\n    if (combo === 'Insert') {\n      event.preventDefault()\n      // TODO: implement insert\n    }\n    if (combo === 'Ctrl+A') {\n      event.preventDefault()\n      // selection = selectAll()\n      // TODO: implement select all\n    }\n\n    if (combo === 'Ctrl+Q') {\n      handleContextMenu(event)\n    }\n\n    if (combo === 'ArrowLeft') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (selection) {\n        const newSelection = selectPreviousColumn(columns, selection)\n        selection = newSelection\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'ArrowRight') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (selection) {\n        const newSelection = selectNextColumn(columns, selection)\n        selection = newSelection\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'ArrowUp') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (selection) {\n        const newSelection = selectPreviousRow(columns, selection)\n        selection = newSelection\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'ArrowDown') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (selection) {\n        const newSelection = selectNextRow(json, columns, selection)\n        selection = newSelection\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'Enter' && selection) {\n      if (isValueSelection(selection)) {\n        event.preventDefault()\n\n        const path = selection.path\n        const value = getIn(json, path)\n        if (isObjectOrArray(value)) {\n          // edit nested object/array\n          openJSONEditorModal(path)\n        } else {\n          if (!readOnly) {\n            // go to value edit mode\n            selection = { ...selection, edit: true }\n          }\n        }\n      }\n    }\n\n    const normalizedCombo = combo.replace(/^Shift\\+/, '') // replace 'Shift+A' with 'A'\n    if (normalizedCombo.length === 1 && selection) {\n      // a regular key like a, A, _, etc is entered.\n      // Replace selected contents with a new value having this first character as text\n      event.preventDefault()\n      handleInsertCharacter(event.key)\n      return\n    }\n\n    if (combo === 'Ctrl+Enter' && isValueSelection(selection)) {\n      const value = getIn(json, selection.path)\n\n      if (isUrl(value)) {\n        // open url in new page\n        window.open(String(value), '_blank')\n      }\n    }\n\n    if (combo === 'Escape' && selection) {\n      event.preventDefault()\n      selection = undefined\n    }\n\n    if (combo === 'Ctrl+F') {\n      event.preventDefault()\n      openFind(false)\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      openFind(true)\n    }\n\n    if (combo === 'Ctrl+Z') {\n      event.preventDefault()\n\n      handleUndo()\n    }\n\n    if (combo === 'Ctrl+Shift+Z') {\n      event.preventDefault()\n\n      handleRedo()\n    }\n  }\n\n  function handlePaste(event: ClipboardEvent) {\n    event.preventDefault()\n\n    const clipboardText = event.clipboardData?.getData('text/plain') as string | undefined\n    if (clipboardText === undefined) {\n      return\n    }\n\n    onPaste({\n      clipboardText,\n      json,\n      selection: selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onChangeText: handleChangeText,\n      openRepairModal\n    })\n  }\n\n  // TODO: this function is duplicated from TreeMode. See if we can reuse the code instead\n  function handleReplaceJson(updatedJson: unknown, afterPatch?: AfterPatchCallback) {\n    const previousContent = { json, text }\n    const previousState = { json, documentState, selection, sortedColumn, text, textIsRepaired }\n\n    const updatedState = syncDocumentState(updatedJson, documentState)\n\n    const callback =\n      typeof afterPatch === 'function'\n        ? afterPatch(updatedJson, updatedState, selection)\n        : undefined\n\n    json = callback?.json !== undefined ? callback.json : updatedJson\n    documentState = callback?.state !== undefined ? callback.state : updatedState\n    selection = callback?.selection !== undefined ? callback.selection : selection\n    sortedColumn = undefined // we can't know whether the new json is still sorted or not\n    text = undefined\n    textIsRepaired = false\n    parseError = undefined\n\n    // make sure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem(previousState)\n\n    // we could work out a patchResult, or use patch(), but only when the previous and new\n    // contents are both json and not text. We go for simplicity and consistency here and\n    // do _not_ return a patchResult ever.\n    const patchResult = undefined\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  // TODO: this function is duplicated from TreeMode. See if we can reuse the code instead\n  function handleChangeText(updatedText: string, afterPatch?: AfterPatchCallback) {\n    debug('handleChangeText')\n\n    const previousContent = { json, text }\n    const previousState = { json, documentState, selection, sortedColumn, text, textIsRepaired }\n\n    try {\n      json = parseMemoizeOne(updatedText)\n      documentState = syncDocumentState(json, documentState)\n      text = undefined\n      textIsRepaired = false\n      parseError = undefined\n    } catch (err) {\n      try {\n        json = parseMemoizeOne(jsonrepair(updatedText))\n        documentState = syncDocumentState(json, documentState)\n        text = updatedText\n        textIsRepaired = true\n        parseError = undefined\n      } catch (repairError) {\n        // no valid JSON, will show empty document or invalid json\n        json = undefined\n        documentState = undefined\n        text = updatedText\n        textIsRepaired = false\n        parseError =\n          text !== ''\n            ? normalizeJsonParseError(text, (err as Error).message || String(err))\n            : undefined\n      }\n    }\n\n    if (typeof afterPatch === 'function') {\n      const callback = afterPatch(json, documentState, selection)\n\n      json = callback?.json !== undefined ? callback.json : json\n      documentState = callback?.state !== undefined ? callback.state : documentState\n      selection = callback?.selection !== undefined ? callback.selection : selection\n    }\n\n    // ensure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem(previousState)\n\n    // no JSON patch actions available in text mode\n    const patchResult = undefined\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  function handleSelectValidationError(error: ValidationError) {\n    debug('select validation error', error)\n\n    selection = createValueSelection(error.path)\n\n    scrollTo(error.path)\n  }\n\n  function openSortModal(rootPath: JSONPath) {\n    if (readOnly || json === undefined) {\n      return\n    }\n\n    modalOpen = true\n\n    onSortModal({\n      id: sortModalId,\n      json,\n      rootPath,\n      onSort: ({ operations, itemPath, direction }) => {\n        debug('onSort', operations, rootPath, itemPath, direction)\n\n        handlePatch(operations, (_, patchedState) => {\n          return {\n            state: patchedState,\n            sortedColumn: {\n              path: itemPath,\n              sortDirection: direction === -1 ? SortDirection.desc : SortDirection.asc\n            }\n          }\n        })\n      },\n      onClose: () => {\n        modalOpen = false\n        setTimeout(focus)\n      }\n    })\n  }\n\n  /**\n   * This method is exposed via JSONEditor.transform\n   */\n  export function openTransformModal(options: TransformModalOptions) {\n    if (json === undefined) {\n      return\n    }\n\n    const { id, onTransform, onClose } = options\n    const rootPath = options.rootPath || []\n\n    modalOpen = true\n\n    onTransformModal({\n      id: id || transformModalId,\n      json,\n      rootPath: rootPath || [],\n      onTransform: (operations) => {\n        if (onTransform) {\n          onTransform({\n            operations,\n            json: json,\n            transformedJson: immutableJSONPatch(json, operations)\n          })\n        } else {\n          debug('onTransform', rootPath, operations)\n\n          handlePatch(operations)\n        }\n      },\n      onClose: () => {\n        modalOpen = false\n        setTimeout(focus)\n        if (onClose) {\n          onClose()\n        }\n      }\n    })\n  }\n\n  function openJSONEditorModal(path: JSONPath) {\n    debug('openJSONEditorModal', { path })\n\n    modalOpen = true\n\n    // open a popup where you can edit the nested object/array\n    onJSONEditorModal({\n      content: {\n        json: getIn(json, path)\n      },\n      path,\n      onPatch: handlePatch,\n      onClose: () => {\n        modalOpen = false\n        setTimeout(focus)\n      }\n    })\n  }\n\n  function openRepairModal(text: string, onApply: (repairedText: string) => void) {\n    jsonRepairModalProps = {\n      text,\n      onParse: (text) => parsePartialJson(text, (t) => parseAndRepair(t, parser)),\n      onRepair: repairPartialJson,\n      onApply,\n      onClose: focus\n    }\n  }\n\n  function handleSortAll() {\n    const rootPath: JSONPath = []\n    openSortModal(rootPath)\n  }\n\n  function handleTransformAll() {\n    openTransformModal({\n      rootPath: []\n    })\n  }\n\n  function openFind(findAndReplace: boolean): void {\n    debug('openFind', { findAndReplace })\n\n    showSearch = false\n    showReplace = false\n\n    tick().then(() => {\n      // trick to make sure the focus goes to the search box\n      showSearch = true\n      showReplace = findAndReplace\n    })\n  }\n\n  function handleUndo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canUndo) {\n      return\n    }\n\n    const item = history.undo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.undo.patch ? immutableJSONPatch(json, item.undo.patch) : item.undo.json\n    documentState = item.undo.documentState\n    selection = item.undo.selection\n    sortedColumn = item.undo.sortedColumn\n    text = item.undo.text\n    textIsRepaired = item.undo.textIsRepaired\n    parseError = undefined\n\n    debug('undo', { item, json })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.undo.patch,\n            undo: item.redo.patch\n          }\n        : undefined\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (selection) {\n      scrollTo(getFocusPath(selection), false)\n    }\n  }\n\n  function handleRedo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canRedo) {\n      return\n    }\n\n    const item = history.redo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.redo.patch ? immutableJSONPatch(json, item.redo.patch) : item.redo.json\n    documentState = item.redo.documentState\n    selection = item.redo.selection\n    sortedColumn = item.redo.sortedColumn\n    text = item.redo.text\n    textIsRepaired = item.redo.textIsRepaired\n    parseError = undefined\n\n    debug('redo', { item, json })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.redo.patch,\n            undo: item.undo.patch\n          }\n        : undefined\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (selection) {\n      scrollTo(getFocusPath(selection), false)\n    }\n  }\n\n  function handleResizeContents(element: Element) {\n    viewPortHeight = element.getBoundingClientRect().height\n  }\n\n  function handleResizeRow(element: Element, rowIndex: number) {\n    itemHeightsCache[rowIndex] = element.getBoundingClientRect().height\n  }\n</script>\n\n<svelte:window on:mousedown={handleWindowMouseDown} />\n\n<!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n<div\n  role=\"table\"\n  class=\"jse-table-mode\"\n  class:no-main-menu={!mainMenuBar}\n  on:mousedown={handleMouseDown}\n  on:keydown={handleKeyDown}\n  on:contextmenu={handleContextMenu}\n  bind:this={refJsonEditor}\n>\n  {#if mainMenuBar}\n    <TableMenu\n      {containsValidArray}\n      {readOnly}\n      bind:showSearch\n      {historyState}\n      onSort={handleSortAll}\n      onTransform={handleTransformAll}\n      onUndo={handleUndo}\n      onRedo={handleRedo}\n      onContextMenu={handleContextMenuFromTableMenu}\n      {onRenderMenu}\n    />\n  {/if}\n\n  {#if !isSSR}\n    <label class=\"jse-hidden-input-label\">\n      <input\n        type=\"text\"\n        readonly={true}\n        tabindex=\"-1\"\n        class=\"jse-hidden-input\"\n        bind:this={refHiddenInput}\n        on:paste={handlePaste}\n      />\n    </label>\n    {#if containsValidArray}\n      <div class=\"jse-search-box-container\">\n        <SearchBox\n          {json}\n          {documentState}\n          {parser}\n          {showSearch}\n          {showReplace}\n          {readOnly}\n          {columns}\n          onSearch={handleSearch}\n          onFocus={handleFocusSearch}\n          onPatch={handlePatch}\n          onClose={handleCloseSearch}\n        />\n      </div>\n      <div\n        class=\"jse-contents\"\n        bind:this={refContents}\n        use:resizeObserver={handleResizeContents}\n        on:scroll={handleScroll}\n      >\n        <table class=\"jse-table-main\">\n          <tbody>\n            <tr class=\"jse-table-row jse-table-row-header\">\n              <th class=\"jse-table-cell jse-table-cell-header\">\n                {#if !isEmpty(groupedValidationErrors?.root)}\n                  {@const validationError = mergeValidationErrors(\n                    [],\n                    groupedValidationErrors?.root\n                  )}\n                  {#if validationError}\n                    <div class=\"jse-table-root-error\">\n                      <ValidationErrorIcon {validationError} onExpand={noop} />\n                    </div>\n                  {/if}\n                {/if}\n              </th>\n              {#each columns as column}\n                <th class=\"jse-table-cell jse-table-cell-header\">\n                  <ColumnHeader path={column} {sortedColumn} {readOnly} onSort={onSortByHeader} />\n                </th>\n              {/each}\n              {#if showRefreshButton}\n                <th class=\"jse-table-cell jse-table-cell-header\">\n                  <RefreshColumnHeader\n                    count={Array.isArray(json) ? json.length : 0}\n                    {maxSampleCount}\n                    onRefresh={() => (maxSampleCount = Infinity)}\n                  />\n                </th>\n              {/if}\n            </tr>\n            <tr\n              class=\"jse-table-invisible-start-section\"\n              class:jse-search-box-background={showSearch}\n            >\n              <td style:height={visibleSection.startHeight + 'px'} colspan={columns.length} />\n            </tr>\n            {#each visibleSection.visibleItems as item, visibleIndex}\n              {@const rowIndex = visibleSection.startIndex + visibleIndex}\n              {@const validationErrorsByRow = groupedValidationErrors.rows[rowIndex]}\n              {@const validationError = mergeValidationErrors(\n                [String(rowIndex)],\n                validationErrorsByRow?.row\n              )}\n              {@const searchResultByRow = getInRecursiveState(json, searchResults, [\n                String(rowIndex)\n              ])}\n              <tr class=\"jse-table-row\">\n                {#key rowIndex}\n                  <th\n                    class=\"jse-table-cell jse-table-cell-gutter\"\n                    use:resizeObserver={(element) => handleResizeRow(element, rowIndex)}\n                  >\n                    {rowIndex}\n                    {#if validationError}\n                      <ValidationErrorIcon {validationError} onExpand={noop} />\n                    {/if}\n                  </th>\n                {/key}\n                {#each columns as column, columnIndex}\n                  {@const path = [String(rowIndex)].concat(column)}\n                  {@const value = getIn(item, column)}\n                  {@const isSelected =\n                    isValueSelection(selection) && pathStartsWith(selection.path, path)}\n                  {@const validationErrorsByColumn = validationErrorsByRow?.columns[columnIndex]}\n                  {@const validationError = mergeValidationErrors(path, validationErrorsByColumn)}\n                  <td class=\"jse-table-cell\" data-path={encodeDataPath(path)}>\n                    <div class=\"jse-value-outer\" class:jse-selected-value={isSelected}>\n                      {#if isObjectOrArray(value)}\n                        {@const searchResultsByCell = flattenSearchResults(\n                          getInRecursiveState(item, searchResultByRow, column)\n                        )}\n\n                        {@const containsActiveSearchResult = searchResultsByCell\n                          ? searchResultsByCell.some((item) => item.active)\n                          : false}\n\n                        <InlineValue\n                          {path}\n                          {value}\n                          {parser}\n                          {isSelected}\n                          containsSearchResult={!isEmpty(searchResultsByCell)}\n                          {containsActiveSearchResult}\n                          onEdit={openJSONEditorModal}\n                        />{:else}\n                        {@const searchResultItemsByCell = getInRecursiveState(\n                          json,\n                          searchResults,\n                          path\n                        )?.searchResults}\n\n                        <JSONValue\n                          {path}\n                          value={value !== undefined ? value : ''}\n                          enforceString={getEnforceString(json, documentState, path)}\n                          selection={isSelected ? selection : undefined}\n                          searchResultItems={searchResultItemsByCell}\n                          {context}\n                        />{/if}{#if !readOnly && isSelected && !isEditingSelection(selection)}\n                        <div class=\"jse-context-menu-anchor\">\n                          <ContextMenuPointer selected={true} onContextMenu={openContextMenu} />\n                        </div>\n                      {/if}\n                    </div>\n                    {#if validationError}\n                      <ValidationErrorIcon {validationError} onExpand={noop} />\n                    {/if}\n                  </td>\n                {/each}\n                {#if showRefreshButton}\n                  <td class=\"jse-table-cell\" />\n                {/if}\n              </tr>\n            {/each}\n\n            <tr class=\"jse-table-invisible-end-section\">\n              <td style:height={visibleSection.endHeight + 'px'} colspan={columns.length} />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      {#if pastedJson}\n        <Message\n          type=\"info\"\n          message={`You pasted a JSON ${\n            Array.isArray(pastedJson.contents) ? 'array' : 'object'\n          } as text`}\n          actions={[\n            {\n              icon: faWrench,\n              text: 'Paste as JSON instead',\n              title: 'Paste the text as JSON instead of a single value',\n              // We use mousedown here instead of click: this message pops up\n              // whilst the user is editing a value. When clicking this button,\n              // the actual value is applied and the event is not propagated\n              // and an onClick on this button never happens.\n              onMouseDown: handleParsePastedJson\n            },\n            {\n              text: 'Leave as is',\n              title: 'Keep the pasted content as a single value',\n              onClick: handleClearPastedJson\n            }\n          ]}\n        />\n      {/if}\n\n      {#if textIsRepaired}\n        <Message\n          type=\"success\"\n          message=\"The loaded JSON document was invalid but is successfully repaired.\"\n          actions={!readOnly\n            ? [\n                {\n                  icon: faCheck,\n                  text: 'Ok',\n                  title: 'Accept the repaired document',\n                  onClick: acceptAutoRepair\n                },\n                {\n                  icon: faCode,\n                  text: 'Repair manually instead',\n                  title: 'Leave the document unchanged and repair it manually instead',\n                  onClick: handleRequestRepair\n                }\n              ]\n            : []}\n          onClose={focus}\n        />\n      {/if}\n\n      <ValidationErrorsOverview {validationErrors} selectError={handleSelectValidationError} />\n    {:else if parseError && text !== undefined && text !== ''}\n      <Message\n        type=\"error\"\n        message=\"The loaded JSON document is invalid and could not be repaired automatically.\"\n        actions={!readOnly\n          ? [\n              {\n                icon: faCode,\n                text: 'Repair manually',\n                title: 'Open the document in \"code\" mode and repair it manually',\n                onClick: handleRequestRepair\n              }\n            ]\n          : []}\n      />\n      <JSONPreview {text} {json} {indentation} {parser} />\n    {:else}\n      <TableModeWelcome\n        {text}\n        {json}\n        {readOnly}\n        {parser}\n        {openJSONEditorModal}\n        {onChangeMode}\n        onClick={() => {\n          // FIXME: this is a workaround for the editor not putting the focus on refHiddenInput\n          //  when clicking in the welcome screen so you cannot paste a document from clipboard.\n          focus()\n        }}\n      />\n    {/if}\n  {:else}\n    <div class=\"jse-contents jse-contents-loading\">\n      <div class=\"jse-loading-space\" />\n      <div class=\"jse-loading\">loading...</div>\n    </div>\n  {/if}\n</div>\n\n{#if copyPasteModalOpen}\n  <CopyPasteModal onClose={() => (copyPasteModalOpen = false)} />\n{/if}\n\n{#if jsonRepairModalProps}\n  <JSONRepairModal\n    {...jsonRepairModalProps}\n    onClose={() => {\n      jsonRepairModalProps?.onClose()\n      jsonRepairModalProps = undefined\n    }}\n  />\n{/if}\n\n<style src=\"./TableMode.scss\"></style>\n","import type { ContextMenuItem, DocumentState, JSONSelection } from 'svelte-jsoneditor'\nimport {\n  faCheckSquare,\n  faClone,\n  faCopy,\n  faCut,\n  faPaste,\n  faPen,\n  faPlus,\n  faSquare,\n  faTrashCan\n} from '@fortawesome/free-solid-svg-icons'\nimport { isKeySelection, isMultiSelection, isValueSelection } from '$lib/logic/selection'\nimport { getIn } from 'immutable-json-patch'\nimport { getFocusPath, singleItemSelected } from '$lib/logic/selection'\nimport { isObjectOrArray } from '$lib/utils/typeUtils'\nimport { getEnforceString } from '$lib/logic/documentState'\n\nexport default function ({\n  json,\n  documentState,\n  selection,\n  readOnly,\n  onEditValue,\n  onEditRow,\n  onToggleEnforceString,\n  onCut,\n  onCopy,\n  onPaste,\n  onRemove,\n  onDuplicateRow,\n  onInsertBeforeRow,\n  onInsertAfterRow,\n  onRemoveRow\n}: {\n  json: unknown | undefined\n  documentState: DocumentState | undefined\n  selection: JSONSelection | undefined\n  readOnly: boolean\n  onEditValue: () => void\n  onEditRow: () => void\n  onToggleEnforceString: () => void\n  onCut: (indent: boolean) => void\n  onCopy: (indent: boolean) => void\n  onPaste: () => void\n  onRemove: () => void\n  onDuplicateRow: () => void\n  onInsertBeforeRow: () => void\n  onInsertAfterRow: () => void\n  onRemoveRow: () => void\n}): ContextMenuItem[] {\n  const hasJson = json !== undefined\n  const hasSelection = !!selection\n  const focusValue =\n    json !== undefined && selection ? getIn(json, getFocusPath(selection)) : undefined\n\n  const hasSelectionContents =\n    hasJson &&\n    (isMultiSelection(selection) || isKeySelection(selection) || isValueSelection(selection))\n\n  const canEditValue =\n    !readOnly && hasJson && selection !== undefined && singleItemSelected(selection)\n  const canEnforceString = canEditValue && !isObjectOrArray(focusValue)\n\n  const canCut = !readOnly && hasSelectionContents\n\n  const enforceString =\n    selection !== undefined ? getEnforceString(json, documentState, getFocusPath(selection)) : false\n\n  return [\n    { type: 'separator' },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'column',\n          items: [\n            { type: 'label', text: 'Table cell:' },\n            {\n              type: 'dropdown-button',\n              main: {\n                type: 'button',\n                onClick: () => onEditValue(),\n                icon: faPen,\n                text: 'Edit',\n                title: 'Edit the value (Double-click on the value)',\n                disabled: !canEditValue\n              },\n              width: '11em',\n              items: [\n                {\n                  type: 'button',\n                  icon: faPen,\n                  text: 'Edit',\n                  title: 'Edit the value (Double-click on the value)',\n                  onClick: () => onEditValue(),\n                  disabled: !canEditValue\n                },\n                {\n                  type: 'button',\n                  icon: enforceString ? faCheckSquare : faSquare,\n                  text: 'Enforce string',\n                  title: 'Enforce keeping the value as string when it contains a numeric value',\n                  onClick: () => onToggleEnforceString(),\n                  disabled: !canEnforceString\n                }\n              ]\n            },\n            {\n              type: 'dropdown-button',\n              main: {\n                type: 'button',\n                onClick: () => onCut(true),\n                icon: faCut,\n                text: 'Cut',\n                title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n                disabled: !canCut\n              },\n              width: '10em',\n              items: [\n                {\n                  type: 'button',\n                  icon: faCut,\n                  text: 'Cut formatted',\n                  title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n                  onClick: () => onCut(true),\n                  disabled: readOnly || !hasSelectionContents\n                },\n                {\n                  type: 'button',\n                  icon: faCut,\n                  text: 'Cut compacted',\n                  title: 'Cut selected contents, without indentation (Ctrl+Shift+X)',\n                  onClick: () => onCut(false),\n                  disabled: readOnly || !hasSelectionContents\n                }\n              ]\n            },\n            {\n              type: 'dropdown-button',\n              main: {\n                type: 'button',\n                onClick: () => onCopy(true),\n                icon: faCopy,\n                text: 'Copy',\n                title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n                disabled: !hasSelectionContents\n              },\n              width: '12em',\n              items: [\n                {\n                  type: 'button',\n                  icon: faCopy,\n                  text: 'Copy formatted',\n                  title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n                  onClick: () => onCopy(false),\n                  disabled: !hasSelectionContents\n                },\n                {\n                  type: 'button',\n                  icon: faCopy,\n                  text: 'Copy compacted',\n                  title: 'Copy selected contents, without indentation (Ctrl+Shift+C)',\n                  onClick: () => onCopy(false),\n                  disabled: !hasSelectionContents\n                }\n              ]\n            },\n            {\n              type: 'button',\n              onClick: () => onPaste(),\n              icon: faPaste,\n              text: 'Paste',\n              title: 'Paste clipboard contents (Ctrl+V)',\n              disabled: readOnly || !hasSelection\n            },\n            {\n              type: 'button',\n              onClick: () => onRemove(),\n              icon: faTrashCan,\n              text: 'Remove',\n              title: 'Remove selected contents (Delete)',\n              disabled: readOnly || !hasSelectionContents\n            }\n          ]\n        },\n        {\n          type: 'column',\n          items: [\n            { type: 'label', text: 'Table row:' },\n            {\n              type: 'button',\n              onClick: () => onEditRow(),\n              icon: faPen,\n              text: 'Edit row',\n              title: 'Edit the current row',\n              disabled: readOnly || !hasSelection || !hasJson\n            },\n            {\n              type: 'button',\n              onClick: () => onDuplicateRow(),\n              icon: faClone,\n              text: 'Duplicate row',\n              title: 'Duplicate the current row',\n              disabled: readOnly || !hasSelection || !hasJson\n            },\n            {\n              type: 'button',\n              onClick: () => onInsertBeforeRow(),\n              icon: faPlus,\n              text: 'Insert before',\n              title: 'Insert a row before the current row',\n              disabled: readOnly || !hasSelection || !hasJson\n            },\n            {\n              type: 'button',\n              onClick: () => onInsertAfterRow(),\n              icon: faPlus,\n              text: 'Insert after',\n              title: 'Insert a row after the current row',\n              disabled: readOnly || !hasSelection || !hasJson\n            },\n            {\n              type: 'button',\n              onClick: () => onRemoveRow(),\n              icon: faTrashCan,\n              text: 'Remove row',\n              title: 'Remove current row',\n              disabled: readOnly || !hasSelection || !hasJson\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n","<script lang=\"ts\">\n  import type {\n    Content,\n    ContentErrors,\n    ContextMenuItem,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONPathParser,\n    MenuItem,\n    MenuSeparator,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnClassName,\n    OnError,\n    OnExpand,\n    OnFocus,\n    OnJSONEditorModal,\n    OnRenderContextMenu,\n    OnRenderContextMenuInternal,\n    OnRenderMenu,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    TransformModalOptions,\n    Validator\n  } from '$lib/types'\n  import { Mode } from '$lib/types.js'\n  import TextMode from './textmode/TextMode.svelte'\n  import TableMode from './tablemode/TableMode.svelte'\n  import TreeMode from './treemode/TreeMode.svelte'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { isMenuSpace } from '$lib/typeguards.js'\n  import { cloneDeep } from 'lodash-es'\n\n  export let content: Content\n  export let selection: JSONEditorSelection | undefined\n\n  export let readOnly: boolean\n  export let indentation: number | string\n  export let tabSize: number\n  export let mode: Mode\n  export let mainMenuBar: boolean\n  export let navigationBar: boolean\n  export let statusBar: boolean\n  export let askToFormat: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let flattenColumns: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validator: Validator | undefined\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n  export let insideModal: boolean\n\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onRenderValue: OnRenderValue\n  export let onClassName: OnClassName\n  export let onRenderMenu: OnRenderMenu\n  export let onRenderContextMenu: OnRenderContextMenu\n  export let onError: OnError\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n  export let onJSONEditorModal: OnJSONEditorModal\n\n  let refTreeMode: TreeMode | undefined\n  let refTableMode: TableMode | undefined\n  let refTextMode: TextMode | undefined\n\n  let modeMenuItems: MenuItem[]\n  $: modeMenuItems = [\n    {\n      type: 'button',\n      text: 'text',\n      title: `Switch to text mode (current mode: ${mode})`,\n      className: 'jse-group-button jse-first' + (mode === Mode.text ? ' jse-selected' : ''),\n      onClick: () => onChangeMode(Mode.text)\n    },\n    {\n      type: 'button',\n      text: 'tree',\n      title: `Switch to tree mode (current mode: ${mode})`,\n      className: 'jse-group-button ' + (mode === Mode.tree ? ' jse-selected' : ''),\n      onClick: () => onChangeMode(Mode.tree)\n    },\n    {\n      type: 'button',\n      text: 'table',\n      title: `Switch to table mode (current mode: ${mode})`,\n      className: 'jse-group-button jse-last' + (mode === Mode.table ? ' jse-selected' : ''),\n      onClick: () => onChangeMode(Mode.table)\n    }\n  ]\n\n  const separatorMenuItem: MenuSeparator = {\n    type: 'separator'\n  }\n\n  let handleRenderMenu: OnRenderMenuInternal\n  $: handleRenderMenu = (items: MenuItem[]) => {\n    const updatedItems = isMenuSpace(items[0])\n      ? modeMenuItems.concat(items) // menu is empty, readOnly mode\n      : modeMenuItems.concat(separatorMenuItem, items)\n\n    const updatedItemsOriginal = cloneDeep(updatedItems) // the user may change updatedItems in the callback\n\n    return (\n      onRenderMenu(updatedItems, { mode, modal: insideModal, readOnly }) || updatedItemsOriginal\n    )\n  }\n\n  let handleRenderContextMenu: OnRenderContextMenuInternal\n  $: handleRenderContextMenu = (items: ContextMenuItem[]) => {\n    const itemsOriginal = cloneDeep(items) // the user may change items in the callback\n\n    return (\n      onRenderContextMenu(items, { mode, modal: insideModal, readOnly, selection }) ??\n      (readOnly ? false : itemsOriginal)\n    )\n  }\n\n  export function patch(operations: JSONPatchDocument): JSONPatchResult {\n    if (refTreeMode) {\n      // Note that tree mode has an optional afterPatch callback.\n      // right now we don's support this in the public API.\n      return refTreeMode.patch(operations)\n    }\n\n    if (refTableMode) {\n      // Note that tree mode has an optional afterPatch callback.\n      // right now we don's support this in the public API.\n      return refTableMode.patch(operations)\n    }\n\n    if (refTextMode) {\n      return refTextMode.patch(operations)\n    }\n\n    throw new Error(`Method patch is not available in mode \"${mode}\"`)\n  }\n\n  export function expand(path: JSONPath, callback?: OnExpand): void {\n    if (refTreeMode) {\n      return refTreeMode.expand(path, callback)\n    } else {\n      throw new Error(`Method expand is not available in mode \"${mode}\"`)\n    }\n  }\n\n  export function collapse(path: JSONPath, recursive: boolean): void {\n    if (refTreeMode) {\n      return refTreeMode.collapse(path, recursive)\n    } else {\n      throw new Error(`Method collapse is not available in mode \"${mode}\"`)\n    }\n  }\n\n  /**\n   * Open the transform modal\n   */\n  export function transform(options: TransformModalOptions): void {\n    if (refTextMode) {\n      refTextMode.openTransformModal(options)\n    } else if (refTreeMode) {\n      refTreeMode.openTransformModal(options)\n    } else if (refTableMode) {\n      refTableMode.openTransformModal(options)\n    } else {\n      throw new Error(`Method transform is not available in mode \"${mode}\"`)\n    }\n  }\n\n  /**\n   * Validate the contents of the editor using the configured validator.\n   * Returns a parse error or a list with validation warnings\n   */\n  export function validate(): ContentErrors | undefined {\n    if (refTextMode) {\n      return refTextMode.validate()\n    } else if (refTreeMode) {\n      return refTreeMode.validate()\n    } else if (refTableMode) {\n      return refTableMode.validate()\n    } else {\n      throw new Error(`Method validate is not available in mode \"${mode}\"`)\n    }\n  }\n\n  /**\n   * In tree mode, invalid JSON is automatically repaired when loaded. When the\n   * repair was successful, the repaired contents are rendered but not yet\n   * applied to the document itself until the user clicks \"Ok\" or starts editing\n   * the data. Instead of accepting the repair, the user can also click\n   * \"Repair manually instead\". Invoking `.acceptAutoRepair()` will\n   * programmatically accept the repair. This will trigger an update,\n   * and the method itself also returns the updated contents. In case of text\n   * mode or when the editor is not in an \"accept auto repair\" status, nothing\n   * will happen, and the contents will be returned as is.\n   */\n  export function acceptAutoRepair(): Content {\n    if (refTreeMode) {\n      return refTreeMode.acceptAutoRepair()\n    } else {\n      return content\n    }\n  }\n\n  export function scrollTo(path: JSONPath): Promise<void> {\n    if (refTreeMode) {\n      return refTreeMode.scrollTo(path)\n    } else if (refTableMode) {\n      return refTableMode.scrollTo(path)\n    } else {\n      // TODO: implement scrollTo for text mode\n      throw new Error(`Method scrollTo is not available in mode \"${mode}\"`)\n    }\n  }\n\n  export function findElement(path: JSONPath): Element | undefined {\n    if (refTreeMode) {\n      return refTreeMode.findElement(path)\n    } else if (refTableMode) {\n      return refTableMode.findElement(path)\n    } else {\n      throw new Error(`Method findElement is not available in mode \"${mode}\"`)\n    }\n  }\n\n  export function focus() {\n    if (refTextMode) {\n      refTextMode.focus()\n    } else if (refTreeMode) {\n      refTreeMode.focus()\n    } else if (refTableMode) {\n      refTableMode.focus()\n    }\n  }\n\n  export async function refresh(): Promise<void> {\n    if (refTextMode) {\n      await refTextMode.refresh()\n    } else {\n      // nothing to do in tree or table mode (also: don't throw an exception or so,\n      // that annoying having to reckon with that when using .refresh()).\n    }\n  }\n</script>\n\n{#if mode === Mode.text || String(mode) === 'code'}\n  <TextMode\n    bind:this={refTextMode}\n    externalContent={content}\n    externalSelection={selection}\n    {readOnly}\n    {indentation}\n    {tabSize}\n    {mainMenuBar}\n    {statusBar}\n    {askToFormat}\n    {escapeUnicodeCharacters}\n    {parser}\n    {validator}\n    {validationParser}\n    {onChange}\n    {onSelect}\n    {onChangeMode}\n    {onError}\n    {onFocus}\n    {onBlur}\n    onRenderMenu={handleRenderMenu}\n    {onSortModal}\n    {onTransformModal}\n  />\n{:else if mode === Mode.table}\n  <TableMode\n    bind:this={refTableMode}\n    externalContent={content}\n    externalSelection={selection}\n    {readOnly}\n    {mainMenuBar}\n    {escapeControlCharacters}\n    {escapeUnicodeCharacters}\n    {flattenColumns}\n    {parser}\n    {parseMemoizeOne}\n    {validator}\n    {validationParser}\n    {indentation}\n    {onChange}\n    {onChangeMode}\n    {onSelect}\n    {onRenderValue}\n    {onFocus}\n    {onBlur}\n    onRenderMenu={handleRenderMenu}\n    onRenderContextMenu={handleRenderContextMenu}\n    {onSortModal}\n    {onTransformModal}\n    {onJSONEditorModal}\n  />\n{:else}\n  <!-- mode === Mode.tree -->\n  <TreeMode\n    bind:this={refTreeMode}\n    externalContent={content}\n    externalSelection={selection}\n    {readOnly}\n    {indentation}\n    {mainMenuBar}\n    {navigationBar}\n    {escapeControlCharacters}\n    {escapeUnicodeCharacters}\n    {parser}\n    {parseMemoizeOne}\n    {validator}\n    {validationParser}\n    {pathParser}\n    {onError}\n    {onChange}\n    {onChangeMode}\n    {onSelect}\n    {onRenderValue}\n    {onClassName}\n    {onFocus}\n    {onBlur}\n    onRenderMenu={handleRenderMenu}\n    onRenderContextMenu={handleRenderContextMenu}\n    {onSortModal}\n    {onTransformModal}\n    {onJSONEditorModal}\n  />\n{/if}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { onMount, tick } from 'svelte'\n  import Header from './Header.svelte'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer, immutableJSONPatch, isJSONArray } from 'immutable-json-patch'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type {\n    Content,\n    JSONEditorModalCallback,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPathParser,\n    OnClassName,\n    OnPatch,\n    OnRenderContextMenu,\n    OnRenderMenu,\n    OnRenderValue,\n    OnSortModal,\n    OnTransformModal,\n    Validator\n  } from '$lib/types'\n  import { Mode } from '$lib/types.js'\n  import JSONEditorRoot from '../modes/JSONEditorRoot.svelte'\n  import { noop } from '$lib/utils/noop.js'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import { initial, isEmpty, last } from 'lodash-es'\n  import { isJSONContent, toJSONContent } from '$lib/utils/jsonUtils.js'\n  import Icon from 'svelte-awesome'\n  import { faCaretLeft } from '@fortawesome/free-solid-svg-icons'\n  import memoizeOne from 'memoize-one'\n  import { getFocusPath, isJSONSelection } from '$lib/logic/selection.js'\n  import Modal from './Modal.svelte'\n  import AbsolutePopup from './popup/AbsolutePopup.svelte'\n\n  const debug = createDebug('jsoneditor:JSONEditorModal')\n\n  export let content: Content // the nested document\n  export let path: JSONPath\n  export let onPatch: OnPatch\n\n  export let readOnly: boolean\n  export let indentation: number | string\n  export let tabSize: number\n  export let mainMenuBar: boolean\n  export let navigationBar: boolean\n  export let statusBar: boolean\n  export let askToFormat: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let flattenColumns: boolean\n  export let parser: JSONParser\n  export let validator: Validator | undefined\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n\n  export let onRenderValue: OnRenderValue\n  export let onClassName: OnClassName\n  export let onRenderMenu: OnRenderMenu\n  export let onRenderContextMenu: OnRenderContextMenu\n\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n\n  export let onClose: () => void\n\n  interface ModalState {\n    mode: Mode\n    content: Content\n    selection: JSONEditorSelection | undefined\n    relativePath: JSONPath\n  }\n\n  let refEditor: JSONEditorRoot\n  let fullscreen: boolean\n\n  const rootState: ModalState = {\n    mode: determineMode(content),\n    content,\n    selection: undefined,\n    relativePath: path\n  }\n  let stack: ModalState[] = [rootState]\n\n  $: currentState = last(stack) || rootState\n  $: absolutePath = stack.flatMap((state) => state.relativePath)\n  $: pathDescription = !isEmpty(absolutePath) ? stringifyJSONPath(absolutePath) : '(document root)'\n\n  // not relevant in this Modal setting, but well\n  $: parseMemoizeOne = memoizeOne(parser.parse)\n\n  let error: string | undefined = undefined\n\n  onMount(() => {\n    refEditor?.focus()\n  })\n\n  function determineMode(content: Content): Mode {\n    return isJSONContent(content) && isJSONArray(content.json) ? Mode.table : Mode.tree\n  }\n\n  function scrollToSelection() {\n    const selection: JSONEditorSelection | undefined = last(stack)?.selection\n    if (isJSONSelection(selection)) {\n      refEditor.scrollTo(getFocusPath(selection))\n    }\n  }\n\n  function handleApply() {\n    debug('handleApply')\n\n    if (readOnly) {\n      return\n    }\n\n    try {\n      error = undefined\n\n      const path = currentState.relativePath\n      const content = currentState.content\n      const operations: JSONPatchDocument = [\n        {\n          op: 'replace',\n          path: compileJSONPointer(path),\n          value: toJSONContent(content, parser).json // this can throw an error\n        }\n      ]\n\n      if (stack.length > 1) {\n        const parentContent = stack[stack.length - 2].content\n        const parentJson = toJSONContent(parentContent, parser).json\n        const updatedParentContent = {\n          json: immutableJSONPatch(parentJson, operations)\n        }\n\n        // after successfully updated, remove from the stack and apply the change to the parent\n        const parentState = stack[stack.length - 2] || rootState\n        const updatedParentState: ModalState = { ...parentState, content: updatedParentContent }\n        stack = [...stack.slice(0, stack.length - 2), updatedParentState]\n        tick().then(scrollToSelection)\n      } else {\n        onPatch(operations)\n\n        onClose()\n      }\n    } catch (err) {\n      error = String(err)\n    }\n  }\n\n  function handleClose() {\n    debug('handleClose')\n\n    if (fullscreen) {\n      // exit fullscreen\n      fullscreen = false\n    } else if (stack.length > 1) {\n      // remove the last item from the stack\n      stack = initial(stack)\n      tick().then(() => {\n        refEditor?.focus()\n        scrollToSelection()\n      })\n\n      // clear any error from the just closed state\n      error = undefined\n    } else {\n      // this is the first modal, the root state, close the modal\n      onClose()\n    }\n  }\n\n  function handleChange(updatedContent: Content) {\n    debug('handleChange', updatedContent)\n    updateState((state) => ({ ...state, content: updatedContent }))\n  }\n\n  function handleChangeSelection(newSelection: JSONEditorSelection | undefined) {\n    debug('handleChangeSelection', newSelection)\n    updateState((state) => ({ ...state, selection: newSelection }))\n  }\n\n  function handleChangeMode(newMode: Mode) {\n    debug('handleChangeMode', newMode)\n    updateState((state) => ({ ...state, mode: newMode }))\n  }\n\n  function updateState(callback: (state: ModalState) => ModalState) {\n    const state = last(stack) as ModalState\n    const updatedState = callback(state)\n    stack = [...initial(stack), updatedState]\n  }\n\n  function handleError(newError: Error) {\n    error = newError.toString()\n    console.error(newError)\n  }\n\n  function handleJSONEditorModal({ content, path }: JSONEditorModalCallback) {\n    debug('handleJSONEditorModal', { content, path })\n\n    const nestedModalState = {\n      mode: determineMode(content),\n      content,\n      selection: undefined,\n      relativePath: path\n    }\n    stack = [...stack, nestedModalState]\n\n    tick().then(() => refEditor?.focus())\n  }\n\n  function focus(element: HTMLElement) {\n    element.focus()\n  }\n</script>\n\n<Modal onClose={handleClose} className=\"jse-jsoneditor-modal\" {fullscreen}>\n  <div class=\"jse-modal-wrapper\">\n    <AbsolutePopup>\n      <Header\n        title=\"Edit nested content {stack.length > 1 ? ` (${stack.length})` : ''}\"\n        fullScreenButton={true}\n        bind:fullscreen\n        onClose={handleClose}\n      />\n\n      <div class=\"jse-modal-contents\">\n        <div class=\"jse-label\">\n          <div class=\"jse-label-inner\">Path</div>\n        </div>\n        <input\n          class=\"jse-path\"\n          type=\"text\"\n          readonly\n          title=\"Selected path\"\n          value={pathDescription}\n        />\n\n        <div class=\"jse-label\">\n          <div class=\"jse-label-inner\">Contents</div>\n        </div>\n\n        <div class=\"jse-modal-inline-editor\">\n          <JSONEditorRoot\n            bind:this={refEditor}\n            mode={currentState.mode}\n            content={currentState.content}\n            selection={currentState.selection}\n            {readOnly}\n            {indentation}\n            {tabSize}\n            {statusBar}\n            {askToFormat}\n            {mainMenuBar}\n            {navigationBar}\n            {escapeControlCharacters}\n            {escapeUnicodeCharacters}\n            {flattenColumns}\n            {parser}\n            {parseMemoizeOne}\n            {validator}\n            {validationParser}\n            {pathParser}\n            insideModal={true}\n            onError={handleError}\n            onChange={handleChange}\n            onChangeMode={handleChangeMode}\n            onSelect={handleChangeSelection}\n            {onRenderValue}\n            {onClassName}\n            onFocus={noop}\n            onBlur={noop}\n            {onRenderMenu}\n            {onRenderContextMenu}\n            {onSortModal}\n            {onTransformModal}\n            onJSONEditorModal={handleJSONEditorModal}\n          />\n        </div>\n\n        <div class=\"jse-actions\">\n          {#if error}\n            <div class=\"jse-error\">\n              {error}\n            </div>\n          {/if}\n\n          {#if stack.length > 1}\n            <button type=\"button\" class=\"jse-secondary\" on:click={handleClose}>\n              <Icon data={faCaretLeft} /> Back\n            </button>\n          {/if}\n          {#if !readOnly}\n            <button type=\"button\" class=\"jse-primary\" on:click={handleApply} use:focus>\n              Apply\n            </button>\n          {:else}\n            <button type=\"button\" class=\"jse-primary\" on:click={handleClose}> Close </button>\n          {/if}\n        </div>\n      </div>\n    </AbsolutePopup>\n  </div>\n</Modal>\n\n<style src=\"./JSONEditorModal.scss\"></style>\n","import type { NumberOption, PathOption } from '$lib/types.js'\n\nexport interface SortModalState {\n  selectedProperty: PathOption\n  selectedDirection: NumberOption\n}\n\nexport const sortModalStates: Record<string, SortModalState> = {}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { isEmpty } from 'lodash-es'\n  import Select from 'svelte-select'\n  import Header from './Header.svelte'\n  import { getNestedPaths } from '$lib/utils/arrayUtils.js'\n  import { pathToOption, stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import { sortJson } from '$lib/logic/sort.js'\n  import { sortModalStates } from './sortModalStates'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer, getIn } from 'immutable-json-patch'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type { OnSort } from '$lib/types.js'\n  import Modal from './Modal.svelte'\n\n  const debug = createDebug('jsoneditor:SortModal')\n\n  export let id: string\n  export let json: unknown // the whole document\n  export let rootPath: JSONPath\n  export let onSort: OnSort\n  export let onClose: () => void\n\n  $: selectedJson = getIn(json, rootPath)\n  $: jsonIsArray = Array.isArray(selectedJson)\n  $: paths = jsonIsArray ? getNestedPaths(selectedJson) : undefined\n  $: properties = paths ? paths.map(pathToOption) : undefined\n\n  const asc = {\n    value: 1,\n    label: 'ascending'\n  }\n  const desc = {\n    value: -1,\n    label: 'descending'\n  }\n  const directions = [asc, desc]\n\n  const stateId = `${id}:${compileJSONPointer(rootPath)}`\n  let selectedProperty = sortModalStates[stateId]?.selectedProperty\n  let selectedDirection = sortModalStates[stateId]?.selectedDirection || asc\n  let sortError: string | undefined = undefined\n\n  $: {\n    // remember the selected values for the next time we open the SortModal\n    // just in memory, not persisted\n    sortModalStates[stateId] = {\n      selectedProperty,\n      selectedDirection\n    }\n\n    debug('store state in memory', stateId, sortModalStates[stateId])\n  }\n\n  function handleSort() {\n    try {\n      sortError = undefined\n\n      const itemPath: JSONPath = selectedProperty?.value || properties?.[0]?.value || []\n      const direction = selectedDirection?.value\n      const operations = sortJson(json, rootPath, itemPath, direction)\n      if (onSort !== undefined && rootPath !== undefined) {\n        onSort({ operations, rootPath, itemPath, direction })\n      }\n\n      onClose()\n    } catch (err) {\n      sortError = String(err)\n    }\n  }\n\n  function focus(element: HTMLElement) {\n    element.focus()\n  }\n</script>\n\n<Modal {onClose} className=\"jse-sort-modal\">\n  <Header title={jsonIsArray ? 'Sort array items' : 'Sort object keys'} {onClose} />\n\n  <div class=\"jse-modal-contents\">\n    <table>\n      <colgroup>\n        <col width=\"25%\" />\n        <col width=\"75%\" />\n      </colgroup>\n      <tbody>\n        <tr>\n          <th>Path</th>\n          <td>\n            <input\n              class=\"jse-path\"\n              type=\"text\"\n              readonly\n              title=\"Selected path\"\n              value={rootPath && !isEmpty(rootPath)\n                ? stringifyJSONPath(rootPath)\n                : '(document root)'}\n            />\n          </td>\n        </tr>\n        {#if jsonIsArray && ((properties && properties?.length > 1) || selectedProperty === undefined)}\n          <tr>\n            <th>Property</th>\n            <td>\n              <Select showChevron items={properties} bind:value={selectedProperty} />\n            </td>\n          </tr>\n        {/if}\n        <tr>\n          <th>Direction</th>\n          <td>\n            <Select\n              showChevron\n              clearable={false}\n              items={directions}\n              bind:value={selectedDirection}\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"jse-space\">\n      {#if sortError}\n        <div class=\"jse-error\">\n          {sortError}\n        </div>\n      {/if}\n    </div>\n\n    <div class=\"jse-actions\">\n      <button\n        type=\"button\"\n        class=\"jse-primary\"\n        on:click={handleSort}\n        use:focus\n        disabled={jsonIsArray && properties && properties?.length > 1 ? !selectedProperty : false}\n      >\n        Sort\n      </button>\n    </div>\n  </div>\n</Modal>\n\n<style src=\"./SortModal.scss\"></style>\n","<svelte:options accessors={false} immutable={true} />\n\n<script lang=\"ts\">\n  import { createDebug } from '../utils/debug.js'\n  import { uniqueId } from '../utils/uniqueId.js'\n  import {\n    isEqualParser,\n    isJSONContent,\n    isTextContent,\n    validateContentType\n  } from '../utils/jsonUtils.js'\n  import AbsolutePopup from './modals/popup/AbsolutePopup.svelte'\n  import { jsonQueryLanguage } from '$lib/plugins/query/jsonQueryLanguage.js'\n  import { renderValue } from '$lib/plugins/value/renderValue.js'\n  import { tick } from 'svelte'\n  import TransformModal from './modals/TransformModal.svelte'\n  import type {\n    Content,\n    ContentErrors,\n    ContextMenuItem,\n    JSONEditorModalCallback,\n    JSONEditorModalProps,\n    JSONEditorPropsOptional,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONPathParser,\n    MenuItem,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnChangeQueryLanguage,\n    OnChangeStatus,\n    OnClassName,\n    OnError,\n    OnExpand,\n    OnFocus,\n    OnRenderMenu,\n    OnRenderValue,\n    OnSelect,\n    QueryLanguage,\n    SortModalCallback,\n    TransformModalCallback,\n    TransformModalOptions,\n    TransformModalProps,\n    Validator\n  } from '$lib/types'\n  import type { OnRenderContextMenu } from '$lib/types.js'\n  import { Mode } from '$lib/types.js'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { noop } from '../utils/noop.js'\n  import { parseJSONPath, stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import JSONEditorRoot from './modes/JSONEditorRoot.svelte'\n  import JSONEditorModal from './modals/JSONEditorModal.svelte'\n  import memoizeOne from 'memoize-one'\n  import { cloneDeep } from 'lodash-es'\n  import SortModal from './modals/SortModal.svelte'\n\n  // TODO: document how to enable debugging in the readme: localStorage.debug=\"jsoneditor:*\", then reload\n  const debug = createDebug('jsoneditor:JSONEditor')\n\n  export let content: Content = { text: '' }\n  export let selection: JSONEditorSelection | undefined = undefined\n\n  export let readOnly = false\n  export let indentation: number | string = 2\n  export let tabSize = 4\n  export let mode: Mode = Mode.tree\n  export let mainMenuBar = true\n  export let navigationBar = true\n  export let statusBar = true\n  export let askToFormat = true\n  export let escapeControlCharacters = false\n  export let escapeUnicodeCharacters = false\n  export let flattenColumns = true\n  export let parser: JSONParser = JSON\n  export let validator: Validator | undefined = undefined\n  export let validationParser: JSONParser = JSON\n  export let pathParser: JSONPathParser = {\n    parse: parseJSONPath,\n    stringify: stringifyJSONPath\n  }\n\n  export let queryLanguages: QueryLanguage[] = [jsonQueryLanguage]\n  export let queryLanguageId: string = queryLanguages[0].id\n\n  export let onChangeQueryLanguage: OnChangeQueryLanguage = noop\n  export let onChange: OnChange | undefined = undefined\n  export let onSelect: OnSelect | undefined = undefined\n  export let onRenderValue: OnRenderValue = renderValue\n  export let onClassName: OnClassName = () => undefined\n  export let onRenderMenu: OnRenderMenu = noop\n  export let onRenderContextMenu: OnRenderContextMenu = noop\n  export let onChangeMode: OnChangeMode = noop\n  export let onError: OnError = (err) => {\n    console.error(err)\n    alert(err.toString()) // TODO: create a nice alert modal\n  }\n  export let onFocus: OnFocus = noop\n  export let onBlur: OnBlur = noop\n\n  let instanceId = uniqueId()\n  let hasFocus = false\n  let refJSONEditorRoot: JSONEditorRoot\n  let jsonEditorModalProps: JSONEditorModalProps | undefined = undefined\n  let sortModalProps: SortModalCallback | undefined\n  let transformModalProps: TransformModalProps | undefined\n\n  $: {\n    const contentError = validateContentType(content)\n    if (contentError) {\n      console.error('Error: ' + contentError)\n    }\n  }\n\n  // backward compatibility warning since v1.0.0\n  $: if (selection === null) {\n    console.warn('selection is invalid: it is null but should be undefined')\n  }\n\n  // We memoize the last parse result for the case when the content is text and very large.\n  // In that case parsing takes a few seconds. When the user switches between tree and table mode,\n  // without having made a change, we do not want to parse the text again.\n  $: parseMemoizeOne = memoizeOne(parser.parse)\n\n  // rerender the full editor when the parser changes. This is needed because\n  // numeric state is hold at many places in the editor.\n  let previousParser = parser\n  $: {\n    if (!isEqualParser(parser, previousParser)) {\n      debug('parser changed, recreate editor')\n\n      if (isJSONContent(content)) {\n        const text = previousParser.stringify(content.json)\n        content = {\n          json: text !== undefined ? parser.parse(text) : undefined\n        }\n      }\n\n      previousParser = parser\n\n      // new editor id -> will re-create the editor\n      instanceId = uniqueId()\n    }\n  }\n\n  export function get(): Content {\n    return content\n  }\n\n  export async function set(newContent: Content): Promise<void> {\n    debug('set')\n\n    const contentError = validateContentType(newContent)\n    if (contentError) {\n      throw new Error(contentError)\n    }\n\n    // new editor id -> will re-create the editor\n    instanceId = uniqueId()\n\n    // update content *after* re-render, so that the new editor will trigger an onChange event\n    content = newContent\n  }\n\n  export async function update(updatedContent: Content): Promise<void> {\n    debug('update')\n\n    const contentError = validateContentType(updatedContent)\n    if (contentError) {\n      throw new Error(contentError)\n    }\n\n    content = updatedContent\n\n    await tick() // await rerender\n  }\n\n  export async function patch(operations: JSONPatchDocument): Promise<JSONPatchResult> {\n    if (isTextContent(content)) {\n      try {\n        content = {\n          json: parser.parse(content.text),\n          text: undefined\n        }\n      } catch (err) {\n        throw new Error('Cannot apply patch: current document contains invalid JSON')\n      }\n    }\n\n    // Note that patch has an optional afterPatch callback.\n    // right now we don's support this in the public API.\n    const result = refJSONEditorRoot.patch(operations)\n\n    await tick() // await rerender\n\n    return result\n  }\n\n  export async function select(newSelection: JSONEditorSelection | undefined) {\n    selection = newSelection\n\n    await tick() // await rerender\n  }\n\n  export async function expand(path: JSONPath, callback?: OnExpand): Promise<void> {\n    refJSONEditorRoot.expand(path, callback)\n\n    await tick() // await rerender\n  }\n\n  export async function collapse(path: JSONPath, recursive = false): Promise<void> {\n    refJSONEditorRoot.collapse(path, recursive)\n\n    await tick() // await rerender\n  }\n\n  /**\n   * Open the transform modal\n   */\n  export function transform(options: TransformModalOptions): void {\n    refJSONEditorRoot.transform(options)\n  }\n\n  /**\n   * Validate the contents of the editor using the configured validator.\n   * Returns a parse error or a list with validation warnings\n   */\n  export function validate(): ContentErrors | undefined {\n    return refJSONEditorRoot.validate()\n  }\n\n  /**\n   * In tree mode, invalid JSON is automatically repaired when loaded. When the\n   * repair was successful, the repaired contents are rendered but not yet\n   * applied to the document itself until the user clicks \"Ok\" or starts editing\n   * the data. Instead of accepting the repair, the user can also click\n   * \"Repair manually instead\". Invoking `.acceptAutoRepair()` will\n   * programmatically accept the repair. This will trigger an update,\n   * and the method itself also returns the updated contents. In case of text\n   * mode or when the editor is not in an \"accept auto repair\" status, nothing\n   * will happen, and the contents will be returned as is.\n   */\n  export async function acceptAutoRepair(): Promise<Content> {\n    const content = refJSONEditorRoot.acceptAutoRepair()\n\n    await tick() // await rerender\n\n    return content\n  }\n\n  export async function scrollTo(path: JSONPath): Promise<void> {\n    await refJSONEditorRoot.scrollTo(path)\n  }\n\n  export function findElement(path: JSONPath): Element | undefined {\n    return refJSONEditorRoot.findElement(path)\n  }\n\n  export async function focus(): Promise<void> {\n    refJSONEditorRoot.focus()\n\n    await tick() // await rerender\n  }\n\n  export async function refresh(): Promise<void> {\n    await refJSONEditorRoot.refresh()\n  }\n\n  export async function updateProps(props: JSONEditorPropsOptional): Promise<void> {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.$set(props)\n\n    await tick() // await rerender\n  }\n\n  export async function destroy() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.$destroy()\n\n    await tick() // await destroying\n  }\n\n  function handleChange(updatedContent: Content, previousContent: Content, status: OnChangeStatus) {\n    content = updatedContent\n\n    if (onChange) {\n      onChange(updatedContent, previousContent, status)\n    }\n  }\n\n  function handleSelect(updatedSelection: JSONEditorSelection | undefined) {\n    selection = updatedSelection\n\n    if (onSelect) {\n      onSelect(cloneDeep(updatedSelection))\n    }\n  }\n\n  function handleFocus() {\n    hasFocus = true\n    if (onFocus) {\n      onFocus()\n    }\n  }\n\n  function handleBlur() {\n    hasFocus = false\n    if (onBlur) {\n      onBlur()\n    }\n  }\n\n  async function toggleMode(newMode: Mode) {\n    if (mode === newMode) {\n      return\n    }\n\n    mode = newMode\n\n    await tick()\n    await focus()\n\n    onChangeMode(newMode)\n  }\n\n  function handleChangeQueryLanguage(newQueryLanguageId: string) {\n    debug('handleChangeQueryLanguage', newQueryLanguageId)\n    queryLanguageId = newQueryLanguageId\n    onChangeQueryLanguage(newQueryLanguageId)\n  }\n\n  // The onTransformModal method is located in JSONEditor to prevent circular references:\n  //     TreeMode -> TransformModal -> TreeMode\n  function onTransformModal({ id, json, rootPath, onTransform, onClose }: TransformModalCallback) {\n    if (readOnly) {\n      return\n    }\n\n    transformModalProps = {\n      id,\n      json,\n      rootPath,\n      indentation,\n      escapeControlCharacters,\n      escapeUnicodeCharacters,\n      parser,\n      parseMemoizeOne,\n      validationParser,\n      pathParser,\n      queryLanguages,\n      queryLanguageId,\n      onChangeQueryLanguage: handleChangeQueryLanguage,\n      onRenderValue,\n      onRenderMenu: (items: MenuItem[]) => onRenderMenu(items, { mode, modal: true, readOnly }),\n      onRenderContextMenu: (items: ContextMenuItem[]) =>\n        onRenderContextMenu(items, { mode, modal: true, readOnly, selection }),\n      onClassName,\n      onTransform,\n      onClose\n    }\n  }\n\n  // The onSortModal is positioned here for consistency with TransformModal\n  function onSortModal(props: SortModalCallback) {\n    if (readOnly) {\n      return\n    }\n\n    sortModalProps = props\n  }\n\n  // The onJSONEditorModal method is located in JSONEditor to prevent circular references:\n  //     JSONEditor -> TableMode -> JSONEditorModal -> JSONEditor\n  function onJSONEditorModal({ content, path, onPatch, onClose }: JSONEditorModalCallback) {\n    debug('onJSONEditorModal', { content, path })\n\n    jsonEditorModalProps = {\n      content,\n      path,\n      onPatch,\n\n      readOnly,\n      indentation,\n      tabSize,\n      mainMenuBar,\n      navigationBar,\n      statusBar,\n      askToFormat,\n      escapeControlCharacters,\n      escapeUnicodeCharacters,\n      flattenColumns,\n      parser,\n      validator: undefined, // TODO: support partial JSON validation?\n      validationParser,\n      pathParser,\n      onRenderValue,\n      onClassName,\n      onRenderMenu,\n      onRenderContextMenu,\n      onSortModal,\n      onTransformModal,\n      onClose\n    }\n  }\n\n  $: debug('mode changed to', mode)\n</script>\n\n<AbsolutePopup>\n  <div class=\"jse-main\" class:jse-focus={hasFocus}>\n    {#key instanceId}\n      <JSONEditorRoot\n        bind:this={refJSONEditorRoot}\n        {mode}\n        {content}\n        {selection}\n        {readOnly}\n        {indentation}\n        {tabSize}\n        {statusBar}\n        {askToFormat}\n        {mainMenuBar}\n        {navigationBar}\n        {escapeControlCharacters}\n        {escapeUnicodeCharacters}\n        {flattenColumns}\n        {parser}\n        {parseMemoizeOne}\n        {validator}\n        {validationParser}\n        {pathParser}\n        insideModal={false}\n        {onError}\n        onChange={handleChange}\n        onChangeMode={toggleMode}\n        onSelect={handleSelect}\n        {onRenderValue}\n        {onClassName}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        {onRenderMenu}\n        {onRenderContextMenu}\n        {onSortModal}\n        {onTransformModal}\n        {onJSONEditorModal}\n      />\n    {/key}\n  </div>\n\n  {#if sortModalProps}\n    <SortModal\n      {...sortModalProps}\n      onClose={() => {\n        sortModalProps?.onClose()\n        sortModalProps = undefined\n      }}\n    />\n  {/if}\n\n  {#if transformModalProps}\n    <TransformModal\n      {...transformModalProps}\n      onClose={() => {\n        transformModalProps?.onClose()\n        transformModalProps = undefined\n      }}\n    />\n  {/if}\n\n  {#if jsonEditorModalProps}\n    <JSONEditorModal\n      {...jsonEditorModalProps}\n      onClose={() => {\n        jsonEditorModalProps?.onClose()\n        jsonEditorModalProps = undefined\n      }}\n    />\n  {/if}\n</AbsolutePopup>\n\n<style src=\"./JSONEditor.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import { getValueClass } from '$lib/plugins/value/components/utils/getValueClass.js'\n  import { type JSONParser, type JSONSelection, Mode, type OnPatch } from '$lib/types.js'\n  import { isValueSelection } from '$lib/logic/selection.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let mode: Mode\n  export let parser: JSONParser\n  export let readOnly: boolean\n  export let selection: JSONSelection | undefined\n  export let onPatch: OnPatch\n\n  export let options: Array<{ value: unknown; text: string }>\n\n  let refSelect: HTMLSelectElement | undefined\n\n  let bindValue: unknown = value\n  $: bindValue = value\n\n  function applyFocus(selection: JSONSelection | undefined) {\n    if (selection) {\n      if (refSelect) {\n        refSelect.focus()\n      }\n    }\n  }\n\n  $: applyFocus(selection)\n\n  function handleSelect(event: Event) {\n    event.stopPropagation()\n\n    if (readOnly) {\n      return\n    }\n\n    onPatch([\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: bindValue\n      }\n    ])\n  }\n\n  function handleMouseDown(event: MouseEvent) {\n    // stop propagation to prevent selecting the whole line\n    event.stopPropagation()\n  }\n</script>\n\n<select\n  class={`jse-enum-value ${getValueClass(bindValue, mode, parser)}`}\n  class:jse-selected={isValueSelection(selection)}\n  bind:value={bindValue}\n  bind:this={refSelect}\n  on:change={handleSelect}\n  on:mousedown={handleMouseDown}\n>\n  {#each options as option}\n    <option value={option.value}>{option.text}</option>\n  {/each}\n</select>\n\n<style src=\"./EnumValue.scss\"></style>\n","import type { JSONPath } from 'immutable-json-patch'\nimport type { JSONSchema, JSONSchemaDefinitions, JSONSchemaEnum } from '$lib/types'\n\n/**\n * Find enum options for given path in a JSONSchema\n */\nexport function getJSONSchemaOptions(\n  schema: JSONSchema,\n  schemaDefinitions: JSONSchemaDefinitions | undefined,\n  path: JSONPath\n): JSONSchemaEnum | undefined {\n  const schemaForPath = findSchema(schema, schemaDefinitions || {}, path)\n\n  return schemaForPath ? findEnum(schemaForPath) : undefined\n}\n\n/**\n * find an enum definition in a JSON schema, as property `enum` or inside\n * one of the schemas composites (`oneOf`, `anyOf`, `allOf`)\n *\n * Source: https://github.com/josdejong/jsoneditor/blob/develop/src/js/Node.js\n */\nexport function findEnum(schema: JSONSchema): JSONSchemaEnum | undefined {\n  if (Array.isArray(schema['enum'])) {\n    return schema['enum']\n  }\n\n  const composite = schema['oneOf'] || schema['anyOf'] || schema['allOf']\n  if (Array.isArray(composite)) {\n    const match = composite.filter((entry) => entry.enum)\n    if (match.length > 0) {\n      return match[0].enum\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Return the part of a JSON schema matching given path.\n *\n * Source: https://github.com/josdejong/jsoneditor/blob/develop/src/js/Node.js\n */\nexport function findSchema(\n  topLevelSchema: JSONSchema,\n  schemaDefinitions: JSONSchemaDefinitions,\n  path: JSONPath,\n  currentSchema = topLevelSchema\n): JSONSchema | undefined {\n  const nextPath = path.slice(1, path.length)\n  const nextKey = path[0]\n\n  let possibleSchemas = [currentSchema]\n  for (const subSchemas of [currentSchema.oneOf, currentSchema.anyOf, currentSchema.allOf]) {\n    if (Array.isArray(subSchemas)) {\n      possibleSchemas = possibleSchemas.concat(subSchemas)\n    }\n  }\n\n  for (const schema of possibleSchemas) {\n    currentSchema = schema\n\n    if ('$ref' in currentSchema && typeof currentSchema.$ref === 'string') {\n      const ref = currentSchema.$ref\n      if (ref in schemaDefinitions) {\n        currentSchema = schemaDefinitions[ref]\n      } else if (ref.startsWith('#/')) {\n        const refPath = ref.substring(2).split('/')\n        currentSchema = topLevelSchema\n        for (const segment of refPath) {\n          if (segment in currentSchema) {\n            currentSchema = currentSchema[segment] as JSONSchema\n          } else {\n            throw Error(`Unable to resolve reference ${ref}`)\n          }\n        }\n      } else if (ref.match(/#\\//g)?.length === 1) {\n        const [schemaUrl, relativePath] = ref.split('#/')\n        if (schemaUrl in schemaDefinitions) {\n          const referencedSchema = schemaDefinitions[schemaUrl]\n          const reference = { $ref: '#/'.concat(relativePath) }\n          const auxNextPath = []\n          auxNextPath.push(nextKey)\n          if (nextPath.length > 0) {\n            auxNextPath.push(...nextPath)\n          }\n          return findSchema(referencedSchema, schemaDefinitions, auxNextPath, reference)\n        } else {\n          throw Error(`Unable to resolve reference ${ref}`)\n        }\n      } else {\n        throw Error(`Unable to resolve reference ${ref}`)\n      }\n    }\n\n    // We have no more path segments to resolve, return the currently found schema\n    // We do this here, after resolving references, in case of the leaf schema beeing a reference\n    if (nextKey === undefined) {\n      return currentSchema\n    }\n\n    if (\n      typeof currentSchema.properties === 'object' &&\n      currentSchema.properties &&\n      nextKey in currentSchema.properties\n    ) {\n      currentSchema = (currentSchema.properties as Record<string, JSONSchema>)[nextKey]\n      return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n    }\n\n    if (typeof currentSchema.patternProperties === 'object' && currentSchema.patternProperties) {\n      for (const prop in currentSchema.patternProperties) {\n        if (nextKey.match(prop)) {\n          currentSchema = (currentSchema.patternProperties as Record<string, JSONSchema>)[prop]\n          return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n        }\n      }\n    }\n\n    if (typeof currentSchema.additionalProperties === 'object') {\n      currentSchema = currentSchema.additionalProperties as JSONSchema\n      return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n    }\n\n    if (typeof currentSchema.items === 'object' && currentSchema.items) {\n      currentSchema = currentSchema.items as JSONSchema\n      return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n    }\n  }\n\n  return undefined\n}\n","import EnumValue from './components/EnumValue.svelte'\nimport { getJSONSchemaOptions } from '$lib/utils/jsonSchemaUtils.js'\nimport type {\n  JSONSchema,\n  JSONSchemaDefinitions,\n  RenderValueComponentDescription,\n  RenderValueProps\n} from '$lib/types'\n\n/**\n * Search the JSON schema for enums defined at given props.path. If found,\n * return an EnumValue renderer. If not found, return null. In that case you\n * have to fallback on the default valueRender function\n */\nexport function renderJSONSchemaEnum(\n  props: RenderValueProps,\n  schema: JSONSchema,\n  schemaDefinitions?: JSONSchemaDefinitions\n): RenderValueComponentDescription[] | undefined {\n  const enumValues = getJSONSchemaOptions(schema, schemaDefinitions, props.path)\n\n  if (enumValues) {\n    const { value, path, selection, parser, readOnly, onPatch } = props\n\n    const options = enumValues.map((enumValue) => ({\n      value: enumValue,\n      text: enumValue\n    }))\n\n    // make sure the current value is also added as one of the options,\n    // else it would look as if the first option is the current value\n    const optionsWithValue = enumValues.includes(props.value)\n      ? options\n      : [{ value: value as unknown, text: value as unknown }].concat(options)\n\n    return [\n      {\n        component: EnumValue,\n        props: {\n          value,\n          path,\n          selection,\n          parser,\n          readOnly,\n          onPatch,\n          options: optionsWithValue\n        }\n      }\n    ]\n  }\n\n  return undefined\n}\n","import type Ajv from 'ajv'\nimport type { Options, Schema, ErrorObject } from 'ajv'\nimport AjvDist from 'ajv'\nimport { parsePath } from 'immutable-json-patch'\nimport type { JSONSchema, JSONSchemaDefinitions, ValidationError, Validator } from '$lib/types'\nimport { ValidationSeverity } from '$lib/types.js'\n\nexport interface AjvValidatorOptions {\n  schema: JSONSchema\n  schemaDefinitions?: JSONSchemaDefinitions\n  ajvOptions?: Options\n  onCreateAjv?: (ajv: Ajv) => Ajv | void\n}\n\n/**\n * Create a JSON Schema validator powered by Ajv.\n * @param options\n * @property schema\n *                    The JSON schema to validate (required).\n * @property [schemaDefinitions=undefined]\n *                    An object containing JSON Schema definitions\n *                    which can be referenced using $ref\n * @property [ajvOptions=undefined]\n *                    Optional extra options for Ajv\n * @property [onCreateAjv=undefined]\n *                    An optional callback function allowing to apply additional\n *                    configuration on the provided Ajv instance, or return\n *                    your own Ajv instance and ignore the provided one.\n * @return Returns a validation function\n */\nexport function createAjvValidator(options: AjvValidatorOptions): Validator {\n  let ajv = createAjvInstance(options)\n  if (options.onCreateAjv !== undefined) {\n    ajv = options.onCreateAjv(ajv) || ajv\n\n    // validate whether ajv is configured correctly (this is needed to enhance error messages)\n    if (ajv.opts.verbose === false) {\n      throw new Error('Ajv must be configured with the option verbose=true')\n    }\n  }\n\n  const validateAjv = ajv.compile(options.schema as Schema)\n\n  if (validateAjv.errors) {\n    throw validateAjv.errors[0]\n  }\n\n  return function validate(json: unknown): ValidationError[] {\n    validateAjv(json)\n    const ajvErrors = validateAjv.errors || []\n\n    return ajvErrors.map(improveAjvError).map((error) => normalizeAjvError(json, error))\n  }\n}\n\nfunction createAjvInstance(options: AjvValidatorOptions): Ajv {\n  const { schemaDefinitions, ajvOptions } = options\n\n  const ajv = new AjvDist({\n    allErrors: true,\n    verbose: true,\n    $data: true,\n    ...ajvOptions\n  })\n\n  if (schemaDefinitions) {\n    Object.keys(schemaDefinitions).forEach((ref) => {\n      ajv.addSchema(schemaDefinitions[ref] as Schema, ref)\n    })\n  }\n\n  return ajv\n}\n\nfunction normalizeAjvError(json: unknown, ajvError: ErrorObject): ValidationError {\n  return {\n    path: parsePath(json, ajvError.instancePath),\n    message: ajvError.message || 'Unknown error',\n    severity: ValidationSeverity.warning\n  }\n}\n\n/**\n * Improve the error message of a JSON schema error,\n * for example list the available values of an enum.\n */\nfunction improveAjvError(ajvError: ErrorObject): ErrorObject {\n  let message: string | undefined = undefined\n\n  if (ajvError.keyword === 'enum' && Array.isArray(ajvError.schema)) {\n    let enums = ajvError.schema\n    if (enums) {\n      enums = enums.map((value) => JSON.stringify(value))\n\n      if (enums.length > 5) {\n        const more = ['(' + (enums.length - 5) + ' more...)']\n        enums = enums.slice(0, 5)\n        enums.push(more)\n      }\n      message = 'should be equal to one of: ' + enums.join(', ')\n    }\n  }\n\n  if (ajvError.keyword === 'additionalProperties') {\n    message = 'should NOT have additional property: ' + ajvError.params.additionalProperty\n  }\n\n  return message ? { ...ajvError, message } : ajvError\n}\n","import jmespath from 'jmespath'\nimport type { JSONPath } from 'immutable-json-patch'\nimport { getIn } from 'immutable-json-patch'\nimport { parseString } from '$lib/utils/stringUtils.js'\nimport type { JSONParser, QueryLanguage, QueryLanguageOptions } from '$lib/types'\nimport { isEqualParser } from '$lib/utils/jsonUtils.js'\n\nconst description = `\n<p>\n  Enter a <a href=\"https://jmespath.org\" target=\"_blank\" rel=\"noopener noreferrer\">JMESPath</a> query \n  to filter, sort, or transform the JSON data.\n To learn JMESPath, go to <a href=\"https://jmespath.org/tutorial.html\" target=\"_blank\" rel=\"noopener noreferrer\">the interactive tutorial</a>.\n</p>\n`\n\nexport const jmespathQueryLanguage: QueryLanguage = {\n  id: 'jmespath',\n  name: 'JMESPath',\n  description: description,\n  createQuery,\n  executeQuery\n}\n\n/**\n * Build a JMESPath query based on query options coming from the wizard\n * @param json   The JSON document for which to build the query.\n *                      Used for context information like determining\n *                      the type of values (string or number)\n * @param queryOptions\n * @return Returns a query (as string)\n */\nfunction createQuery(json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { sort, filter, projection } = queryOptions\n  let query = ''\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    const examplePath = ['0'].concat(filter.path)\n    const exampleValue = getIn(json, examplePath)\n    const filterValue = parseString(filter.value)\n    const filterValueStr =\n      typeof exampleValue === 'string' && filterValue !== null && filterValue !== undefined\n        ? `\"${filter.value}\"`\n        : filterValue\n\n    query +=\n      '[? ' +\n      stringifyPathForJmespath(filter.path) +\n      ' ' +\n      filter.relation +\n      ' ' +\n      '`' +\n      filterValueStr +\n      '`' +\n      ']'\n  } else {\n    query += Array.isArray(json) ? '[*]' : '@'\n  }\n\n  if (sort && sort.path && sort.direction) {\n    if (sort.direction === 'desc') {\n      query += ' | reverse(sort_by(@, &' + stringifyPathForJmespath(sort.path) + '))'\n    } else {\n      query += ' | sort_by(@, &' + stringifyPathForJmespath(sort.path) + ')'\n    }\n  }\n\n  if (projection && projection.paths) {\n    if (query[query.length - 1] !== ']') {\n      query += ' | [*]'\n    }\n\n    if (projection.paths.length === 1) {\n      const path = projection.paths[0]\n\n      query +=\n        path.length === 0\n          ? '' // edge case, selecting projection of the item root\n          : '.' + stringifyPathForJmespath(path)\n    } else if (projection.paths.length > 1) {\n      query +=\n        '.{' +\n        projection.paths\n          .map((path) => {\n            const name = path[path.length - 1]\n            return stringifyProp(name) + ': ' + stringifyPathForJmespath(path)\n          })\n          .join(', ') +\n        '}'\n    } else {\n      // values.length === 0\n      // ignore\n    }\n  }\n\n  return query\n}\n\n/**\n * Execute a JMESPath query, returns the transformed JSON\n */\nfunction executeQuery(json: unknown, query: string, parser: JSONParser): unknown {\n  // JMESPath cannot handle non-native JSON data types like LosslessNumber\n\n  function stringifyAndParse(json: unknown) {\n    const text = parser.stringify(json)\n    return text !== undefined ? JSON.parse(text) : undefined\n  }\n\n  const preprocessedJson = isEqualParser(parser, JSON) ? json : stringifyAndParse(json)\n\n  return jmespath.search(preprocessedJson, query)\n}\n\n// TODO: unit test stringifyPathForJmespath\n// TODO: Isn't there a helper function exposed by the JMESPath library?\nexport function stringifyPathForJmespath(path: JSONPath): string {\n  if (path.length === 0) {\n    return '@'\n  }\n\n  const str = path\n    .map((prop) => {\n      if (typeof prop === 'number') {\n        return '[' + prop + ']'\n      } else {\n        return '.' + stringifyProp(String(prop))\n      }\n    })\n    .join('')\n\n  return str[0] === '.'\n    ? str.slice(1) // remove first dot\n    : str\n}\n\nfunction stringifyProp(prop: string): string {\n  return prop.match(/^[A-Za-z\\d_$]+$/) ? prop : JSON.stringify(prop)\n}\n","import { JSONPath as JSONPathPlus } from 'jsonpath-plus'\nimport { parseString } from '$lib/utils/stringUtils'\nimport type { QueryLanguage, QueryLanguageOptions } from '$lib/types'\nimport type { JSONPath } from 'immutable-json-patch'\n\nconst description = `\n<p>\n  Enter a <a href=\"https://github.com/JSONPath-Plus/JSONPath\" target=\"_blank\" \n  rel=\"noopener noreferrer\"><code>JSONPath</code></a> expression to filter, sort, or transform the data.\n</p>`\n\nexport const jsonpathQueryLanguage: QueryLanguage = {\n  id: 'jsonpath',\n  name: 'JSONPath',\n  description,\n  createQuery,\n  executeQuery\n}\n\nfunction createQuery(_json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { filter, sort, projection } = queryOptions\n  let expression = '$'\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    const filterValue = parseString(filter.value)\n    const filterValueStr = JSON.stringify(filterValue)\n\n    expression += `[?(@${pathToString(filter.path)} ${filter.relation} ${filterValueStr})]`\n  }\n\n  if (sort && sort.path && sort.direction) {\n    throw new Error('Sorting is not supported by JSONPath. Please clear the sorting fields')\n  }\n\n  if (projection && projection.paths) {\n    if (projection.paths.length > 1) {\n      throw new Error(\n        'Picking multiple fields is not supported by JSONPath. Please select only one field'\n      )\n    }\n\n    if (!expression.endsWith(']')) {\n      expression += '[*]'\n    }\n    expression += `${pathToString(projection.paths[0])}`.replace(/^\\.\\.\\./, '..')\n  }\n\n  return expression\n}\n\nfunction executeQuery(json: unknown, path: string): unknown {\n  const output = JSONPathPlus({ json: json as JSON, path })\n  return output !== undefined ? output : null\n}\n\nfunction pathToString(path: JSONPath): JSONPath | string {\n  const lettersOnlyRegex = /^[A-z]+$/\n\n  return path\n    .map((prop) => {\n      return lettersOnlyRegex.test(prop) ? `.${prop}` : JSON.stringify([prop])\n    })\n    .join('')\n}\n","import * as _ from 'lodash-es'\nimport { last } from 'lodash-es'\nimport { createLodashPropertySelector, createPropertySelector } from '$lib/utils/pathUtils.js'\nimport { parseString } from '$lib/utils/stringUtils.js'\nimport type { QueryLanguage, QueryLanguageOptions } from '$lib/types.js'\nimport { isInteger } from '$lib/utils/typeUtils.js'\n\nconst description = `\n<p>\n  Enter a JavaScript function to filter, sort, or transform the data.\n  You can use <a href=\"https://lodash.com\" target=\"_blank\" rel=\"noopener noreferrer\">Lodash</a>\n  functions like <code>_.map</code>, <code>_.filter</code>,\n  <code>_.orderBy</code>, <code>_.sortBy</code>, <code>_.groupBy</code>,\n  <code>_.pick</code>, <code>_.uniq</code>, <code>_.get</code>, etcetera.\n</p>\n`\n\nexport const lodashQueryLanguage: QueryLanguage = {\n  id: 'lodash',\n  name: 'Lodash',\n  description,\n  createQuery,\n  executeQuery\n}\n\nfunction createQuery(json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { filter, sort, projection } = queryOptions\n  const queryParts = ['  return _.chain(data)\\n']\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    // Note that the comparisons embrace type coercion,\n    // so a filter value like '5' (text) will match numbers like 5 too.\n    const actualValueGetter = `item => item${createPropertySelector(filter.path)}`\n\n    const filterValue = parseString(filter.value)\n    const filterValueStr =\n      typeof filterValue === 'string'\n        ? `'${filter.value}'`\n        : isInteger(filter.value) && !Number.isSafeInteger(filterValue)\n          ? `${filter.value}n` // bigint\n          : filter.value\n\n    queryParts.push(`    .filter(${actualValueGetter} ${filter.relation} ${filterValueStr})\\n`)\n  }\n\n  if (sort && sort.path && sort.direction) {\n    queryParts.push(\n      `    .orderBy([${createLodashPropertySelector(sort.path)}], ['${sort.direction}'])\\n`\n    )\n  }\n\n  if (projection && projection.paths) {\n    // It is possible to make a util function \"pickFlat\"\n    // and use that when building the query to make it more readable.\n    if (projection.paths.length > 1) {\n      // Note that we do not use _.pick() here because this function doesn't flatten the results\n      const paths = projection.paths.map((path) => {\n        const name = last(path) || 'item' // 'item' in case of having selected the item root\n        return `      ${JSON.stringify(name)}: item${createPropertySelector(path)}`\n      })\n      queryParts.push(`    .map(item => ({\\n${paths.join(',\\n')}\\n    }))\\n`)\n    } else {\n      const path = projection.paths[0]\n      queryParts.push(`    .map(item => item${createPropertySelector(path)})\\n`)\n    }\n  }\n\n  queryParts.push('    .value()\\n')\n\n  return `function query (data) {\\n${queryParts.join('')}}`\n}\n\nfunction executeQuery(json: unknown, query: string): unknown {\n  validate(query)\n\n  // FIXME: replace unsafe new Function with a JS based query language\n  //  As long as we don't persist or fetch queries, there is no security risk.\n  // TODO: only import the most relevant subset of lodash instead of the full library?\n  // eslint-disable-next-line no-new-func\n  const queryFn = new Function(\n    '_',\n    '\"use strict\";\\n' +\n      '\\n' +\n      query +\n      '\\n' +\n      '\\n' +\n      'if (typeof query !== \"function\") {\\n' +\n      '  throw new Error(\"Cannot execute query: expecting a function named \\'query\\' but is undefined\")\\n' +\n      '}\\n' +\n      '\\n' +\n      'return query;\\n'\n  )(_)\n\n  const output = queryFn(json)\n  return output !== undefined ? output : null\n}\n\nfunction validate(query: string) {\n  // It is very common to forget to end a lodash chain with .value()\n  // This lets the JSON Editor crash though.\n  // Therefore, we do a simple validation (not a guarantee)\n  const chainCount = query.match(/_\\.chain\\(/g)?.length\n  const valueCount = query.match(/\\.value\\(\\)/g)?.length\n\n  if (chainCount !== valueCount) {\n    throw new Error('Cannot execute query: Lodash _.chain(...) must end with .value()')\n  }\n}\n","import { createPropertySelector } from '$lib/utils/pathUtils.js'\nimport { parseString } from '$lib/utils/stringUtils.js'\nimport type { QueryLanguage, QueryLanguageOptions } from '$lib/types.js'\nimport { isInteger } from '$lib/utils/typeUtils.js'\n\nconst description = `\n<p>\n  Enter a JavaScript function to filter, sort, or transform the data.\n</p>\n`\n\nexport const javascriptQueryLanguage: QueryLanguage = {\n  id: 'javascript',\n  name: 'JavaScript',\n  description,\n  createQuery,\n  executeQuery\n}\n\nfunction createQuery(json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { filter, sort, projection } = queryOptions\n  const queryParts = ['  return data\\n']\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    // Note that the comparisons embrace type coercion,\n    // so a filter value like '5' (text) will match numbers like 5 too.\n    const actualValueGetter = `item => item${createPropertySelector(filter.path)}`\n\n    const filterValue = parseString(filter.value)\n    const filterValueStr =\n      typeof filterValue === 'string'\n        ? `'${filter.value}'`\n        : isInteger(filter.value) && !Number.isSafeInteger(filterValue)\n          ? `${filter.value}n` // bigint\n          : filter.value\n\n    queryParts.push(`    .filter(${actualValueGetter} ${filter.relation} ${filterValueStr})\\n`)\n  }\n\n  if (sort && sort.path && sort.direction) {\n    if (sort.direction === 'desc') {\n      queryParts.push(\n        `    .slice()\\n` +\n          `    .sort((a, b) => {\\n` +\n          `      // sort descending\\n` +\n          `      const valueA = a${createPropertySelector(sort.path)}\\n` +\n          `      const valueB = b${createPropertySelector(sort.path)}\\n` +\n          `      return valueA > valueB ? -1 : valueA < valueB ? 1 : 0\\n` +\n          `    })\\n`\n      )\n    } else {\n      // sort direction 'asc'\n      queryParts.push(\n        `    .slice()\\n` +\n          `    .sort((a, b) => {\\n` +\n          `      // sort ascending\\n` +\n          `      const valueA = a${createPropertySelector(sort.path)}\\n` +\n          `      const valueB = b${createPropertySelector(sort.path)}\\n` +\n          `      return valueA > valueB ? 1 : valueA < valueB ? -1 : 0\\n` +\n          `    })\\n`\n      )\n    }\n  }\n\n  if (projection && projection.paths) {\n    // It is possible to make a util function \"pickFlat\"\n    // and use that when building the query to make it more readable.\n    if (projection.paths.length > 1) {\n      const paths = projection.paths.map((path) => {\n        const name = path[path.length - 1] || 'item' // 'item' in case of having selected the item root\n        const item = `item${createPropertySelector(path)}`\n        return `      ${JSON.stringify(name)}: ${item}`\n      })\n\n      queryParts.push(`    .map(item => ({\\n${paths.join(',\\n')}})\\n    )\\n`)\n    } else {\n      const item = `item${createPropertySelector(projection.paths[0])}`\n\n      queryParts.push(`    .map(item => ${item})\\n`)\n    }\n  }\n\n  return `function query (data) {\\n${queryParts.join('')}}`\n}\n\nfunction executeQuery(json: unknown, query: string): unknown {\n  // FIXME: replace unsafe new Function with a JS based query language\n  //  As long as we don't persist or fetch queries, there is no security risk.\n  // TODO: only import the most relevant subset of lodash instead of the full library?\n  // eslint-disable-next-line no-new-func\n  const queryFn = new Function(\n    '\"use strict\";\\n' +\n      '\\n' +\n      query +\n      '\\n' +\n      '\\n' +\n      'if (typeof query !== \"function\") {\\n' +\n      '  throw new Error(\"Cannot execute query: expecting a function named \\'query\\' but is undefined\")\\n' +\n      '}\\n' +\n      '\\n' +\n      'return query;\\n'\n  )()\n\n  const output = queryFn(json)\n  return output !== undefined ? output : null\n}\n","import JSONEditorComponent from './components/JSONEditor.svelte'\nimport type { JSONEditorPropsOptional } from '$lib/types'\n\n// Note: index.ts exports `JSONEditor`, but we will override this on purpose\n//  since we cannot use it in the vanilla environment starting in Svelte 5.\nexport * from './index'\n\ninterface CreateJSONEditorProps {\n  target: HTMLDivElement\n  props: JSONEditorPropsOptional\n}\n\nexport function createJSONEditor({ target, props }: CreateJSONEditorProps) {\n  // TODO: in Svelte 5, this needs to be changed to:\n  //\n  //     export function createJSONEditor({ target, props }: Parameters<typeof mount>[1]) {\n  //       return mount(JSONEditor, { target, props })\n  //     }\n  //\n  return new JSONEditorComponent({ target, props })\n}\n\n/**\n * The constructor \"new JSONEditor(...)\" is deprecated. Please use \"createJSONEditor(...)\" instead.\n * @constructor\n * @deprecated\n */\nexport function JSONEditor({ target, props }: CreateJSONEditorProps) {\n  // TODO: deprecation warning since v1. Remove some day\n  console.warn(\n    'WARNING: the constructor \"new JSONEditor(...)\" is deprecated since v1. ' +\n      'Please use \"createJSONEditor(...)\" instead.'\n  )\n\n  return createJSONEditor({ target, props })\n}\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","not_equal","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","null_to_empty","value","action_destroyer","action_result","destroy","globals","window","globalThis","global","append","target","node","appendChild","append_styles","style_sheet_id","styles","append_styles_to","document","root","getRootNode","ownerDocument","host","get_root_for_style","getElementById","style","element","id","textContent","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","stop_propagation","stopPropagation","attr","attribute","removeAttribute","getAttribute","setAttribute","current_component","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","cssText","set","indexOf","set_svg_attributes","set_data","set_input_value","input","set_style","important","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","selectedIndex","toggle_class","toggle","classList","construct_svelte_component","component","set_current_component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","type","detail","cancelable","arguments","callbacks","bubbles","CustomEvent","custom_event","defaultPrevented","getContext","context","get","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","e","pop","callback","add","clear","fragment","before_update","after_update","outros","outroing","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","Array","from","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","_loop","child_ctx","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","get_spread_update","levels","to_null_out","accounted_for","get_spread_object","spread_props","bind","index","bound","create_component","mount_component","new_on_destroy","map","filter","destroy_component","filtered","targets","init","instance","create_fragment","parent_component","on_disconnect","skip_bound","ready","ret","fill","make_dirty","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","constructor","_defineProperty","$destroy","$on","splice","$set","obj","$$set","createDebug","namespace","enabled","debug","localStorage","error","tryReadLocalStorage","endsWith","startsWith","enableDebug","color","hash","charCodeAt","colors","selectColor","_len","args","_key4","console","log","concat","__svelte","v","uniqueId","int","parseInt","containsNumber","NUMBER_REGEX","test","isObject","isObjectOrArray","isBoolean","isTimestamp","isFinite","floor","isNaN","Date","valueOf","Number","err","getColorCSS","colorTestDiv","applied","replace","toLowerCase","isColor","valueType","parser","isArray","valueStr","stringify","isUrlRegex","isUrl","stringConvert","str","strTrim","trim","parse","isInteger","INTEGER_REGEX","MAX_ITEM_PATHS_COLLECTION","ROOT_PATH","strictShallowEqual","getNestedPaths","array","includeObjects","pointersMap","TypeError","recurseNestedPaths","path","compileJSONPointer","min","sort","parseJSONPointer","forEachIndex","start","end","iteratee","limit","arrayToObject","_objectSpread","objectToArray","object","values","moveItems","count","offset","copy","moving","apply","insertItemsAt","items","parseAndRepair","jsonText","jsonrepair","parseAndRepairOrUndefined","partialJson","parsePartialJson","END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX","repairPartialJson","repaired","substring","normalizeJsonParseError","parseErrorMessage","positionMatch","POSITION_REGEX","exec","position","line","character","charAt","countCharacterOccurrences","column","lastIndexOf","message","lineMatch","LINE_REGEX","lineOneBased","columnMatch","COLUMN_REGEX","columnOneBased","calculatePosition","validateContentType","content","json","isContent","isTextContent","isJSONContent","toTextContent","indentation","JSON","toJSONContent","getText","isLargeContent","maxSize","estimateSerializedSize","Infinity","estimatedSize","recurse","String","isEqualParser","needsFormatting","includes","DELIMITER_WITHOUT_SPACING_REGEX","Mode","SelectionType","CaretType","ValidationSeverity","SearchField","SortDirection","UpdateSelectionAfterChange","createNormalizationFunctions","_ref2","escapeControlCharacters","escapeUnicodeCharacters","normalizeControlAndUnicode","normalizeControl","normalizeUnicode","normalizeNothing","escapeValue","jsonEscapeUnicode","jsonEscapeControl","unescapeValue","jsonUnescapeControl","jsonUnescapeUnicode","x","_x$codePointAt","codePointAt","toString","unescaped","controlCharacters","escapedControlCharacters","addNewLineSuffix","isChildOfNodeName","nodeName","isChildOf","toUpperCase","isChildOfAttribute","hasAttribute","predicate","findParent","getWindow","_element$ownerDocumen","_element$ownerDocumen2","defaultView","activeElementIsChildOf","activeElement","findParentWithNodeName","getSelectionTypeFromTarget","inside","after","multi","encodeDataPath","encodeURIComponent","getDataPathFromTarget","_parent$getAttribute","parent","dataPath","decodeURIComponent","findNearestElement","_ref3","allElements","currentElement","direction","hasPrio","margin","all","rect","getBoundingClientRect","width","height","calculateCenter","current","left","y","top","distance","weightY","diffX","diffY","sqrt","distanceToCurrent","candidate","candidatesLeft","button","isLeft","isRight","right","candidatesLeftOnRow","isOnSameRow","nearest","minBy","candidates","isAbove","isBelow","prioCandidates","isMacDevice","_ref4","_navigator$platform$t","_navigator","_navigator2","navigator","platform","userAgentData","keyComboFromEvent","separator","combi","isCtrlKeyDown","altKey","shiftKey","keyName","metaKeys","join","isMac","ctrlKey","metaKey","Ctrl","Command","Control","Alt","Option","Shift","switch_instance_spread_levels","switch_value","switch_instance_props","div","div_style_value","calculateStyle","create_if_block","handleMouseDownInside","refRootPopup","rootRect","positionAbove","positionLeft","offsetTop","offsetLeft","bottom","innerHeight","innerWidth","refHiddenInput","popup","$$props","closeAbsolutePopup","closeWhenOutside","closeOnOuterClick","focus","$$value","each_blocks","popups","popupId","popupIndex","findIndex","onClose","openAbsolutePopup","findUniqueName","keysSet","nameWithoutCopySuffix","validName","truncate","maxLength","maxTextLength","ellipsis","parseString","lower","num","numFloat","parseFloat","jsonQueryLanguage","_json","queryOptions","projection","queryFunctions","relation","operator","getter","paths","query","jsonquery","g","cursor","raw","getRaw","data2","rawData","ids","match","rawId","_","pointerId","$$invalidate","svg","class","svg_class_value","role","svg_role_value","className","box","spin","inverse","pulse","flip","label","path_1","polygon_1","each_value_1","_ctx$","each_value","_ctx$2","polygons","if_block","_ctx$3","_ctx$4","_ctx$5","_ctx$6","iconData","combinedStyle","scale","normalisedScale","numScale","warn","calculateRatio","iconData2","iconName","width2","height2","icon","path2","normaliseData","combined","size","faCheckSquare","faSquare","div_aria_checked_value","icon_changes","readOnly","onPatch","op","ref","onChange","showOnTop","destroyColorPicker","_asyncToGenerator","_yield$import","colorPicker","default","onDone","hex","rgba","show","_getWindow$1$innerHei","_getWindow$","windowHeight","ColorPickerPopup","AUTO_SCROLL_INTERVAL","AUTO_SCROLL_SPEED_SLOW","AUTO_SCROLL_SPEED_NORMAL","AUTO_SCROLL_SPEED_FAST","MAX_SEARCH_RESULTS","ARRAY_SECTION_SIZE","MAX_VALIDATION_ERRORS","MAX_CHARACTERS_TEXT_PREVIEW","DEFAULT_VISIBLE_SECTIONS","MAX_VALIDATABLE_SIZE","MAX_AUTO_REPAIRABLE_SIZE","MAX_DOCUMENT_SIZE_TEXT_MODE","MAX_DOCUMENT_SIZE_EXPAND_ALL","INSERT_EXPLANATION","CONTEXT_MENU_EXPLANATION","HOVER_INSERT_INSIDE","HOVER_INSERT_AFTER","HOVER_COLLECTION","JSON_STATUS_VALID","JSON_STATUS_REPAIRABLE","CONTEXT_MENU_HEIGHT","CONTEXT_MENU_WIDTH","SEARCH_BOX_HEIGHT","SORT_DIRECTION_NAMES","asc","desc","mergeSections","sections","sortedSections","sortBy","section","mergedSections","sortedIndex","mergedIndex","previous","nextRoundNumber","currentRoundNumber","isMenuSpace","item","isMenuSeparator","isMenuLabel","isMenuButton","isMenuDropDownButton","isContextMenuRow","isContextMenuColumn","isContentParseError","contentErrors","isContentValidationErrors","isValidationError","isNestedValidationError","isChildError","isSvelteComponentRenderer","isSvelteActionRenderer","action","isObjectRecursiveState","state","isArrayRecursiveState","isValueRecursiveState","isExpandableState","hasSearchResults","searchResults","createDocumentState","_ref14","expand","documentState","_ref13","factory","createArrayDocumentState","createObjectDocumentState","createValueDocumentState","createRecursiveState","documentStateFactory","expandPath","expanded","visibleSections","properties","ensureRecursiveState","_ref15","arrayState","itemState","setIn","objectState","syncDocumentState","_transformDocumentState","nestedJson","nestedState","updatedState","forEachVisibleIndex","itemPath","updatedItem","propPath","updatedProp","jsonArray","_ref16","toRecursiveStatePath","recursiveStatePath","partialPath","updateInDocumentState","some","inVisibleSection","newVisibleSection","expandVisibleSection","_loop2","nestedValue","nestedPath","_expandRecursively","collapsePath","recursive","_collapse","_collapseRecursively","documentStatePatch","operations","initial","reduce","operation","immutableJSONPatch","_documentStatePatch","isJSONPatchAdd","documentStateAdd","isJSONPatchRemove","documentStateRemove","isJSONPatchReplace","parsePath","enforceString","getEnforceString","setInDocumentState","isJSONPatchCopy","isJSONPatchMove","stateValue","getInRecursiveState","documentStateMoveOrCopy","getIn","updateInRecursiveState","transform","ensuredState","updateIn","recursiveState","setInRecursiveState","_parent","last","shiftVisibleSections","parentPath","recursivePath","existsIn","deleteIn","deleteInDocumentState","mergeAdjacentSections","getNextKeys","includeKey","getVisiblePaths","_recurse","isJSONArray","isJSONObject","getVisibleCaretPositions","includeInside","valueState","propertyPath","getNextVisiblePath","visiblePaths","expandSmart","expandMinimal","expandAll","relativePath","expandSelf","expandNone","isAfterSelection","selection","isInsideSelection","isKeySelection","isValueSelection","isMultiSelection","isMultiSelectionWithOneItem","isEqual","focusPath","anchorPath","isJSONSelection","isTextSelection","getSelectionPaths","getAnchorPath","getFocusPath","sharedPath","findSharedPath","createMultiSelection","startPath","getStartPath","endPath","getEndPath","startIndex","getChildIndex","endIndex","iterateOverSelection","getParentPath","anchorIndex","getSelectionUp","keepAnchorPath","previousPath","visiblePathPointers","pathPointer","getPreviousVisiblePath","createValueSelection","isEmpty","createKeySelection","findCaretAndSiblings","caret","visibleCaretPositions","getInitialSelection","createSelectionFromOperations","every","firstOp","otherOps","path1","singleItemSelected","findRootPath","pathStartsWith","removeEditModeFromSelection","isEditingSelection","createEditKeySelection","initialValue","edit","createEditValueSelection","createInsideSelection","createAfterSelection","isParent","selectionToPartialJson","hasSelectionContents","canConvert","fromCaretPosition","caretPosition","fromSelectionType","selectionType","selectionIfOverlapping","pathInSelection","pathIndex","classnames","classes","_len2","_key5","arg","hasOwnProperty","getValueClass","mode","table","div_class_value","domValue","valueClass","shortText","onCancel","onFind","onPaste","onValueClass","closed","getDomValue","removeNewLineSuffix","innerText","setDomValue","updatedValue","firstChild","range","createRange","getSelection","setStart","collapse","removeAllRanges","addRange","setCursorToEnd","newValue","no","combo","nextInside","clipboardData","clipboardText","getData","hasFocus","self","editablediv_changes","normalization","onPasteJson","onSelect","findNextInside","convert","handleCancelChange","updateSelection","patchedState","patchedSelection","pastedText","pastedJson","contents","onPasteAsJson","patchedJson","entry","afterKey","nextKeys","newProp","moveDown","rename","oldKey","newKey","newKeyUnique","duplicate","lastPath","beforeKey","clipboard","newValues","clipboardToValues","firstPath","removeAll","removeKeys","filteredKeys","nextKey","firstKey","reverse","textIsObject","textIsArray","clipboardOriginal","clipboardRepaired","createRemoveOperations","newSelection","previousKey","revertJSONPatchWithMoveOperations","revertJSONPatch","before","revertOperations","createRevertMoveOperations","searchNext","searchResult","nextActiveIndex","activeIndex","nextActiveItem","active","activeItem","search","searchText","_options$maxResults","searchTextLowerCase","maxResults","columns","results","onMatch","searchRecursive","level","findCaseInsensitiveMatches","field","textLower","fieldIndex","replaceText","replacementText","replaceAllText","occurrences","updatedText","forEachRight","occurrence","createSearchAndReplaceOperations","searchResultItem","currentValue","currentValueText","getSearchResultPath","filterKeySearchResults","filterValueSearchResults","searchResultsFactory","toRecursiveSearchResults","searchResultItems","updateInSearchResults","flattenSearchResults","_node$searchResults","nested","flatMap","span","t","t_value","parts","matches","previousEnd","precedingText","matchingText","lastMatch","splitValue","valueIsUrl","open","tooltip","_ref22","handleMouseEnter","Tooltip","handleMouseLeave","faClock","absolutePopupContext","renderValue","_ref24","isEditing","renderers","BooleanToggle","ColorPicker","EditableValue","ReadonlyValue","TimestampTag","stringifyJSONPath","integerNumberRegex","parseJSONPath","pathStr","parseProp","eatCharacter","isEnd","unescape","prop","char","SyntaxError","pathToOption","stringifyLodashProperty","javaScriptPropertyRegex","propStr","createPropertySelector","transformModalStates","transformModalStateShared","showWizard","showOriginal","round","createCoords","oppositeSideMap","oppositeAlignmentMap","clamp","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getOppositeAlignmentPlacement","alignment","getOppositePlacement","side","getPaddingObject","padding","expandPaddingObject","rectToClientRect","computeCoordsFromPlacement","_ref","rtl","coords","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","computePosition","_ref25","config","strategy","middleware","validMiddleware","Boolean","isRTL","rects","getElementRects","statefulPlacement","middlewareData","resetCount","nextX","nextY","reset","initialPlacement","elements","_x","_x2","_x3","detectOverflow","_x4","_x5","_detectOverflow","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","_convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","getNodeName","isNode","_node$ownerDocument","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","getComputedStyle","isTableElement","isTopLayer","selector","isContainingBlock","elementOrCss","webkit","isWebKit","css","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","assignedSlot","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","noOffsets","getVisualOffsets","includeScale","isFixedStrategy","clientRect","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","topLayer","elementClippingAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","_ref26","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","_x8","getClientRects","autoUpdate","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","passive","frameId","cleanupIo","onMove","timeoutId","io","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","observe","entries","ratio","intersectionRatio","setTimeout","observeMove","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","_middlewareData$offse","_middlewareData$arrow","diffCoords","_x6","_x7","convertValueToCoords","arrow","alignmentOffset","shift","_evaluate2","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","_objectWithoutProperties","_excluded2","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","_evaluate","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","_excluded","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","isStart","lr","rl","getSideList","getOppositeAxisPlacements","placements","overflows","overflowsData","sides","mainAlignmentSide","getAlignmentSides","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","_overflowsData$filter2","currentSideAxis","acc","mergedOptions","platformWithCache","computePosition$1","_ref27","loadOptions","filterText","multiple","itemId","groupBy","filterSelectedItems","itemFilter","convertStringItemsToObjects","filterGroupedItems","filterResults","matchesFilter","getItems","_x9","_getItems","_ref28","dispatch","res","catch","details","cancelled","filteredItems","loading","focused","listOpen","circle","if_block0","create_if_block_13","if_block2","create_if_block_9","_ctx$7","_ctx$8","div0","groupHeader","groupItem","_ctx$9","selectable","div1","listDom","_ctx$10","span0","span1","ClearIcon","create_if_block_6","create_if_block_8","create_if_block_7","create_if_block_4","create_if_block_3","create_if_block_2","create_if_block_1","input_1","if_block6","div3","div2","input_1_readonly_value","_items","timeout","activeValue","prev_value","prev_filterText","prev_multiple","_inputAttributes","slots","justValue","_filter","container","multiFullItemClearable","disabled","placeholder","placeholderAlwaysShow","groupFilter","groups","groupHeaderSelectable","containerStyles","hasError","required","closeListOnChange","clearFilterTextOnBlur","createGroupHeaderItem","groupValue","searchable","inputStyles","clearable","debounce","wait","debounceWait","hideEmptyState","inputAttributes","listAutoWidth","showChevron","listOffset","hoverItemIndex","floatingConfig","containerClasses","groupValues","sortedGroupedItems","checkHoverSelectable","startingIndex","ignoreGroup","setHoverIndex","checkValueForDuplicates","noDuplicates","uniqueValues","val","findItem","matchTo","find","handleMultiItemClear","_x10","_handleMultiItemClear","itemToRemove","handleFocus","_document","_input","handleBlur","_x11","_handleBlur","_input2","isScrolling","closeList","blur","ariaValues","ariaListOpen","ariaFocused","isScrollingTimer","handleListScroll","_list2","remove","handleSelect","itemSelected","handleHover","handleItemClick","isItemSelectable","increment","hasOwn","hover","activeScroll","scrollAction","hoverScroll","scrollIntoView","behavior","initOptions","referenceElement","floatingElement","defaultOptions","getOptions","updatePosition","setupVirtualElementObserver","_floatingConfig","floatingRef","floatingContent","floatingUpdate","mixin","subscribe","$node","contentAction","contentOptions","autoUpdateDestroy","destroyAutoUpdate","initAutoUpdate","_autoUpdate","updateOptions","_options","onComputed","prefloat","setValue","autocapitalize","autocomplete","autocorrect","spellcheck","tabindex","hasValue","hideSelectedItem","showClear","placeholderText","_value5","ariaSelection","ariaContext","_item","handleAriaContent","updateValueDisplay","handleFilterEvent","_floatingConfig2","listMounted","setListWidth","scrollToHoverItem","hoverItem","_list","contains","getFilteredItems","tr0","th0","td0","tr1","th1","td1","tr2","th2","td2","filterRelationOptions","sortDirectionOptions","filterPath","_queryOptions","filterRelation","_filterRelationOption","_queryOptions$filter","filterValue","_queryOptions2","sortPath","_queryOptions3","sortDirection","_sortDirectionOptions","_queryOptions$sort","_queryOptions4","_queryOptions5","_queryOptions6","_queryOptions8","jsonIsArray","pathsIncludingObjects","fieldOptions","projectionOptions","projectionPaths","_queryOptions10","_filterPath","_filterRelation","_queryOptions7","changeSortPath","_sortPath","_sortDirection","_queryOptions9","changeProjectionPaths","t1_value","button_title_value","t1","queryLanguages","queryLanguageId","onChangeQueryLanguage","handleChangeQueryLanguage","newQueryLanguageId","queryLanguage","faDownLeftAndUpRightToCenter","faUpRightAndDownLeftFromCenter","faTimes","title","fullScreenButton","fullscreen","click_handler","_onClose","faCog","refConfigButton","SelectQueryLanguage","easeInOutQuad","createJump","stop","easing","a11y","duration","timeStart","timeElapsed","scrolling","scrollTo","loop","timeCurrent","done","querySelector","MAX_HISTORY_ITEMS","createHistory","maxItems","canUndo","canRedo","getState","handleChange","undo","redo","measure","onDuration","now","validationErrorsFactory","updateInValidationErrors","errors","validateJSON","validator","validationParser","validateText","validationErrors","severity","info","convertedJSON","isRepairable","canAutoRepair","parseError","createFocusTracker","_ref35","blurTimeoutHandle","onFocus","onBlur","handleFocusIn","newFocus","handleFocusOut","icon_1","Icon","icon_1_changes","button_disabled_value","actions","onClick","onMouseDown","faExclamationTriangle","faAngleRight","tr","tr_class_value","tbody","faAngleDown","t3_value","td3","t3","show_if","selectError","warning","validationError","onEscape","handleKeyDown","dialog_1","dialog","showModal","close","div9","div7","div4","div6","div5","div8","ctrl","unknownMenuItem","if_block1","button_class_value","show_if_1","show_if_2","message_changes","textarea","domTextArea","onParse","onRepair","onApply","handleApply","getErrorMessage","repairable","errorActions","gotoAction","repairAction","successActions","faCheck","faArrowDown","setSelectionRange","faWrench","repairedText","handleMouseMove","sectionIndex","total","onExpandSection","visibleSection","getJson","expandItemsSections","section1","start2","section2","currentIndex","previousIndex","section3","showSection2","getExpandItemsSections","expandItemsSection","faCaretDown","insert_1","onContextMenu","buttonElem","showTip","searchresulthighlighter_changes","contextmenupointer_changes","pointer","onUpdateKey","isKeySelected","isEditingKey","updatedKey","updatedPath","previous_key","dispose","action_action","constants_0","onRenderValue","singleton","selecting","selectionAnchor","selectionAnchorType","selectionFocus","dragging","onMoveSelection","_ref47","deltaY","updatedSelection","dragInsideAction","_ref48","initialPath","initialIndex","prevHeight","_items2","cumulativeHeight","beforePath","findSwapPathUp","_ref49","_items$beforeIndex","nextHeight","_items3","findSwapPathDown","startKey","endKey","toKey","toIndex","times","moveInsideParent","_ref50","_items4","_items5","createUpdatedArraySelection","onExpand","appendToJSONPointer","constants_1","constants_2","constants_4","create_if_block_26","create_if_block_24","create_if_block_23","jsonvalue_changes","create_if_block_21","create_if_block_20","if_block4","create_if_block_18","create_if_block_16","create_if_block_17","create_if_block_10","faCaretRight","t2_value","t4_value","t2","t4","create_if_block_14","jsonkey_changes","jsonnode_changes","gutterIndex","collapseditems_changes","onClassName","isNodeSelected","onDragSelectionStart","hoverTimer","handleMouseMoveGlobal","onDrag","handleMouseUpGlobal","onDragEnd","findContentTop","_context$findElement","findElement","calculateDeltaY","contentOffset","initialContentTop","clientY","initialClientY","handleDragSelection","didMoveItems","handleDragSelectionEnd","initialTarget","_validationErrors","selectionStartIndex","selectionItemsCount","indices","buttons","contentEditable","isContentEditableDiv","anchorType","getDocumentState","fullSelection","lastCaretPosition","selectionParentPath","addHeight","currentSection","getVisibleItemsWithHeights","contextMenuProps","faJSONEditorExpand","prefix","faJSONEditorCollapse","faJSONEditorFormat","faJSONEditorCompact","expandMenuItem","collapseMenuItem","searchMenuItem","defaultItems","showSearch","historyState","onExpandAll","onCollapseAll","onUndo","onRedo","onSort","onTransform","onCopy","onRenderMenu","handleToggleSearch","hasJson","faSearch","faCopy","faSortAmountDownAlt","faFilter","faEllipsisV","faUndo","faRedo","button0","button1","onCreateArray","onCreateObject","caseInsensitiveNaturalCompare","aLower","bLower","naturalCompare","sortJson","rootPath","comparator","valueA","valueB","createObjectComparator","sortArray","sortedKeys","keyA","keyB","sortObjectKeys","MAX_ITEM_CHARACTERS","MAX_ITEMS","selectedItem","refNavigationBarItem","handleSelectItem","NavigationBarDropdown","copyToClipBoard","_document$queryComman","_document2","writeText","queryCommandSupported","opacity","execCommand","inputRef","inputPath","pathParser","onError","pathExists","validationActive","copiedTimer","copied","parseAndValidate","validatePathExists","inputValidationError","currentTarget","navigationbaritem_changes","faClose","faEdit","refNavigationBar","editing","handleCloseEditor","hasNextItem","faChevronDown","faChevronUp","form","button2","faCircleNotch","initSearchInput","showReplace","onSearch","appliedText","searching","applyChangedSearchTextDebounced","_x13","_applyChangedSearchText","applyChangedJsonDebounced","_x14","_applyChangedJson","toggleShowReplace","_handlePaste","handleReplace","_handleReplace","_searchResult3","_handleReplaceAll","deduplicatedMatches","previousItem","lastNewSelection","allOperations","createSearchAndReplaceAllOperations","handleNext","_handleNext","handlePrevious","_handlePrevious","previousActiveIndex","previousActiveItem","searchPrevious","_handleFocus","_searchResult4","_applyChangedShowSearch","applySearch","_x15","_x16","_x17","_applySearch","newResultItems","previousResult","activePath","matchingActiveIndex","updateSearchResult","handleClose","cancel","resultCount","_searchResult","_searchResult2","formattedResultCount","_x12","applyChangedShowSearch","endOfPath","Symbol","getColumns","flatten","maxSampleCount","step","forEachSample","_recurseObject","_collectPaths","valueMerged","calculateVisibleSection","viewPortHeight","itemHeights","defaultItemHeight","searchBoxOffset","itemCount","averageItemHeight","calculateAverageItemHeight","viewPortTop","viewPortBottom","getItemHeight","startHeight","visibleHeight","endHeight","visibleItems","calculateAbsolutePosition","rowIndex","toTableCellPosition","columnIndex","fromTableCellPosition","groupValidationErrors","arrayErrors","rootErrors","partition","errorsByRow","findRowIndex","groupedErrorsByRow","mapValues","groupByRow","row","findColumnIndex","rows","mergeValidationErrors","clearSortedColumnWhenAffectedByOperations","sortedColumn","columms","mustBeCleared","selectedColumnIndex","operationAffectsSortedColumn","onCut","_x18","_onCut","_ref58","copyToClipboard","_x19","_onCopy","_ref59","_ref60","onChangeText","openRepairModal","doPaste","ensureSelection","onRemove","_ref61","keepSelection","removeSelection","patchResult","onDuplicateRow","_ref62","rowPath","onInsertBeforeRow","_ref63","onInsertAfterRow","_ref64","nextRowIndex","nextRowPath","onRemoveRow","_ref65","newRowIndex","onInsert","_ref66","insertType","selectInside","onReplaceJson","jsonExample","cloneDeepWith","createNewValue","onInsertCharacter","_x20","_onInsertCharacter","_ref67","_x21","_onInsertValueWithCharacter","onInsertValueWithCharacter","_ref68","truncated","onRequestClose","li","ul","visible","handleClick","allItemsDisabled","wasVisible","main","dropdownbutton_changes","each_value_2","show_if_3","faLightbulb","refContextMenu","tip","firstEnabledButton","querySelectorAll","directionByCombo","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","create_if_block_5","faCode","isSSR","refContents","refJsonEditor","sortModalId","transformModalId","jump","externalContent","externalSelection","mainMenuBar","navigationBar","parseMemoizeOne","onChangeMode","onRenderContextMenu","onSortModal","onTransformModal","onJSONEditorModal","modalOpen","copyPasteModalOpen","jsonRepairModalProps","searchResultDetails","documentStateInitialized","_handleFocusSearch","history","isSelectionInsidePath","textIsRepaired","validationErrorList","memoizedValidate","memoizeOne","updateValidationErrors","newValidationErrorList","output","toRecursiveValidationErrors","validate","applyExternalContent","updatedContent","updatedJson","isChanged","currentlyText","previousState","expandWhenNotInitialized","clearSelectionWhenNotExisting","addHistoryItem","applyExternalJson","repairError","applyExternalText","canPatch","patch","afterPatch","_createSelectionFromO","previousJson","patched","handleEditKey","handleEditValue","openJSONEditorModal","handleToggleEnforceString","handlePatch","handleCut","_handleCut","indent","handleCopy","_handleCopy","handlePasteFromMenu","handleRemove","handleDuplicate","handleExtract","extract","handleInsert","handleReplaceJson","handleInsertFromContextMenu","handleConvert","convertedValue","parsedValue","convertValue","handleInsertBefore","selectionBefore","handleContextMenu","handleInsertAfter","handleInsertCharacter","_x23","_handleInsertCharacter","handleUndo","previousContent","emitOnChange","handleRedo","openSortModal","_onSort","_ref75","_x24","handleSortSelection","openTransformModal","transformedJson","handleTransformSelection","_x25","_scrollTo","scrollToWhenVisible","elem","viewPortRect","elemRect","_refContents$querySel","_refContents","elemHeight","_onChange","_onChange2","handleChangeText","handleExpand","openFind","findAndReplace","handleExpandSection","_value","expandSection","handlePasteJson","newPastedJson","openContextMenu","_ref76","_onRenderContextMenu","_ref74","onEditKey","onEditValue","onToggleEnforceString","onDuplicate","onExtract","onInsertBefore","onConvert","onInsertAfter","hasSelection","rootSelected","focusValue","editValueText","canEditKey","canEditValue","canEnforceString","canCut","canCopy","canPaste","canDuplicate","canExtract","convertMode","insertOrConvertText","canInsertOrConvertStructure","canInsertOrConvertObject","canInsertOrConvertArray","canInsertOrConvertValue","handleInsertOrConvert","faPen","faCut","faPaste","faClone","faCropAlt","faTrashCan","faArrowRightArrowLeft","faPlus","faCaretSquareUp","faCaretSquareDown","createTreeContextMenuItems","ContextMenu","clientX","_refContents2","_refContents3","_handleParsePastedJson","childPath","nextPathInside","getSelectionNextInside","handleDrag","autoScrollHandler","handleDragEnd","overflowAnchor","applySearchBoxSpacing","applyExternalSelection","scrollableElement","autoScrollSpeed","autoScrollTimer","calculateSpeed","diff","autoScrollCallback","startAutoScroll","speed","stopAutoScroll","setInterval","clearInterval","createAutoScrollHandler","tree","_x22","_event$clipboardData","collapsedState","nextPath","nextPathAfter","getSelectionDown","getSelectionLeft","getSelectionRight","isContentEditable","outsideEditor","func_3","_jsonRepairModalProps","readonlyProxy","Proxy","property","receiver","Reflect","deleteProperty","description","input_value_value","div19","div17","div16","div12","div11","div10","div15","div14","div18","innerHTML","raw_value","refQueryInput","selectedJson","selectedContent","stateId","_transformModalStates","_state$queryOptions","isManual","_state$isManual","queryError","previewError","previewContent","getSelectedQueryLanguage","_queryLanguages$find","updateQueryByWizard","newQueryOptions","createQuery","_refQueryInput","previewTransformDebounced","previewJson","jsonTransformed","executeQuery","formatSize","kilo","toFixed","KB","MB","GB","onFormat","onCompact","onToggleSearch","canFormat","canCompact","canSort","canTransform","searchItem","pos","lineNumber","columnNumber","charCount","editorState","_editorState","_editorState2","doc","lineAt","number","_editorState3","ranges","to","observer","highlightStyle","HighlightStyle","define","tag","tags","propertyName","bool","string","keyword","highlighter","syntaxHighlighting","originalStyle","get_if_ctx_1","toDiagnostic","codeMirrorRef","domTextMode","codeMirrorView","statusBar","askToFormat","tabSize","formatCompactKeyBinding","handleFormat","handleCompact","acceptTooLarge","askToFormatApplied","linterCompartment","Compartment","readOnlyCompartment","indentCompartment","tabSizeCompartment","themeCompartment","previousEscapeUnicodeCharacters","_ref82","initialText","EditorState","isValidSelection","toCodeMirrorSelection","extensions","keymap","of","indentWithTab","createLinter","lintGutter","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","foldGutter","drawSelection","dropCursor","allowMultipleSelections","indentOnInput","defaultHighlightStyle","fallback","bracketMatching","closeBrackets","autocompletion","rectangularSelection","crosshairCursor","highlightActiveLine","highlightSelectionMatches","closeBracketsKeymap","defaultKeymap","searchKeymap","historyKeymap","foldKeymap","completionKeymap","lintKeymap","indentationMarkers","hideFirstIndent","EditorView","domEventHandlers","dblclick","handleDoubleClick","updateListener","docChanged","onChangeCodeMirrorValueDebounced","selectionSet","emitOnSelect","jsonLang","lineWrapping","createIndent","theme","dark","hasDarkTheme","createCodeMirrorView","disableTextEditor","emitChange","setCodeMirrorContent","handleRepair","jsonStatus","jsonParseError","_ref81","setSelection","view","selectedText","jsmap","jsonSourceMap","pointers","_pointer$value","valueEnd","linter","linterCallback","delay","getPropertyValue","toRichValidationError","pointerName","keyEnd","findTextLocation","toRichParseError","newContent","forceUpdate","newText","changes","updateCanUndoRedo","EditorSelection","fromJSON","_refresh","_updateTheme","updateTheme","onChangeCodeMirrorValue","codeMirrorText","effects","reconfigure","indentUnit","repeat","wrappedLineIndent","undoDepth","redoDepth","toJSON","memoizedValidateText","handleShowMe","richParseError","handleSelectParseError","repairActionShowMe","faEye","eq","updateLinter","updateIndentation","updateTabSize","updateReadOnly","repairActions","_onSort2","_ref80","_x26","closeSearchPanel","openSearchPanel","func","containsValidArray","_ctx$2$stringify","_ctx$2$stringify2","isSelected","containsSearchResult","containsActiveSearchResult","onEdit","dblclick_handler","faCaretUp","t0","t0_value","columnName","_sortedColumn","sortDirectionName","onResize","WeakMap","t7_value","t5","t5_value","t7","nestedArrayPaths","maxLevel","findNestedArrays","hasNestedArrays","isEmptyDocument","documentType","nestedArrayPath","faRotate","onRefresh","_child_ctx$","constants_3","_child_ctx$2","_child_ctx$3","_ctx$11","create_if_block_11","td0_colspan_value","td1_colspan_value","th","_ctx$12","each_blocks_1","inlinevalue_changes","_getInRecursiveState","td","td_data_path_value","create_if_block_15","flattenColumns","_handleFocusSearch2","itemHeightsCache","newValidationErrors","patchedSortedColumn","createDefaultSelectionWhenUndefined","createDefaultSelection","searchBoxHeight","roughDistance","scrollToHorizontal","_callback","scrollToVertical","_refContents$querySel2","_refContents4","resolvedPath","_ref89","_onRenderContextMenu2","_ref88","onEditRow","createTableContextMenuItems","handleEditRow","handleDuplicateRow","handleInsertBeforeRow","handleInsertAfterRow","handleRemoveRow","_refContents5","_refContents6","_handleParsePastedJson2","_x28","_handleCut2","_handleCopy2","_handleInsertCharacter2","handleResizeRow","currentContent","newColumns","previousColumns","orderedColumns","newColumnsSet","maintainColumnOrder","showRefreshButton","extendedOperations","unshift","createNestedValueOperations","groupedValidationErrors","_x27","newSortedColumn","selectPreviousColumn","selectNextColumn","selectPreviousRow","selectNextRow","_x29","_event$clipboardData2","_ref90","resizeObserver_function","_jsonRepairModalProps2","refTreeMode","refTableMode","refTextMode","modeMenuItems","handleRenderMenu","handleRenderContextMenu","insideModal","separatorMenuItem","_refresh2","updatedItems","updatedItemsOriginal","cloneDeep","modal","_onRenderContextMenu3","itemsOriginal","acceptAutoRepair","faCaretLeft","jsoneditorroot_changes","refEditor","rootState","determineMode","stack","scrollToSelection","_last","updateState","_refEditor","currentState","absolutePath","pathDescription","parentJson","updatedParentContent","updatedParentState","_refEditor2","newMode","newError","_ref91","nestedModalState","_refEditor3","sortModalStates","_ctx$13","_ctx$14","colgroup","_ctx$15","_ctx$16","directions","selectedProperty","_sortModalStates$stat","selectedDirection","_sortModalStates$stat2","sortError","_selectedProperty","_properties","_selectedDirection","refJSONEditorRoot","sortModalProps","transformModalProps","alert","instanceId","jsonEditorModalProps","previousParser","_set","contentError","_update","_patch","_select","_expand","_collapse2","_acceptAutoRepair","_scrollTo2","_focus","_refresh3","_updateProps","_destroy","_toggleMode","_ref93","status","_x39","_ref94","_x30","_x31","_x32","_x33","_x34","_x35","_x36","_x37","_x38","_sortModalProps","_transformModalProps","_jsonEditorModalProps","option_1","option_1_value_value","select_class_value","handleMouseDown","refSelect","bindValue","applyFocus","selected_option","getJSONSchemaOptions","schema","schemaDefinitions","schemaForPath","findSchema","composite","enum","findEnum","topLevelSchema","currentSchema","possibleSchemas","subSchemas","oneOf","anyOf","allOf","$ref","_ref$match","schemaUrl","referencedSchema","auxNextPath","refPath","segment","patternProperties","additionalProperties","renderJSONSchemaEnum","enumValues","enumValue","optionsWithValue","EnumValue","createAjvValidator","ajv","ajvOptions","AjvDist","allErrors","verbose","$data","addSchema","createAjvInstance","onCreateAjv","opts","validateAjv","compile","improveAjvError","ajvError","instancePath","normalizeAjvError","enums","more","params","additionalProperty","jmespathQueryLanguage","examplePath","exampleValue","filterValueStr","stringifyPathForJmespath","stringifyProp","preprocessedJson","stringifyAndParse","jmespath","jsonpathQueryLanguage","expression","pathToString","JSONPathPlus","lettersOnlyRegex","lodashQueryLanguage","queryParts","actualValueGetter","isSafeInteger","createLodashPropertySelector","_query$match","_query$match2","chainCount","valueCount","Function","queryFn","javascriptQueryLanguage","createJSONEditor","_ref96","JSONEditorComponent","JSONEditor","_ref97"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,10,11,25,26,27,50,51,52,53,54,55,56,57,58,59,60]}